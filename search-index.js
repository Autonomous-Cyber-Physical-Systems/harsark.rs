var N=null,E="",T="t",U="u",searchIndex={};
var R=["Just like [`Cell`] but with [volatile] read / write…","result","VolatileCell","Reads the value of the register","try_from","try_into","borrow","borrow_mut","type_id","typeid","A potential output from `Cmp`, this is the type equivalent…","Instantiates a singleton representing this bit.","typenum","Instantiates a singleton representing this strictly…","to_isize","Output","This function isn't used in this crate, but may be useful…","The type representing either `True` or `False`","Method returning `True` or `False`.","Instantiates a singleton representing this unsigned integer.","typenum::bit","is_equal","is_greater","is_less_or_equal","is_not_equal","is_greater_or_equal","is_less","typenum::int","partial_div","typenum::uint","typenum::array","to_ordering","ordering","to_bool","to_usize","to_i16","to_i32","to_i64","partial_cmp","option","greater","bitand","bitxor","formatter","default","Unsigned","PartialDiv","IsGreater","IsLessOrEqual","IsNotEqual","IsGreaterOrEqual","SquareRoot","Logarithm2","criticalsection","Peripheral","CriticalSection","generic_array","mappedsequence","as_slice","as_mut_slice","genericarray","generic_array::iter","into_iter","generate","pop_back","pop_front","AddLength","MappedGenericSequence","FunctionalSequence","GenericArrayIter","GenericSequence","Lengthen","ArrayLength","GenericArray","AsMutSlice","A newtype with alignment of at least `A` bytes","Aligned","deref_mut","cortex_m","Critical section token","A \"mutex\" based on critical sections","Interrupt number","Returns the number associated with an interrupt","aligned","Core peripherals","Debug Control Block","Data Watchpoint and Trace unit","Instrumentation Trace Macrocell","Memory Protection Unit","Nested Vector Interrupt Controller","System Control Block","SysTick: System Timer","Cache and branch predictor maintenance operations","cortex_m::peripheral","I-cache invalidate all to PoU","I-cache invalidate by MVA to PoU","D-cache invalidate by MVA to PoC","D-cache invalidate by set-way","D-cache clean by MVA to PoU","D-cache clean by MVA to PoC","D-cache clean by set-way","D-cache clean and invalidate by MVA to PoC","D-cache clean and invalidate by set-way","Branch predictor invalidate all","RegisterBlock","Register block","csselrcachetype","Comparator","Flash Patch and Breakpoint unit","Lock Access","Lock Status","Stimulus Port","Disables `interrupt`","Forces `interrupt` into pending state","Clears `interrupt`'s pending state","Exception","cortex_m::peripheral::scb","MemoryManagement","Memory management interrupt (not present on Cortex-M0…","Bus fault interrupt (not present on Cortex-M0 variants)","UsageFault","Usage fault interrupt (not present on Cortex-M0 variants)","SV call interrupt","DebugMonitor","Debug monitor interrupt (not present on Cortex-M0 variants)","Pend SV interrupt","System Tick interrupt","Initiate a system reset request to reset the MCU","Set the PENDSTCLR bit in the ICSR register which will…","get_priority","set_priority","systemhandler","systclksource","Returns a pointer to the register block","cortex_m::register","Control register","Privileged","Unprivileged","Reads the CPU register","Thread mode privilege level","Currently active stack pointer","Whether context floating-point is currently active","is_active","faultmask","Inactive","is_inactive","Writes `bits` to the CPU register","Application Program Status Register","Returns the contents of the register as raw bits","cortex_m::interrupt","cortex_m::peripheral::cbp","cortex_m::peripheral::cpuid","cortex_m::peripheral::dcb","cortex_m::peripheral::dwt","cortex_m::peripheral::fpb","cortex_m::peripheral::itm","cortex_m::peripheral::mpu","cortex_m::peripheral::nvic","cortex_m::peripheral::syst","cortex_m::peripheral::tpiu","cortex_m::register::control","cortex_m::register::faultmask","cortex_m::register::primask","cortex_m::register::apsr","vectactive","exception","Creates a critical section token","Creates a new mutex","Borrows the data for the duration of the critical section","Peripherals","CsselrCacheType","VectActive","SystemHandler","SystClkSource","Faultmask","cortex_m_semihosting","write_all","Attempts to write an entire `buffer` into this sink","cortex_m_semihosting::nr","cortex_m_semihosting::debug","cortex_m_semihosting::hio","write_str","ExceptionFrame","hartex_rust","kernelerror","eventid","booleanvector","resource","semaphoreid","hartex_rust::types","eventtabletype","eventtype","messageid","EventTableType","EventType","hartex_rust::config","hartex_rust::kernel","broadcast","event_manager","is_enabled","enable_event","set_semaphore","set_tasks","set_message","set_next_event","hartex_rust::system","resourceid","signal_and_release","test_and_reset","SemaphoresTable","add_semaphore","is_preemptive","Initialize the switcher system","start_kernel","create_task","taskcontrolblock","block_tasks","unblock_tasks","is_privileged","hartex_rust::utils","generate_task_mask","FreeRunning","SemaphoreId","MessageId","ResourceId","BooleanVector","new_FreeRunning","new_OnOff","resources","init_peripherals","semaphores","disable_preemption","enable_preemption","get_curr_tid","peripherals","task_exit","ticktype","get_msec_10","hartex_rust::kernel::messages","hartex_rust::kernel::resources","hartex_rust::system::event_manager","hartex_rust::system::resource_manager","hartex_rust::system::software_comm_bus","hartex_rust::system::software_sync_bus","hartex_rust::system::task_manager","hartex_rust::system::time_manager","hartex_rust::utils::errors","Resource","EventIndexTable","EventManager","ResourceControlBlock","ResourceManager","MessageControlBlock","MessagingManager","SemaphoreControlBlock","Scheduler","TaskControlBlock","KernelError","This Module exports the public Kernel routines defined in…","A boolean vector in which, if a bit at a position is true,…","Create a new task with the configuration set as arguments…","Disables preemptive scheduling.","Enables preemptive scheduling.","Returns the TaskId of the currently running task in the…","Returns if the scheduler is currently operating…","The Kernel releases the tasks in the `task_mask`, these…","Starts the Kernel scheduler, which starts scheduling tasks…","The `task_exit` function is called just after a task…","Task Manager The Definition of Data-structures required…","A Safe Container to store a resource.","This field holds the actual resource that has to be locked.","Holds the ResourceId allotted by the resource manager for…","This function instantiates the `cortex_m::Peripherals`…","It is used to instantiate a new Resource. This function…","This method, when called, appends the `tasks_mask` to the…","A Safe Container to store a resource, it can hold resource…","Calls the `add_semaphore` method on the…","Calls the `signal_and_release` method on the…","Calls the `test_and_reset` method on the…","It holds a variable of a generic type so that any message…","Holds the Message that has to be sent to the receiver tasks.","Holds the MessageId corresponding to the message assigned…","Returns an initialized Message Container.","An instance of `EventIndexTable` which holds list of…","Updates the opcode by setting the bit corresponding to…","Events are executed at multiples of certain time units.…","It represents events that repeatedly occur after a…","It represents events that are dispatched once and are then…","This function is used to enable events if disabled. Useful…","Creates a new Event of type EventType::FreeRunning.","Creates a new Event of type EventType::OnOff.","Configure the event with EventId as `event_id` to…","Configure the event with EventId as `event_id` to dispatch…","Configure the event with EventId as `event_id` for…","Configure the event with EventId as event_id for releasing…","This method updates the Kernel of passing of 10…","Returns the time elapsed since the starting of the…","Returns the 10 Milliseconds field of current time.","Takes a list of TaskIds and returns a BooleanVector…","software_comm_bus","software_sync_bus","hartex_rust::kernel::software_comm_bus","hartex_rust::kernel::resource_management","Initializes the Kernel scheduler. `is_preemptive` defines…"];
searchIndex["aligned"]={"doc":R[75],"i":[[3,"A2",R[83],"2-byte alignment",N,N],[3,"A4",E,"4-byte alignment",N,N],[3,"A8",E,"8-byte alignment",N,N],[3,"A16",E,"16-byte alignment",N,N],[3,R[76],E,R[75],N,N],[5,R[76],E,"Changes the alignment of `value` to be at least `A` bytes",N,[[[T]],[R[83]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[1]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[1]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,R[77],E,E,4,[[["self"]],[T]]],[11,"deref",E,E,4,[[["self"]],[T]]],[11,R[58],E,E,4,[[["self"]]]],[11,R[59],E,E,4,[[["self"]]]]],"p":[[3,"A2"],[3,"A4"],[3,"A8"],[3,"A16"],[3,R[76]]]};
searchIndex["as_slice"]={"doc":"`AsSlice` and `AsMutSlice` traits","i":[[8,"AsSlice",R[58],"Something that can be seen as an immutable slice",N,N],[16,"Element",E,"The element type of the slice view",0,N],[10,R[58],E,"Returns the immutable slice view of `Self`",0,[[["self"]]]],[8,R[74],E,"Something that can be seen as an mutable slice",N,N],[10,R[59],E,"Returns the mutable slice view of `Self`",1,[[["self"]]]]],"p":[[8,"AsSlice"],[8,R[74]]]};
searchIndex["bare_metal"]={"doc":"Abstractions common to bare metal systems","i":[[3,R[54],"bare_metal","A peripheral",N,N],[3,R[55],E,R[79],N,N],[3,"Mutex",E,R[80],N,N],[8,"Nr",E,R[81],N,N],[10,"nr",E,R[82],0,[[["self"]],["u8"]]],[11,"new",E,"Creates a new peripheral",1,[[["usize"]],["self"]]],[11,R[6],E,"Borrows the peripheral for the duration of a critical…",1,[[["self"],[R[53]]],[T]]],[11,"get",E,R[133],1,[[["self"]]]],[11,"new",E,R[166],2,[[],["self"]]],[11,"new",E,R[167],3,[[[T]],["self"]]],[11,R[6],E,R[168],3,[[["self"],[R[53]]],[T]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[1]]]]],"p":[[8,"Nr"],[3,R[54]],[3,R[55]],[3,"Mutex"]]};
searchIndex["cortex_m"]={"doc":"Low level access to Cortex-M processors","i":[[0,"asm",R[78],"Miscellaneous assembly instructions",N,N],[5,"bkpt","cortex_m::asm","Puts the processor in Debug state. Debuggers can pick this…",N,[[]]],[5,"delay",E,"Blocks the program for at least `n` instruction cycles",N,[[["u32"]]]],[5,"nop",E,"A no-operation. Useful to prevent delay loops from being…",N,[[]]],[5,"wfe",E,"Wait For Event",N,[[]]],[5,"wfi",E,"Wait For Interrupt",N,[[]]],[5,"sev",E,"Send Event",N,[[]]],[5,"isb",E,"Instruction Synchronization Barrier",N,[[]]],[5,"dsb",E,"Data Synchronization Barrier",N,[[]]],[5,"dmb",E,"Data Memory Barrier",N,[[]]],[0,"interrupt",R[78],"Interrupts",N,N],[3,R[55],R[149],R[79],N,N],[3,"Mutex",E,R[80],N,N],[8,"Nr",E,R[81],N,N],[10,"nr",E,R[82],0,[[["self"]],["u8"]]],[5,"disable",E,"Disables all interrupts",N,[[]]],[5,"enable",E,"Enables all the interrupts",N,[[]]],[5,"free",E,"Execute closure `f` in an interrupt-free context.",N,[[["f"]],["r"]]],[0,"itm",R[78],R[87],N,N],[5,R[176],"cortex_m::itm","Writes a `buffer` to the ITM `port`",N,[[["stim"]]]],[5,"write_aligned",E,"Writes a 4-byte aligned `buffer` to the ITM `port`",N,[[[R[83]],["stim"]]]],[5,"write_fmt",E,"Writes `fmt::Arguments` to the ITM `port`",N,[[["arguments"],["stim"]]]],[5,R[181],E,"Writes a string to the ITM `port`",N,[[["stim"],["str"]]]],[0,"peripheral",R[78],R[84],N,N],[3,R[169],R[93],R[84],N,N],[12,"CBP",E,"Cache and branch predictor maintenance operations (not…",1,N],[12,"CPUID",E,"CPUID",1,N],[12,"DCB",E,R[85],1,N],[12,"DWT",E,R[86],1,N],[12,"FPB",E,"Flash Patch and Breakpoint unit (not present on Cortex-M0…",1,N],[12,"FPU",E,"Floating Point Unit (only present on…",1,N],[12,"ITM",E,"Instrumentation Trace Macrocell (not present on Cortex-M0…",1,N],[12,"MPU",E,R[88],1,N],[12,"NVIC",E,R[89],1,N],[12,"SCB",E,R[90],1,N],[12,"SYST",E,R[91],1,N],[12,"TPIU",E,"Trace Port Interface Unit (not present on Cortex-M0…",1,N],[3,"CBP",E,R[92],N,N],[3,"CPUID",E,"CPUID",N,N],[3,"DCB",E,R[85],N,N],[3,"DWT",E,R[86],N,N],[3,"FPB",E,R[108],N,N],[3,"FPU",E,"Floating Point Unit",N,N],[3,"ITM",E,R[87],N,N],[3,"MPU",E,R[88],N,N],[3,"NVIC",E,R[89],N,N],[3,"SCB",E,R[90],N,N],[3,"SYST",E,R[91],N,N],[3,"TPIU",E,"Trace Port Interface Unit",N,N],[0,"cbp",E,R[92],N,N],[3,R[104],R[150],R[105],N,N],[12,"iciallu",E,R[94],2,N],[12,"icimvau",E,R[95],2,N],[12,"dcimvac",E,R[96],2,N],[12,"dcisw",E,R[97],2,N],[12,"dccmvau",E,R[98],2,N],[12,"dccmvac",E,R[99],2,N],[12,"dccsw",E,R[100],2,N],[12,"dccimvac",E,R[101],2,N],[12,"dccisw",E,R[102],2,N],[12,"bpiall",E,R[103],2,N],[11,"iciallu",R[93],R[94],3,[[["self"]]]],[11,"icimvau",E,R[95],3,[[["self"],["u32"]]]],[11,"dcimvac",E,R[96],3,[[["self"],["u32"]]]],[11,"dcisw",E,R[97],3,[[["self"],["u16"]]]],[11,"dccmvau",E,R[98],3,[[["self"],["u32"]]]],[11,"dccmvac",E,R[99],3,[[["self"],["u32"]]]],[11,"dccsw",E,R[100],3,[[["self"],["u16"]]]],[11,"dccimvac",E,R[101],3,[[["self"],["u32"]]]],[11,"dccisw",E,R[102],3,[[["self"],["u16"]]]],[11,"bpiall",E,R[103],3,[[["self"]]]],[0,"cpuid",E,"CPUID",N,N],[3,R[104],R[151],R[105],N,N],[12,"base",E,"CPUID base",4,N],[12,"pfr",E,"Processor Feature (not present on Cortex-M0 variants)",4,N],[12,"dfr",E,"Debug Feature (not present on Cortex-M0 variants)",4,N],[12,"afr",E,"Auxiliary Feature (not present on Cortex-M0 variants)",4,N],[12,"mmfr",E,"Memory Model Feature (not present on Cortex-M0 variants)",4,N],[12,"isar",E,"Instruction Set Attribute (not present on Cortex-M0…",4,N],[12,"clidr",E,"Cache Level ID (only present on Cortex-M7)",4,N],[12,"ctr",E,"Cache Type (only present on Cortex-M7)",4,N],[12,"ccsidr",E,"Cache Size ID (only present on Cortex-M7)",4,N],[12,"csselr",E,"Cache Size Selection (only present on Cortex-M7)",4,N],[4,R[170],E,"Type of cache to select on CSSELR writes.",N,N],[13,"DataOrUnified",E,"Select DCache or unified cache",5,N],[13,"Instruction",E,"Select ICache",5,N],[11,"select_cache",R[93],"Selects the current CCSIDR",6,[[["self"],[R[106]],["u8"]]]],[11,"cache_num_sets_ways",E,"Returns the number of sets and ways in the selected cache",6,[[["self"],[R[106]],["u8"]]]],[0,"dcb",E,R[85],N,N],[3,R[104],R[152],R[105],N,N],[12,"dhcsr",E,"Debug Halting Control and Status",7,N],[12,"dcrsr",E,"Debug Core Register Selector",7,N],[12,"dcrdr",E,"Debug Core Register Data",7,N],[12,"demcr",E,"Debug Exception and Monitor Control",7,N],[11,"enable_trace",R[93],"Enables TRACE. This is for example required by the…",8,[[["self"]]]],[11,"disable_trace",E,"Disables TRACE. See `DCB::enable_trace()` for more details",8,[[["self"]]]],[11,"is_debugger_attached",E,"Is there a debugger attached? (see note)",8,[[],["bool"]]],[0,"dwt",E,R[86],N,N],[3,R[104],R[153],R[105],N,N],[12,"ctrl",E,"Control",9,N],[12,"cyccnt",E,"Cycle Count",9,N],[12,"cpicnt",E,"CPI Count",9,N],[12,"exccnt",E,"Exception Overhead Count",9,N],[12,"sleepcnt",E,"Sleep Count",9,N],[12,"lsucnt",E,"LSU Count",9,N],[12,"foldcnt",E,"Folded-instruction Count",9,N],[12,"pcsr",E,"Program Counter Sample",9,N],[12,"c",E,"Comparators",9,N],[12,"lar",E,R[109],9,N],[12,"lsr",E,R[110],9,N],[3,R[107],E,R[107],N,N],[12,"comp",E,R[107],10,N],[12,"mask",E,"Comparator Mask",10,N],[12,"function",E,"Comparator Function",10,N],[11,"enable_cycle_counter",R[93],"Enables the cycle counter",11,[[["self"]]]],[11,"get_cycle_count",E,"Returns the current clock cycle count",11,[[],["u32"]]],[0,"fpb",E,R[108],N,N],[3,R[104],R[154],R[105],N,N],[12,"ctrl",E,"Control",12,N],[12,"remap",E,"Remap",12,N],[12,"comp",E,R[107],12,N],[12,"lar",E,R[109],12,N],[12,"lsr",E,R[110],12,N],[0,"itm",R[93],R[87],N,N],[3,R[104],R[155],R[105],N,N],[12,"stim",E,R[111],13,N],[12,"ter",E,"Trace Enable",13,N],[12,"tpr",E,"Trace Privilege",13,N],[12,"tcr",E,"Trace Control",13,N],[12,"lar",E,R[109],13,N],[12,"lsr",E,R[110],13,N],[3,"Stim",E,R[111],N,N],[11,"write_u8",E,"Writes an `u8` payload into the stimulus port",14,[[["self"],["u8"]]]],[11,"write_u16",E,"Writes an `u16` payload into the stimulus port",14,[[["self"],["u16"]]]],[11,"write_u32",E,"Writes an `u32` payload into the stimulus port",14,[[["self"],["u32"]]]],[11,"is_fifo_ready",E,"Returns `true` if the stimulus port is ready to accept…",14,[[["self"]],["bool"]]],[0,"mpu",R[93],R[88],N,N],[3,R[104],R[156],R[105],N,N],[12,"_type",E,"Type",15,N],[12,"ctrl",E,"Control",15,N],[12,"rnr",E,"Region Number",15,N],[12,"rbar",E,"Region Base Address",15,N],[12,"rasr",E,"Region Attribute and Size",15,N],[12,"rbar_a1",E,"Alias 1 of RBAR",15,N],[12,"rsar_a1",E,"Alias 1 of RSAR",15,N],[12,"rbar_a2",E,"Alias 2 of RBAR",15,N],[12,"rsar_a2",E,"Alias 2 of RSAR",15,N],[12,"rbar_a3",E,"Alias 3 of RBAR",15,N],[12,"rsar_a3",E,"Alias 3 of RSAR",15,N],[0,"nvic",R[93],R[89],N,N],[3,R[104],R[157],R[105],N,N],[12,"iser",E,"Interrupt Set-Enable",16,N],[12,"icer",E,"Interrupt Clear-Enable",16,N],[12,"ispr",E,"Interrupt Set-Pending",16,N],[12,"icpr",E,"Interrupt Clear-Pending",16,N],[12,"iabr",E,"Interrupt Active Bit (not present on Cortex-M0 variants)",16,N],[12,"ipr",E,"Interrupt Priority",16,N],[12,"stir",E,"Software Trigger Interrupt",16,N],[11,"request",R[93],"Request an IRQ in software",17,[[["self"],["i"]]]],[11,"clear_pending",E,R[114],17,[[["self"],["i"]]]],[11,"mask",E,R[112],17,[[["i"]]]],[11,"unmask",E,"Enables `interrupt`",17,[[["i"]]]],[11,"disable",E,R[112],17,[[["self"],["i"]]]],[11,"enable",E,"WARNING This method is a soundness hole in the API; it…",17,[[["self"],["i"]]]],[11,R[129],E,"Returns the NVIC priority of `interrupt`",17,[[["i"]],["u8"]]],[11,R[142],E,"Is `interrupt` active or pre-empted and stacked",17,[[["i"]],["bool"]]],[11,R[199],E,"Checks if `interrupt` is enabled",17,[[["i"]],["bool"]]],[11,"is_pending",E,"Checks if `interrupt` is pending",17,[[["i"]],["bool"]]],[11,"pend",E,R[113],17,[[["i"]]]],[11,"set_pending",E,R[113],17,[[["self"],["i"]]]],[11,R[130],E,"Sets the \"priority\" of `interrupt` to `prio`",17,[[["self"],["i"],["u8"]]]],[11,"unpend",E,R[114],17,[[["i"]]]],[0,"scb",E,R[90],N,N],[3,R[104],R[116],R[105],N,N],[12,"icsr",E,"Interrupt Control and State",18,N],[12,"vtor",E,"Vector Table Offset (not present on Cortex-M0 variants)",18,N],[12,"aircr",E,"Application Interrupt and Reset Control",18,N],[12,"scr",E,"System Control",18,N],[12,"ccr",E,"Configuration and Control",18,N],[12,"shpr",E,"System Handler Priority (word accessible only on Cortex-M0…",18,N],[12,"shcsr",E,"System Handler Control and State",18,N],[12,"cfsr",E,"Configurable Fault Status (not present on Cortex-M0…",18,N],[12,"hfsr",E,"HardFault Status (not present on Cortex-M0 variants)",18,N],[12,"dfsr",E,"Debug Fault Status (not present on Cortex-M0 variants)",18,N],[12,"mmfar",E,"MemManage Fault Address (not present on Cortex-M0 variants)",18,N],[12,"bfar",E,"BusFault Address (not present on Cortex-M0 variants)",18,N],[12,"afsr",E,"Auxiliary Fault Status (not present on Cortex-M0 variants)",18,N],[12,"cpacr",E,"Coprocessor Access Control (not present on Cortex-M0…",18,N],[4,R[115],E,"Processor core exceptions (internal interrupts)",N,N],[13,"NonMaskableInt",E,"Non maskable interrupt",19,N],[13,"HardFault",E,"Hard fault interrupt",19,N],[13,R[117],E,R[118],19,N],[13,"BusFault",E,R[119],19,N],[13,R[120],E,R[121],19,N],[13,"SVCall",E,R[122],19,N],[13,R[123],E,R[124],19,N],[13,"PendSV",E,R[125],19,N],[13,"SysTick",E,R[126],19,N],[4,R[171],E,"Active exception number",N,N],[13,"ThreadMode",E,"Thread mode",20,N],[13,R[115],E,"Processor core exception (internal interrupts)",20,N],[13,"Interrupt",E,"Device specific exception (external interrupts)",20,N],[12,"irqn","cortex_m::peripheral::scb::VectActive","Interrupt number. This number is always within half open…",20,N],[4,R[172],R[116],"System handlers, exceptions with configurable priority",N,N],[13,R[117],E,R[118],21,N],[13,"BusFault",E,R[119],21,N],[13,R[120],E,R[121],21,N],[13,"SVCall",E,R[122],21,N],[13,R[123],E,R[124],21,N],[13,"PendSV",E,R[125],21,N],[13,"SysTick",E,R[126],21,N],[11,"vect_active",R[93],"Returns the active exception number",22,[[],[R[164]]]],[11,"irqn",R[116],"Returns the IRQ number of this `Exception`",19,[[["self"]],["i8"]]],[11,"from",E,"Converts a `byte` into `VectActive`",20,[[["u8"]],[R[39]]]],[11,"enable_icache",R[93],"Enables I-Cache if currently disabled",22,[[["self"]]]],[11,"disable_icache",E,"Disables I-Cache if currently enabled",22,[[["self"]]]],[11,"icache_enabled",E,"Returns whether the I-Cache is currently enabled",22,[[],["bool"]]],[11,"invalidate_icache",E,"Invalidates I-Cache",22,[[["self"]]]],[11,"enable_dcache",E,"Enables D-cache if currently disabled",22,[[["self"],["cpuid"]]]],[11,"disable_dcache",E,"Disables D-cache if currently enabled",22,[[["self"],["cpuid"]]]],[11,"dcache_enabled",E,"Returns whether the D-Cache is currently enabled",22,[[],["bool"]]],[11,"clean_dcache",E,"Cleans D-cache",22,[[["self"],["cpuid"]]]],[11,"clean_invalidate_dcache",E,"Cleans and invalidates D-cache",22,[[["self"],["cpuid"]]]],[11,"invalidate_dcache_by_address",E,"Invalidates D-cache by address",22,[[["self"],["usize"]]]],[11,"clean_dcache_by_address",E,"Cleans D-cache by address",22,[[["self"],["usize"]]]],[11,"clean_invalidate_dcache_by_address",E,"Cleans and invalidates D-cache by address",22,[[["self"],["usize"]]]],[11,"set_sleepdeep",E,"Set the SLEEPDEEP bit in the SCR register",22,[[["self"]]]],[11,"clear_sleepdeep",E,"Clear the SLEEPDEEP bit in the SCR register",22,[[["self"]]]],[11,"set_sleeponexit",E,"Set the SLEEPONEXIT bit in the SCR register",22,[[["self"]]]],[11,"clear_sleeponexit",E,"Clear the SLEEPONEXIT bit in the SCR register",22,[[["self"]]]],[11,"system_reset",E,R[127],22,[[["self"]]]],[11,"sys_reset",E,R[127],22,[[]]],[11,"set_pendsv",E,"Set the PENDSVSET bit in the ICSR register which will pend…",22,[[]]],[11,"is_pendsv_pending",E,"Check if PENDSVSET bit in the ICSR register is set meaning…",22,[[],["bool"]]],[11,"clear_pendsv",E,"Set the PENDSVCLR bit in the ICSR register which will…",22,[[]]],[11,"set_pendst",E,R[128],22,[[]]],[11,"is_pendst_pending",E,"Check if PENDSTSET bit in the ICSR register is set meaning…",22,[[],["bool"]]],[11,"clear_pendst",E,R[128],22,[[]]],[11,R[129],E,"Returns the hardware priority of `system_handler`",22,[[[R[131]]],["u8"]]],[11,R[130],E,"Sets the hardware priority of `system_handler` to `prio`",22,[[["self"],[R[131]],["u8"]]]],[0,"syst",E,R[91],N,N],[3,R[104],R[158],R[105],N,N],[12,"csr",E,"Control and Status",23,N],[12,"rvr",E,"Reload Value",23,N],[12,"cvr",E,"Current Value",23,N],[12,"calib",E,"Calibration Value",23,N],[4,R[173],E,"SysTick clock source",N,N],[13,"Core",E,"Core-provided clock",24,N],[13,"External",E,"External reference clock",24,N],[11,"clear_current",R[93],"Clears current value to 0",25,[[["self"]]]],[11,"disable_counter",E,"Disables counter",25,[[["self"]]]],[11,"disable_interrupt",E,"Disables SysTick interrupt",25,[[["self"]]]],[11,"enable_counter",E,"Enables counter",25,[[["self"]]]],[11,"enable_interrupt",E,"Enables SysTick interrupt",25,[[["self"]]]],[11,"get_clock_source",E,"Gets clock source",25,[[["self"]],[R[132]]]],[11,"get_current",E,"Gets current value",25,[[],["u32"]]],[11,"get_reload",E,"Gets reload value",25,[[],["u32"]]],[11,"get_ticks_per_10ms",E,"Returns the reload value with which the counter would wrap…",25,[[],["u32"]]],[11,"has_reference_clock",E,"Checks if an external reference clock is available",25,[[],["bool"]]],[11,"has_wrapped",E,"Checks if the counter wrapped (underflowed) since the last…",25,[[["self"]],["bool"]]],[11,"is_counter_enabled",E,"Checks if counter is enabled",25,[[["self"]],["bool"]]],[11,"is_interrupt_enabled",E,"Checks if SysTick interrupt is enabled",25,[[["self"]],["bool"]]],[11,"is_precise",E,"Checks if the calibration value is precise",25,[[],["bool"]]],[11,"set_clock_source",E,"Sets clock source",25,[[["self"],[R[132]]]]],[11,"set_reload",E,"Sets reload value",25,[[["self"],["u32"]]]],[0,"tpiu",E,"Trace Port Interface Unit;",N,N],[3,R[104],R[159],R[105],N,N],[12,"sspsr",E,"Supported Parallel Port Sizes",26,N],[12,"cspsr",E,"Current Parallel Port Size",26,N],[12,"acpr",E,"Asynchronous Clock Prescaler",26,N],[12,"sppr",E,"Selected Pin Control",26,N],[12,"ffcr",E,"Formatter and Flush Control",26,N],[12,"lar",E,R[109],26,N],[12,"lsr",E,R[110],26,N],[12,"_type",E,"TPIU Type",26,N],[11,"take",R[93],"Returns all the core peripherals once",1,[[],[R[39]]]],[11,"steal",E,"Unchecked version of `Peripherals::take`",1,[[],["self"]]],[11,"ptr",E,R[133],3,[[]]],[11,"ptr",E,R[133],6,[[]]],[11,"ptr",E,R[133],8,[[]]],[11,"ptr",E,R[133],11,[[]]],[11,"ptr",E,R[133],27,[[]]],[11,"ptr",E,R[133],28,[[]]],[11,"ptr",E,R[133],29,[[]]],[11,"ptr",E,R[133],17,[[]]],[11,"ptr",E,R[133],22,[[]]],[11,"ptr",E,R[133],25,[[]]],[11,"ptr",E,R[133],30,[[]]],[0,"register",R[78],"Processor core registers",N,N],[0,"basepri",R[134],"Base Priority Mask Register",N,N],[5,"read","cortex_m::register::basepri",R[138],N,[[],["u8"]]],[5,"write",E,"Writes to the CPU register",N,[[["u8"]]]],[0,"basepri_max",R[134],"Base Priority Mask Register (conditional write)",N,N],[5,"write","cortex_m::register::basepri_max","Writes to BASEPRI if",N,[[["u8"]]]],[0,"control",R[134],R[135],N,N],[3,"Control",R[160],R[135],N,N],[4,"Npriv",E,R[139],N,N],[13,R[136],E,R[136],31,N],[13,R[137],E,R[137],31,N],[4,"Spsel",E,R[140],N,N],[13,"Msp",E,"MSP is the current stack pointer",32,N],[13,"Psp",E,"PSP is the current stack pointer",32,N],[4,"Fpca",E,R[141],N,N],[13,"Active",E,"Floating-point context active.",33,N],[13,"NotActive",E,"No floating-point context active",33,N],[5,"read",E,R[138],N,[[],["control"]]],[11,"bits",E,R[148],34,[[["self"]],["u32"]]],[11,"npriv",E,R[139],34,[[["self"]],["npriv"]]],[11,"spsel",E,R[140],34,[[["self"]],["spsel"]]],[11,"fpca",E,R[141],34,[[["self"]],["fpca"]]],[11,R[218],E,"Is in privileged thread mode?",31,[[["self"]],["bool"]]],[11,"is_unprivileged",E,"Is in unprivileged thread mode?",31,[[["self"]],["bool"]]],[11,"is_msp",E,"Is MSP the current stack pointer?",32,[[["self"]],["bool"]]],[11,"is_psp",E,"Is PSP the current stack pointer?",32,[[["self"]],["bool"]]],[11,R[142],E,"Is a floating-point context active?",33,[[["self"]],["bool"]]],[11,"is_not_active",E,"Is a floating-point context not active?",33,[[["self"]],["bool"]]],[0,R[143],R[134],"Fault Mask Register",N,N],[4,R[174],R[161],"All exceptions are ...",N,N],[13,"Active",E,"Active",35,N],[13,R[144],E,"Inactive, expect for NMI",35,N],[5,"read",E,R[138],N,[[],[R[143]]]],[11,R[142],E,"All exceptions are active",35,[[["self"]],["bool"]]],[11,R[145],E,"All exceptions, except for NMI, are inactive",35,[[["self"]],["bool"]]],[0,"msp",R[134],"Main Stack Pointer",N,N],[5,"read","cortex_m::register::msp",R[138],N,[[],["u32"]]],[5,"write",E,R[146],N,[[["u32"]]]],[0,"primask",R[134],"Priority mask register",N,N],[4,"Primask",R[162],"All exceptions with configurable priority are ...",N,N],[13,"Active",E,"Active",36,N],[13,R[144],E,R[144],36,N],[5,"read",E,R[138],N,[[],["primask"]]],[11,R[142],E,"All exceptions with configurable priority are active",36,[[["self"]],["bool"]]],[11,R[145],E,"All exceptions with configurable priority are inactive",36,[[["self"]],["bool"]]],[0,"psp",R[134],"Process Stack Pointer",N,N],[5,"read","cortex_m::register::psp",R[138],N,[[],["u32"]]],[5,"write",E,R[146],N,[[["u32"]]]],[0,"apsr",R[134],R[147],N,N],[3,"Apsr",R[163],R[147],N,N],[5,"read",E,R[138],N,[[],["apsr"]]],[11,"bits",E,R[148],37,[[["self"]],["u32"]]],[11,"q",E,"DSP overflow and saturation flag",37,[[["self"]],["bool"]]],[11,"v",E,"Overflow flag",37,[[["self"]],["bool"]]],[11,"c",E,"Carry or borrow flag",37,[[["self"]],["bool"]]],[11,"z",E,"Zero flag",37,[[["self"]],["bool"]]],[11,"n",E,"Negative flag",37,[[["self"]],["bool"]]],[0,"lr",R[134],"Link register",N,N],[5,"read","cortex_m::register::lr",R[138],N,[[],["u32"]]],[5,"write",E,R[146],N,[[["u32"]]]],[0,"pc",R[134],"Program counter",N,N],[5,"read","cortex_m::register::pc",R[138],N,[[],["u32"]]],[5,"write",E,R[146],N,[[["u32"]]]],[14,"iprint",R[78],"Macro for sending a formatted string through an ITM channel",N,N],[14,"iprintln",E,"Macro for sending a formatted string through an ITM…",N,N],[14,"singleton",E,"Macro to create a mutable reference to a statically…",N,N],[11,"from",R[149],E,38,[[[T]],[T]]],[11,R[4],E,E,38,[[[U]],[R[1]]]],[11,"into",E,E,38,[[],[U]]],[11,R[5],E,E,38,[[],[R[1]]]],[11,R[6],E,E,38,[[["self"]],[T]]],[11,R[7],E,E,38,[[["self"]],[T]]],[11,R[8],E,E,38,[[["self"]],[R[9]]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[4],E,E,39,[[[U]],[R[1]]]],[11,"into",E,E,39,[[],[U]]],[11,R[5],E,E,39,[[],[R[1]]]],[11,R[6],E,E,39,[[["self"]],[T]]],[11,R[7],E,E,39,[[["self"]],[T]]],[11,R[8],E,E,39,[[["self"]],[R[9]]]],[11,"from",R[93],E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[1]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[1]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[1]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[1]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[1]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[1]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[1]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[1]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[4],E,E,40,[[[U]],[R[1]]]],[11,"into",E,E,40,[[],[U]]],[11,R[5],E,E,40,[[],[R[1]]]],[11,R[6],E,E,40,[[["self"]],[T]]],[11,R[7],E,E,40,[[["self"]],[T]]],[11,R[8],E,E,40,[[["self"]],[R[9]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[1]]]],[11,"into",E,E,28,[[],[U]]],[11,R[5],E,E,28,[[],[R[1]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[1]]]],[11,"into",E,E,29,[[],[U]]],[11,R[5],E,E,29,[[],[R[1]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[1]]]],[11,"into",E,E,17,[[],[U]]],[11,R[5],E,E,17,[[],[R[1]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"from",E,E,22,[[[T]],[T]]],[11,R[4],E,E,22,[[[U]],[R[1]]]],[11,"into",E,E,22,[[],[U]]],[11,R[5],E,E,22,[[],[R[1]]]],[11,R[6],E,E,22,[[["self"]],[T]]],[11,R[7],E,E,22,[[["self"]],[T]]],[11,R[8],E,E,22,[[["self"]],[R[9]]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[4],E,E,25,[[[U]],[R[1]]]],[11,"into",E,E,25,[[],[U]]],[11,R[5],E,E,25,[[],[R[1]]]],[11,R[6],E,E,25,[[["self"]],[T]]],[11,R[7],E,E,25,[[["self"]],[T]]],[11,R[8],E,E,25,[[["self"]],[R[9]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[1]]]],[11,"into",E,E,30,[[],[U]]],[11,R[5],E,E,30,[[],[R[1]]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"from",R[150],E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",R[151],E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[1]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[1]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[1]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[1]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",R[152],E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[1]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[1]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"from",R[153],E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[1]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[1]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[1]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[1]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",R[154],E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[1]]]],[11,"into",E,E,12,[[],[U]]],[11,R[5],E,E,12,[[],[R[1]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"from",R[155],E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[1]]]],[11,"into",E,E,13,[[],[U]]],[11,R[5],E,E,13,[[],[R[1]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[1]]]],[11,"into",E,E,14,[[],[U]]],[11,R[5],E,E,14,[[],[R[1]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"from",R[156],E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[1]]]],[11,"into",E,E,15,[[],[U]]],[11,R[5],E,E,15,[[],[R[1]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"from",R[157],E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[1]]]],[11,"into",E,E,16,[[],[U]]],[11,R[5],E,E,16,[[],[R[1]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"from",R[116],E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[1]]]],[11,"into",E,E,18,[[],[U]]],[11,R[5],E,E,18,[[],[R[1]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[4],E,E,19,[[[U]],[R[1]]]],[11,"into",E,E,19,[[],[U]]],[11,R[5],E,E,19,[[],[R[1]]]],[11,R[6],E,E,19,[[["self"]],[T]]],[11,R[7],E,E,19,[[["self"]],[T]]],[11,R[8],E,E,19,[[["self"]],[R[9]]]],[11,"from",E,E,20,[[[T]],[T]]],[11,R[4],E,E,20,[[[U]],[R[1]]]],[11,"into",E,E,20,[[],[U]]],[11,R[5],E,E,20,[[],[R[1]]]],[11,R[6],E,E,20,[[["self"]],[T]]],[11,R[7],E,E,20,[[["self"]],[T]]],[11,R[8],E,E,20,[[["self"]],[R[9]]]],[11,"from",E,E,21,[[[T]],[T]]],[11,R[4],E,E,21,[[[U]],[R[1]]]],[11,"into",E,E,21,[[],[U]]],[11,R[5],E,E,21,[[],[R[1]]]],[11,R[6],E,E,21,[[["self"]],[T]]],[11,R[7],E,E,21,[[["self"]],[T]]],[11,R[8],E,E,21,[[["self"]],[R[9]]]],[11,"from",R[158],E,23,[[[T]],[T]]],[11,R[4],E,E,23,[[[U]],[R[1]]]],[11,"into",E,E,23,[[],[U]]],[11,R[5],E,E,23,[[],[R[1]]]],[11,R[6],E,E,23,[[["self"]],[T]]],[11,R[7],E,E,23,[[["self"]],[T]]],[11,R[8],E,E,23,[[["self"]],[R[9]]]],[11,"from",E,E,24,[[[T]],[T]]],[11,R[4],E,E,24,[[[U]],[R[1]]]],[11,"into",E,E,24,[[],[U]]],[11,R[5],E,E,24,[[],[R[1]]]],[11,R[6],E,E,24,[[["self"]],[T]]],[11,R[7],E,E,24,[[["self"]],[T]]],[11,R[8],E,E,24,[[["self"]],[R[9]]]],[11,"from",R[159],E,26,[[[T]],[T]]],[11,R[4],E,E,26,[[[U]],[R[1]]]],[11,"into",E,E,26,[[],[U]]],[11,R[5],E,E,26,[[],[R[1]]]],[11,R[6],E,E,26,[[["self"]],[T]]],[11,R[7],E,E,26,[[["self"]],[T]]],[11,R[8],E,E,26,[[["self"]],[R[9]]]],[11,"from",R[160],E,34,[[[T]],[T]]],[11,R[4],E,E,34,[[[U]],[R[1]]]],[11,"into",E,E,34,[[],[U]]],[11,R[5],E,E,34,[[],[R[1]]]],[11,R[6],E,E,34,[[["self"]],[T]]],[11,R[7],E,E,34,[[["self"]],[T]]],[11,R[8],E,E,34,[[["self"]],[R[9]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[1]]]],[11,"into",E,E,31,[[],[U]]],[11,R[5],E,E,31,[[],[R[1]]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[1]]]],[11,"into",E,E,32,[[],[U]]],[11,R[5],E,E,32,[[],[R[1]]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[1]]]],[11,"into",E,E,33,[[],[U]]],[11,R[5],E,E,33,[[],[R[1]]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,"from",R[161],E,35,[[[T]],[T]]],[11,R[4],E,E,35,[[[U]],[R[1]]]],[11,"into",E,E,35,[[],[U]]],[11,R[5],E,E,35,[[],[R[1]]]],[11,R[6],E,E,35,[[["self"]],[T]]],[11,R[7],E,E,35,[[["self"]],[T]]],[11,R[8],E,E,35,[[["self"]],[R[9]]]],[11,"from",R[162],E,36,[[[T]],[T]]],[11,R[4],E,E,36,[[[U]],[R[1]]]],[11,"into",E,E,36,[[],[U]]],[11,R[5],E,E,36,[[],[R[1]]]],[11,R[6],E,E,36,[[["self"]],[T]]],[11,R[7],E,E,36,[[["self"]],[T]]],[11,R[8],E,E,36,[[["self"]],[R[9]]]],[11,"from",R[163],E,37,[[[T]],[T]]],[11,R[4],E,E,37,[[[U]],[R[1]]]],[11,"into",E,E,37,[[],[U]]],[11,R[5],E,E,37,[[],[R[1]]]],[11,R[6],E,E,37,[[["self"]],[T]]],[11,R[7],E,E,37,[[["self"]],[T]]],[11,R[8],E,E,37,[[["self"]],[R[9]]]],[11,R[77],R[93],E,28,[[["self"]]]],[11,"deref",E,E,3,[[["self"]]]],[11,"deref",E,E,6,[[["self"]]]],[11,"deref",E,E,8,[[["self"]]]],[11,"deref",E,E,11,[[["self"]]]],[11,"deref",E,E,27,[[["self"]]]],[11,"deref",E,E,28,[[["self"]]]],[11,"deref",E,E,29,[[["self"]]]],[11,"deref",E,E,17,[[["self"]]]],[11,"deref",E,E,22,[[["self"]]]],[11,"deref",E,E,25,[[["self"]]]],[11,"deref",E,E,30,[[["self"]]]],[11,"eq",R[151],E,5,[[["self"],[R[106]]],["bool"]]],[11,"eq",R[116],E,19,[[["self"],[R[165]]],["bool"]]],[11,"eq",E,E,20,[[["self"],[R[164]]],["bool"]]],[11,"ne",E,E,20,[[["self"],[R[164]]],["bool"]]],[11,"eq",E,E,21,[[["self"],[R[131]]],["bool"]]],[11,"eq",R[158],E,24,[[["self"],[R[132]]],["bool"]]],[11,"eq",R[160],E,31,[[["self"],["npriv"]],["bool"]]],[11,"eq",E,E,32,[[["self"],["spsel"]],["bool"]]],[11,"eq",E,E,33,[[["self"],["fpca"]],["bool"]]],[11,"eq",R[161],E,35,[[["self"],[R[143]]],["bool"]]],[11,"eq",R[162],E,36,[[["self"],["primask"]],["bool"]]],[11,"fmt",R[151],E,5,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[116],E,19,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,20,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,21,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[158],E,24,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[160],E,34,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,31,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,32,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,33,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[161],E,35,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[162],E,36,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[163],E,37,[[["self"],[R[43]]],[R[1]]]],[11,"clone",R[151],E,5,[[["self"]],[R[106]]]],[11,"clone",R[116],E,19,[[["self"]],[R[165]]]],[11,"clone",E,E,20,[[["self"]],[R[164]]]],[11,"clone",E,E,21,[[["self"]],[R[131]]]],[11,"clone",R[158],E,24,[[["self"]],[R[132]]]],[11,"clone",R[160],E,34,[[["self"]],["control"]]],[11,"clone",E,E,31,[[["self"]],["npriv"]]],[11,"clone",E,E,32,[[["self"]],["spsel"]]],[11,"clone",E,E,33,[[["self"]],["fpca"]]],[11,"clone",R[161],E,35,[[["self"]],[R[143]]]],[11,"clone",R[162],E,36,[[["self"]],["primask"]]],[11,"clone",R[163],E,37,[[["self"]],["apsr"]]],[11,"new",R[149],R[166],38,[[],[R[53]]]],[11,"new",E,R[167],39,[[[T]],["mutex"]]],[11,R[6],E,R[168],39,[[["self"],[R[53]]],[T]]]],"p":[[8,"Nr"],[3,R[169]],[3,R[104]],[3,"CBP"],[3,R[104]],[4,R[170]],[3,"CPUID"],[3,R[104]],[3,"DCB"],[3,R[104]],[3,R[107]],[3,"DWT"],[3,R[104]],[3,R[104]],[3,"Stim"],[3,R[104]],[3,R[104]],[3,"NVIC"],[3,R[104]],[4,R[115]],[4,R[171]],[4,R[172]],[3,"SCB"],[3,R[104]],[4,R[173]],[3,"SYST"],[3,R[104]],[3,"FPB"],[3,"ITM"],[3,"MPU"],[3,"TPIU"],[4,"Npriv"],[4,"Spsel"],[4,"Fpca"],[3,"Control"],[4,R[174]],[4,"Primask"],[3,"Apsr"],[3,R[55]],[3,"Mutex"],[3,"FPU"]]};
searchIndex["cortex_m_rt"]={"doc":"Startup code and minimal runtime for Cortex-M…","i":[[23,"entry","cortex_m_rt","Attribute to declare the entry point of the program",N,N],[23,R[165],E,"Attribute to declare an exception handler",N,N],[23,"pre_init",E,"Attribute to mark which function will be called at the…",N,N],[3,R[182],E,"Registers stacked (pushed into the stack) during an…",N,N],[12,"r0",E,"(General purpose) Register 0",0,N],[12,"r1",E,"(General purpose) Register 1",0,N],[12,"r2",E,"(General purpose) Register 2",0,N],[12,"r3",E,"(General purpose) Register 3",0,N],[12,"r12",E,"(General purpose) Register 12",0,N],[12,"lr",E,"Linker Register",0,N],[12,"pc",E,"Program Counter",0,N],[12,"xpsr",E,"Program Status Register",0,N],[5,"heap_start",E,"Returns a pointer to the start of the heap",N,[[]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"fmt",E,E,0,[[["self"],[R[43]]],[R[1]]]],[11,"clone",E,E,0,[[["self"]],["exceptionframe"]]]],"p":[[3,R[182]]]};
searchIndex["cortex_m_semihosting"]={"doc":"Semihosting for ARM Cortex-M processors","i":[[5,"syscall",R[175],"Performs a semihosting operation, takes a pointer to an…",N,[[["usize"],[T]],["usize"]]],[5,"syscall1",E,"Performs a semihosting operation, takes one integer as an…",N,[[["usize"]],["usize"]]],[0,"debug",E,"Interacting with debugging agent",N,N],[4,R[115],R[179],"This values are taken from section 5.5.2 of ADS Debug…",N,N],[13,"BranchThroughZero",E,E,0,N],[13,"UndefinedInstr",E,E,0,N],[13,"SoftwareInterrupt",E,E,0,N],[13,"PrefetchAbort",E,E,0,N],[13,"DataAbort",E,E,0,N],[13,"AddressException",E,E,0,N],[13,"IRQ",E,E,0,N],[13,"FIQ",E,E,0,N],[13,"BreakPoint",E,E,0,N],[13,"WatchPoint",E,E,0,N],[13,"StepComplete",E,E,0,N],[13,"RunTimeErrorUnknown",E,E,0,N],[13,"InternalError",E,E,0,N],[13,"UserInterruption",E,E,0,N],[13,"ApplicationExit",E,E,0,N],[13,"StackOverflow",E,E,0,N],[13,"DivisionByZero",E,E,0,N],[13,"OSSpecific",E,E,0,N],[5,"exit",E,"Reports to the debugger that the execution has completed.",N,[[["exitstatus"]]]],[5,"report_exception",E,"Report an exception to the debugger directly.",N,[[[R[165]]]]],[6,"ExitStatus",E,"Status enum for `exit` syscall.",N,N],[17,"EXIT_SUCCESS",E,"Successful execution of a program.",N,N],[17,"EXIT_FAILURE",E,"Unsuccessful execution of a program.",N,N],[0,"hio",R[175],"Host I/O",N,N],[3,"HStderr",R[180],"Host's standard error",N,N],[3,"HStdout",E,"Host's standard output",N,N],[5,"hstderr",E,"Construct a new handle to the host's standard error.",N,[[],[["hstderr"],[R[1],["hstderr"]]]]],[5,"hstdout",E,"Construct a new handle to the host's standard output.",N,[[],[["hstdout"],[R[1],["hstdout"]]]]],[11,R[176],E,R[177],1,[[["self"]],[R[1]]]],[11,R[176],E,R[177],2,[[["self"]],[R[1]]]],[0,"nr",R[175],"Semihosting operations",N,N],[0,"open",R[178],"Values for the mode parameter of the OPEN syscall.",N,N],[17,"R","cortex_m_semihosting::nr::open","Mode corresponding to fopen \"r\" mode.",N,N],[17,"R_BINARY",E,"Mode corresponding to fopen \"rb\" mode.",N,N],[17,"RW",E,"Mode corresponding to fopen \"r+\" mode.",N,N],[17,"RW_BINARY",E,"Mode corresponding to fopen \"r+b\" mode.",N,N],[17,"W_TRUNC",E,"Mode corresponding to fopen \"w\" mode.",N,N],[17,"W_TRUNC_BINARY",E,"Mode corresponding to fopen \"wb\" mode.",N,N],[17,"RW_TRUNC",E,"Mode corresponding to fopen \"w+\" mode.",N,N],[17,"RW_TRUNC_BINARY",E,"Mode corresponding to fopen \"w+b\" mode.",N,N],[17,"W_APPEND",E,"Mode corresponding to fopen \"a\" mode.",N,N],[17,"W_APPEND_BINARY",E,"Mode corresponding to fopen \"ab\" mode.",N,N],[17,"RW_APPEND",E,"Mode corresponding to fopen \"a+\" mode.",N,N],[17,"RW_APPEND_BINARY",E,"Mode corresponding to fopen \"a+b\" mode.",N,N],[17,"CLOCK",R[178],E,N,N],[17,"CLOSE",E,E,N,N],[17,"ELAPSED",E,E,N,N],[17,"ERRNO",E,E,N,N],[17,"FLEN",E,E,N,N],[17,"GET_CMDLINE",E,E,N,N],[17,"HEAPINFO",E,E,N,N],[17,"ISERROR",E,E,N,N],[17,"ISTTY",E,E,N,N],[17,"OPEN",E,E,N,N],[17,"READ",E,E,N,N],[17,"READC",E,E,N,N],[17,"REMOVE",E,E,N,N],[17,"RENAME",E,E,N,N],[17,"SEEK",E,E,N,N],[17,"SYSTEM",E,E,N,N],[17,"TICKFREQ",E,E,N,N],[17,"TIME",E,E,N,N],[17,"TMPNAM",E,E,N,N],[17,"WRITE0",E,E,N,N],[17,"WRITE",E,E,N,N],[17,"WRITEC",E,E,N,N],[17,"ENTER_SVC",E,E,N,N],[17,"REPORT_EXCEPTION",E,E,N,N],[14,"syscall",R[175],"Variable argument version of `syscall`",N,N],[14,"syscall1",E,"Macro version of `syscall1`",N,N],[14,"hprint",E,"Macro for printing to the HOST standard output",N,N],[14,"hprintln",E,"Macro for printing to the HOST standard output, with a…",N,N],[14,"heprint",E,"Macro for printing to the HOST standard error",N,N],[14,"heprintln",E,"Macro for printing to the HOST standard error, with a…",N,N],[14,"dbg",E,"Macro that prints and returns the value of a given…",N,N],[11,"from",R[179],E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",R[180],E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,R[181],E,E,1,[[["self"],["str"]],[R[1]]]],[11,R[181],E,E,2,[[["self"],["str"]],[R[1]]]],[11,"clone",E,E,1,[[["self"]],["hstderr"]]],[11,"clone",E,E,2,[[["self"]],["hstdout"]]]],"p":[[4,R[115]],[3,"HStderr"],[3,"HStdout"]]};
searchIndex["generic_array"]={"doc":"This crate implements a structure that can be used as a…","i":[[3,R[73],R[56],"Struct representing a generic array - `GenericArray<T, N>`…",N,N],[0,"arr",E,"Implementation for `arr!` macro.",N,N],[6,"Inc","generic_array::arr","Helper type for `arr!` macro",N,N],[8,R[66],E,"Helper trait for `arr!` macro",N,N],[16,R[15],E,"Resulting length",0,N],[0,"functional",R[56],"Functional programming with generic sequences",N,N],[6,"MappedSequence","generic_array::functional","Accessor type for a mapped generic sequence",N,N],[8,R[67],E,"Defines the relationship between one generic sequence and…",N,N],[16,"Mapped",E,"Mapped sequence type",1,N],[8,R[68],E,"Defines functional programming methods for generic sequences",N,N],[11,"map",E,"Maps a `GenericSequence` to another `GenericSequence`.",2,[[["f"]],[R[57]]]],[11,"zip",E,"Combines two `GenericSequence` instances and iterates…",2,[[["rhs"],["f"]],[R[57]]]],[11,"fold",E,"Folds (or reduces) a sequence of data into a single value.",2,[[[U],["f"]],[U]]],[0,"iter",R[56],"`GenericArray` iterator implementation.",N,N],[3,R[69],R[61],"An iterator that moves out of a `GenericArray`",N,N],[11,R[58],E,"Returns the remaining items of this iterator as a slice",3,[[["self"]]]],[11,R[59],E,"Returns the remaining items of this iterator as a mutable…",3,[[["self"]]]],[0,"sequence",R[56],"Useful traits for manipulating sequences of data stored in…",N,N],[6,"SequenceItem","generic_array::sequence","Accessor for `GenericSequence` item type, which is really…",N,N],[8,R[70],E,"Defines some sequence with an associated length and…",N,N],[16,"Length",E,"`GenericArray` associated length",4,N],[16,"Sequence",E,"Concrete sequence type used in conjuction with reference…",4,N],[10,R[63],E,"Initializes a new sequence instance using the given…",4,[[["f"]]]],[8,R[71],E,"Defines any `GenericSequence` which can be lengthened or…",N,N],[16,"Longer",E,"`GenericSequence` that has one more element than `Self`",5,N],[10,"append",E,"Returns a new array with the given element appended to the…",5,[[[T]]]],[10,"prepend",E,"Returns a new array with the given element prepended to…",5,[[[T]]]],[8,"Shorten",E,"Defines a `GenericSequence` which can be shortened by…",N,N],[16,"Shorter",E,"`GenericSequence` that has one less element than `Self`",6,N],[10,R[64],E,"Returns a new array without the last element, and the last…",6,[[]]],[10,R[65],E,"Returns a new array without the first element, and the…",6,[[]]],[8,"Split",E,"Defines a `GenericSequence` that can be split into two…",N,N],[16,"First",E,"First part of the resulting split array",7,N],[16,"Second",E,"Second part of the resulting split array",7,N],[10,"split",E,"Splits an array at the given index, returning the separate…",7,[[]]],[8,"Concat",E,"Defines `GenericSequence`s which can be joined together,…",N,N],[16,"Rest",E,"Sequence to be concatenated with `self`",8,N],[16,R[15],E,"Resulting sequence formed by the concatenation.",8,N],[10,"concat",E,"Concatenate, or join, two sequences.",8,[[]]],[8,R[72],R[56],"Trait making `GenericArray` work, marking types to be used…",N,N],[16,"ArrayType",E,"Associated type representing the array type for the number",9,N],[11,R[58],E,"Extracts a slice containing the entire array.",10,[[["self"]]]],[11,R[59],E,"Extracts a mutable slice containing the entire array.",10,[[["self"]]]],[11,"from_slice",E,"Converts slice to a generic array reference with inferred…",10,[[],[R[60]]]],[11,"from_mut_slice",E,"Converts mutable slice to a mutable generic array reference",10,[[],[R[60]]]],[11,"clone_from_slice",E,"Construct a `GenericArray` from a slice by cloning its…",10,[[],[R[60]]]],[11,"from_exact_iter",E,"Creates a new `GenericArray` instance from an iterator…",10,[[["i"]],[R[39]]]],[14,"arr",E,"Macro allowing for easy generation of Generic Arrays.…",N,N],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[1]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[1]]]],[11,R[62],E,E,10,[[],["i"]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",R[61],E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[62],E,E,3,[[],["i"]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"map",R[56],E,10,[[["f"]],[R[57]]]],[11,"zip",E,E,10,[[["rhs"],["f"]],[R[57]]]],[11,"fold",E,E,10,[[[U],["f"]],[U]]],[11,R[63],E,E,10,[[["f"]],[R[60]]]],[11,"append",E,E,10,[[[T]]]],[11,"prepend",E,E,10,[[[T]]]],[11,R[64],E,E,10,[[]]],[11,R[65],E,E,10,[[]]],[11,"split",E,E,10,[[]]],[11,"concat",E,E,10,[[]]],[11,R[77],E,E,10,[[["self"]]]],[11,"deref",E,E,10,[[["self"]]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"from",E,E,10,[[],["self"]]],[11,"eq",E,E,10,[[["self"]],["bool"]]],[11,"cmp",E,E,10,[[["self"],[R[60]]],[R[32]]]],[11,R[38],E,E,10,[[["self"],[R[60]]],[[R[39],[R[32]]],[R[32]]]]],[11,"hash",E,E,10,[[["self"],["h"]]]],[11,"drop",R[61],E,3,[[["self"]]]],[11,"fmt",R[56],E,10,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[61],E,3,[[["self"],[R[43]]],[R[1]]]],[11,"from_iter",R[56],E,10,[[["i"]],[R[60]]]],[11,"as_ref",E,E,10,[[["self"]]]],[11,"as_mut",E,E,10,[[["self"]]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"into",E,E,10,[[]]],[11,"fmt",E,E,10,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,10,[[["self"],[R[43]]],[R[1]]]],[11,"next",R[61],E,3,[[["self"]],[R[39]]]],[11,"size_hint",E,E,3,[[["self"]]]],[11,"count",E,E,3,[[],["usize"]]],[11,"nth",E,E,3,[[["self"],["usize"]],[R[39]]]],[11,"last",E,E,3,[[],[R[39]]]],[11,"next_back",E,E,3,[[["self"]],[R[39]]]],[11,"len",E,E,3,[[["self"]],["usize"]]],[11,R[62],R[56],E,10,[[]]],[11,"clone",E,E,10,[[["self"]],[R[60]]]],[11,"clone",R[61],E,3,[[["self"]],["self"]]],[11,R[44],R[56],E,10,[[],["self"]]],[11,R[6],E,E,10,[[["self"]]]],[11,R[7],E,E,10,[[["self"]]]]],"p":[[8,R[66]],[8,R[67]],[8,R[68]],[3,R[69]],[8,R[70]],[8,R[71]],[8,"Shorten"],[8,"Split"],[8,"Concat"],[8,R[72]],[3,R[73]]]};
searchIndex["hartex_rust"]={"doc":"A safe and lightweight real-time Kernel written in Rust.…","i":[[0,"config",R[183],"Kernel configuration.  `Private`",N,N],[0,"tasks_config",R[195],E,N,N],[17,"MAX_TASKS","hartex_rust::config::tasks_config",E,N,N],[0,"resources_config",R[195],E,N,N],[17,"MAX_RESOURCES","hartex_rust::config::resources_config",E,N,N],[0,"semaphores_config",R[195],E,N,N],[17,"SEMAPHORE_COUNT","hartex_rust::config::semaphores_config",E,N,N],[0,"message_config",R[195],E,N,N],[17,"MESSAGE_COUNT","hartex_rust::config::message_config",E,N,N],[0,"event_config",R[195],E,N,N],[17,"EVENT_COUNT","hartex_rust::config::event_config",E,N,N],[0,"event_index_table_config",R[195],E,N,N],[17,"EVENT_INDEX_TABLE_COUNT","hartex_rust::config::event_index_table_config",E,N,N],[17,"OPCODE_SIGNAL",R[195],E,N,N],[17,"OPCODE_SEND_MSG",E,E,N,N],[17,"OPCODE_RELEASE",E,E,N,N],[17,"OPCODE_ENABLE_EVENT",E,E,N,N],[0,"kernel",R[183],"Kernel module and routines declaration. `Private`",N,N],[0,"event_management",R[196],"Event Management Module",N,N],[5,"sweep_event_table","hartex_rust::kernel::event_management","Dispatches all the events of EventTableType same as…",N,[[[R[190]]]]],[5,R[200],E,R[288],N,[[[R[185]]]]],[5,R[226],E,R[289],N,[[["u8"],[R[190]],["bool"]],[[R[185]],[R[1],[R[185],R[184]]],[R[184]]]]],[5,R[227],E,R[290],N,[[["bool"]],[[R[185]],[R[1],[R[185],R[184]]],[R[184]]]]],[5,R[201],E,R[293],N,[[[R[188]],[R[185]],[R[186]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[202],E,R[294],N,[[[R[186]],[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[203],E,R[291],N,[[[R[192]],[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[204],E,R[292],N,[[[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[7,R[198],E,"Global Instance of EventManager",N,N],[0,R[299],R[196],"Software Communication Module",N,N],[3,"Message",R[301],R[279],N,N],[12,"inner",E,R[280],0,N],[12,"id",E,R[281],0,N],[5,R[197],E,"Broadcasts messages to all tasks specified during…",N,[[[R[192]]],[[R[1],[R[184]]],[R[184]]]]],[5,"new",E,R[282],N,[[["u32"],[T]],[["message"],[R[1],["message",R[184]]],[R[184]]]]],[7,"MessageTable",E,"Global instance of MessageTable",N,N],[11,"new",E,"Returns a new Instance of `Message` with the fields…",0,[[[R[192]],[T]],["self"]]],[11,R[197],E,"Calls `broadcast()` on the `message_table` with…",0,[[["self"],[R[39]]],[[R[1],[R[184]]],[R[184]]]]],[11,"receive",E,"Calls `receive()` on the `message_table` with `message_id`…",0,[[["self"]],[[R[39],["ref"]],["ref"]]]],[11,"get_id",E,E,0,[[["self"]],[R[192]]]],[0,"resource_management",R[196],"Resource Management Module Defines the Kernel routines and…",N,N],[3,R[247],R[302],R[275],N,N],[12,"inner",E,R[270],1,N],[12,"id",E,R[271],1,N],[5,"new",E,R[273],N,[[[R[186]],["sized"]],[[R[1],[R[187],R[184]]],[R[184]],[R[187]]]]],[5,R[229],E,R[272],N,[[],[[R[187],["refcell"]],[R[1],[R[187],R[184]]],[R[184]]]]],[7,"resources_list",E,"Global instance of Resource manager",N,N],[11,"new",E,"Returns a new instance of Resource created from the…",1,[[[R[206]],[T]],["self"]]],[11,"lock",E,"Lock the resources. It takes a BooleanVector corresponding…",1,[[["self"]],[[R[39]],[T]]]],[11,"unlock",E,"Unlocks the resource. It takes a BooleanVector…",1,[[["self"]]]],[11,"acquire",E,"Acquire is a helper function that ensures that if a…",1,[[["self"],["f"]]]],[11,"access",E,"There might be cases where the variable has to be accessed…",1,[[["self"]],[[R[184]],[R[1],[R[184]]],[T]]]],[0,R[300],R[196],"Software Synchronization Module",N,N],[5,R[207],"hartex_rust::kernel::software_sync_bus",R[277],N,[[[R[188]],[R[186]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[208],E,R[278],N,[[[R[188]]],[[R[1],["bool",R[184]]],[R[184]],["bool"]]]],[5,"new",E,R[276],N,[[[R[186]]],[[R[188]],[R[184]],[R[1],[R[188],R[184]]]]]],[7,"SCB_table",E,"Global instance of SemaphoresTable",N,N],[0,"task_management",R[196],"Task Management module Defines Kernel routines which will…",N,N],[5,"init","hartex_rust::kernel::task_management",R[303],N,[[["bool"]]]],[5,R[213],E,R[266],N,[[[R[234]],["u32"]],[[R[1],[R[184]]],[R[184]]]]],[5,R[214],E,R[260],N,[[["taskid"],[T]],[[R[1],[R[184]]],[R[184]]]]],[5,"schedule",E,"This function is called from both privileged and…",N,[[]]],[5,"preempt",E,"If the scheduler is running and the highest priority task…",N,[[],[[R[1],[R[184]]],[R[184]]]]],[5,"context_switch",E,"Assigns the appropriate values to `os_curr_task` and…",N,[[["usize"]]]],[5,R[211],E,R[264],N,[[],["bool"]]],[5,R[233],E,R[263],N,[[],["taskid"]]],[5,R[216],E,"The Kernel blocks the tasks mentioned in `tasks_mask`.",N,[[[R[186]]]]],[5,R[217],E,"The Kernel unblocks the tasks mentioned in tasks_mask.",N,[[[R[186]]]]],[5,R[235],E,R[267],N,[[]]],[5,"release",E,R[265],N,[[[R[186]]]]],[5,R[232],E,R[262],N,[[]]],[5,R[231],E,R[261],N,[[]]],[7,"empty_task",E,E,N,N],[7,"all_tasks",E,"Global Scheduler instance",N,N],[7,"os_curr_task",E,"Reference to TCB of currently running task",N,N],[7,"os_next_task",E,"Reference to TCB of next to be scheduled task",N,N],[0,"time_management",R[196],"Time Management Module. Defines Kernel routines for time…",N,N],[5,"tick","hartex_rust::kernel::time_management",R[295],N,[[],[R[236]]]],[5,"now",E,R[296],N,[[],["time"]]],[5,R[237],E,R[297],N,[[],["u32"]]],[7,"CURR_TIME",E,"Global instance of Time manager.",N,N],[0,"system",R[183],"Kernel Data-structures. `Private`",N,N],[0,R[198],R[205],"Event Manager",N,N],[3,"Event",R[240],"Event Descriptor",N,N],[12,R[199],E,"Whether this event is currently enabled or not.",2,N],[12,"event_type",E,"Is the event OnOff or FreeRunning.",2,N],[12,"threshold",E,"This is the frequency (of time unit in which it belongs…",2,N],[12,"counter",E,"The current time elapsed. On reaching the value of the…",2,N],[12,"opcode",E,"A 4-bit code that corresponds to what are the operations…",2,N],[12,"semaphore",E,"The SemaphoreId of the Semaphore that has to be signaled…",2,N],[12,"tasks",E,"The `task_mask` of the tasks that have to be released or…",2,N],[12,"msg_index",E,"The MessageId of the message corresponding to the index.",2,N],[12,"next_event",E,"The EventId of the next event that has to be triggered by…",2,N],[3,R[248],E,"An EventIndexTable is created for each of the elements of…",N,N],[12,"table",E,"Holds the list of EventIds of events that belong to the…",3,N],[12,"curr",E,"It is just an index to the next free location in the table.",3,N],[3,R[249],E,"Holds and Implements all Event management and dispatch…",N,N],[12,"event_table",E,"This array holds the Event descriptors of all events",4,N],[12,"curr",E,"Points to the current empty slot in the `event_table`.",4,N],[12,"ms_event_table",E,R[283],4,N],[12,"sec_event_table",E,R[283],4,N],[12,"min_event_table",E,R[283],4,N],[12,"hr_event_table",E,R[283],4,N],[12,"onoff_event_table",E,R[283],4,N],[4,R[194],E,E,N,N],[13,R[221],E,R[286],5,N],[13,"OnOff",E,R[287],5,N],[4,R[193],E,R[285],N,N],[13,"MilliSec",E,E,6,N],[13,"Sec",E,E,6,N],[13,"Min",E,E,6,N],[13,"Hour",E,E,6,N],[13,"OnOff",E,E,6,N],[11,"new",E,"Return an new instance of EventIndexTable.",3,[[],["self"]]],[11,"add",E,"Adds `id` to the EventIndexTable",3,[[["self"],[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[11,"new",E,"Returns new instance of EventManager",4,[[],["self"]]],[11,"sweep",E,"This function dispatches all events mentioned in the…",4,[[["self"],[R[190]]]]],[11,"execute_event",E,"Takes the EventId and executes the corresponding event…",4,[[["self"],[R[185]]]]],[11,"execute_opcode",E,"This method executes all the operations corresponding to…",4,[[["self"],[R[185]]]]],[11,R[200],E,"Enables an Event.",4,[[["self"],[R[185]]]]],[11,"disable_event",E,"Disables an Event.",4,[[["self"],[R[185]]]]],[11,"create",E,"Creates a new event.",4,[[["self"],[R[191]],["u8"],[R[190]],["bool"]],[[R[185]],[R[1],[R[185],R[184]]],[R[184]]]]],[11,R[201],E,R[284],4,[[["self"],[R[185]],[R[186]],[R[188]]],[[R[1],[R[184]]],[R[184]]]]],[11,R[202],E,R[284],4,[[["self"],[R[185]],[R[186]]],[[R[1],[R[184]]],[R[184]]]]],[11,R[203],E,"Updates the opcode by setting the bit corresponding to the…",4,[[["self"],[R[185]],[R[192]]],[[R[1],[R[184]]],[R[184]]]]],[11,R[204],E,R[284],4,[[["self"],[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[0,"resource_manager",R[205],"Resource Manager The Definition of Data-structures…",N,N],[3,R[250],R[241],"Describes a single Resource",N,N],[12,"ceiling",E,"An boolean vector holding which tasks have access to the…",7,N],[12,"tasks_mask",E,"It holds the priority of the highest priority task that…",7,N],[3,R[251],E,"Maintains state of all Resources in the Kernel.",N,N],[12,"resource_control_blocks",E,"An Array of ResourceControlBlock for every resource.",8,N],[12,"top",E,"Points the top of the `pi_stack`.",8,N],[12,"pi_stack",E,"This stack is used for locking and unlocking of resources.",8,N],[12,"curr",E,"It next empty index in the array where the new…",8,N],[12,"system_ceiling",E,"Hold the ceiling of the resource with the highest ceiling…",8,N],[17,"PI",E,E,N,N],[11,"new",E,"Instantiates a new ResourceControlBlock and returns it.",7,[[[R[186]]],["self"]]],[11,"new",E,"Returns a new instance of ResourceManager.",8,[[],["self"]]],[11,"create",E,"Creates a new resource with the `task_mask` passed as…",8,[[["self"],[R[186]]],[[R[206]],[R[1],[R[206],R[184]]],[R[184]]]]],[11,"lock",E,"This procedure locks the resource from further use. It is…",8,[[["self"],[R[206]],["taskid"]],[[R[39],["u32"]],["u32"]]]],[11,"get_pi_mask",E,"Returns the `Pi_mask`, which is just a boolean vector with…",8,[[["self"],["taskid"]],["u32"]]],[11,"unlock",E,"This procedure would unlock the resource for other tasks…",8,[[["self"],[R[206]]],[[R[39],["u32"]],["u32"]]]],[11,"pop_stack",E,"Pops the stack top and assigns the `system_ceiling` to the…",8,[[["self"]]]],[11,"push_stack",E,"Pushes the passed ceiling onto the pi_stack.",8,[[["self"],["taskid"]]]],[0,R[299],R[205],"Task communication bus definition",N,N],[3,R[252],R[242],"Holds details corresponding to a single message",N,N],[12,"receivers",E,"Boolean vector representing the receiver tasks.",9,N],[3,R[253],E,"The message table stores the metadata of messages, i.e.,…",N,N],[12,"message_table",E,"This array stores the MCB corresponding to each message.",10,N],[12,"semaphore_table",E,"This array stores the SemaphoresTable, which is used to…",10,N],[3,R[209],E,E,N,N],[12,"table",E,E,11,N],[12,"curr",E,E,11,N],[11,"new",E,E,11,[[],["self"]]],[11,R[210],E,E,11,[[["self"],[R[186]]],[[R[188]],[R[184]],[R[1],[R[188],R[184]]]]]],[11,R[207],E,E,11,[[["self"],[R[188]],[R[186]]],[["u32"],[R[184]],[R[1],["u32",R[184]]]]]],[11,R[208],E,E,11,[[["self"],[R[188]],["u32"]],[[R[1],["bool",R[184]]],[R[184]],["bool"]]]],[11,"new",E,"Returns a new instance of `SemaphoresTable`",10,[[],["self"]]],[11,R[197],E,"The sender task calls this function, it broadcasts the…",10,[[["self"],[R[192]]],[["u32"],[R[184]],[R[1],["u32",R[184]]]]]],[11,"receive",E,"The receiver task calls this function, it returns true or…",10,[[[R[192]],["taskid"],["self"]],["bool"]]],[11,"create",E,"Creates a new entry in the `mcb_table` and `scb_table`…",10,[[["self"],[R[186]]],[[R[192]],[R[1],[R[192],R[184]]],[R[184]]]]],[0,R[300],R[205],"Software synchronization bus definition",N,N],[3,R[254],R[243],"Semaphores form the core of synchronization and…",N,N],[12,"flags",E,"It is a boolean vector which represents the tasks notified…",12,N],[12,"tasks",E,"It is a boolean vector that corresponds to the tasks that…",12,N],[3,R[209],E,"Maintains state of all Semaphores in the Kernel.",N,N],[12,"table",E,"List of SemaphoreControlBlocks.",13,N],[12,"curr",E,"Max index in `table` till which `SemaphoreControlBlocks`…",13,N],[11,"new",E,"Creates and returns a new semaphore instance with tasks…",12,[[[R[186]]],["self"]]],[11,R[207],E,R[274],12,[[["self"],[R[186]]],[["u32"],[R[184]],[R[1],["u32",R[184]]]]]],[11,R[208],E,R[274],12,[[["self"],["taskid"]],[[R[1],["bool",R[184]]],[R[184]],["bool"]]]],[11,"new",E,"Returns a new instance of a `SemaphoresTable`",13,[[],["self"]]],[11,R[210],E,"This method creates a new `SemaphoreControlBlock` with the…",13,[[["self"],[R[186]]],[[R[188]],[R[184]],[R[1],[R[188],R[184]]]]]],[11,R[207],E,"Calls the `signal_and_release()` method on the semaphore…",13,[[["self"],[R[188]],[R[186]]],[["u32"],[R[184]],[R[1],["u32",R[184]]]]]],[11,R[208],E,"Calls the `test_and_reset()` method on the semaphore with…",13,[[["self"],[R[188]],["taskid"]],[[R[1],["bool",R[184]]],[R[184]],["bool"]]]],[0,"task_manager",R[205],R[268],N,N],[3,R[255],R[244],"Maintains state of all tasks in the Kernel",N,N],[12,"curr_tid",E,"The Task id of the currently running task.",14,N],[12,"is_running",E,"True if the scheduler has started scheduling tasks on the…",14,N],[12,"task_control_blocks",E,"An Array of task control blocks corresponding to each task…",14,N],[12,"blocked_tasks",E,R[259],14,N],[12,"active_tasks",E,R[259],14,N],[12,R[211],E,"A variable which decided if the scheduler should…",14,N],[12,"started",E,"Set true as soon as the first task is scheduled.",14,N],[3,R[256],E,"A single tasks's state",N,N],[12,"sp",E,"Holds a reference to the stack pointer for the task.",15,N],[7,"stack0",E,"Task stack for idle task (0 priority task)",N,N],[11,"new",E,"Returns a new instance of `Scheduler`",14,[[],["self"]]],[11,"init",E,"This method sets the is_preemptive field of the scheduler…",14,[[["self"],["bool"]]]],[11,R[213],E,"It sets the is_running field to true as kernel then starts…",14,[[["self"]]]],[11,R[214],E,"The program counter for the task is pointer value of the…",14,[[["self"],["usize"],[T]],[[R[1],[R[184]]],[R[184]]]]],[11,"create_tcb",E,"Creates a TCB corresponding to the tasks details passed…",14,[[["self"],[T]],[[R[1],[R[215],R[184]]],[R[215]],[R[184]]]]],[11,"insert_tcb",E,"Inserts the `TCB` into `task_control_blocks` at position…",14,[[["self"],[R[215]],["usize"]],[[R[1],[R[184]]],[R[184]]]]],[11,R[216],E,"Appends `tasks_mask` onto `blocked_tasks`.",14,[[["self"],[R[186]]]]],[11,R[217],E,"Removes `tasks_mask` from `blocked_tasks`.",14,[[["self"],[R[186]]]]],[11,"get_next_tid",E,"Returns the TaskId currently high priority task, which is…",14,[[["self"]],["taskid"]]],[11,"release",E,"Updates `active_tasks` with `task_mask`.",14,[[["self"],[R[186]]]]],[0,"time_manager",R[205],"Time Manager",N,N],[3,"Time",R[245],"This struct represents a time object, i.e., it stores the…",N,N],[12,"m_sec_10",E,E,16,N],[12,"sec",E,E,16,N],[12,"min",E,E,16,N],[12,"hour",E,E,16,N],[12,"day",E,E,16,N],[4,"TickType",E,"This enum represents the highest order time that elapsed…",N,N],[13,"MilliSec10",E,E,17,N],[13,"Sec",E,E,17,N],[13,"Min",E,E,17,N],[13,"Hour",E,E,17,N],[13,"Day",E,E,17,N],[11,"new",E,"Returns a new instance of `Time`.",16,[[],["self"]]],[11,"tick",E,"A tick updates the Time object’s `m_sec_10` field, which…",16,[[["self"]],[R[236]]]],[0,"types",R[205],E,N,N],[6,"EventId","hartex_rust::system::types",E,N,N],[6,"TaskId",E,E,N,N],[6,R[222],E,E,N,N],[6,R[223],E,E,N,N],[6,R[224],E,E,N,N],[6,R[225],E,E,N,N],[0,"utils",R[183],"Utility functions.  `Private`",N,N],[0,"arch",R[219],"Machine specific",N,N],[5,"get_msb","hartex_rust::utils::arch","Returns the MSB of `val`. It is written using CLZ…",N,[[["u32"]],["usize"]]],[5,R[218],E,"Returns true if Currently the Kernel is operating in…",N,[[],["bool"]]],[5,"svc_call",E,"Creates an SVC Interrupt",N,[[]]],[5,"pendSV_handler",E,"PendSV interrupt handler does the actual context switch in…",N,[[]]],[0,"errors",R[219],"Error Enum",N,N],[4,R[257],R[246],"Error Type for Kernel.",N,N],[13,"NotFound",E,E,18,N],[13,"StackTooSmall",E,E,18,N],[13,"LimitExceeded",E,E,18,N],[13,"AccessDenied",E,E,18,N],[13,"Exists",E,E,18,N],[0,"helpers",R[219],E,N,N],[5,R[220],"hartex_rust::utils::helpers",R[298],N,[[],["u32"]]],[0,"interrupts",R[219],"Interrupt Handlers",N,N],[5,"ffnhq9gx094o99a5","hartex_rust::utils::interrupts","SysTick Interrupt handler Its the Crux of the Kernel’s…",N,[[]]],[5,"fmuvk2ao863i85a1",E,"SVC Interrupt handler, calls `tasks::schedule()`",N,[[]]],[5,"fxced5sq616s20h9",E,"PendSV Interrupt handler, calls…",N,[[]]],[0,"macros",R[183],"Macro Definitions",N,N],[0,"util",E,"Helper functions.",N,N],[5,R[220],"hartex_rust::util",R[298],N,[[],["u32"]]],[0,"types",R[183],"Exports types defined across other Kernel modules.",N,N],[3,"Message",R[189],R[279],N,N],[12,"inner",E,R[280],0,N],[12,"id",E,R[281],0,N],[3,R[247],E,R[275],N,N],[12,"inner",E,R[270],1,N],[12,"id",E,R[271],1,N],[4,R[193],E,R[285],N,N],[13,"MilliSec",E,E,6,N],[13,"Sec",E,E,6,N],[13,"Min",E,E,6,N],[13,"Hour",E,E,6,N],[13,"OnOff",E,E,6,N],[4,R[194],E,E,N,N],[13,R[221],E,R[286],5,N],[13,"OnOff",E,R[287],5,N],[6,"EventId",E,E,N,N],[6,"TaskId",E,E,N,N],[6,R[222],E,E,N,N],[6,R[223],E,E,N,N],[6,R[224],E,E,N,N],[6,R[225],E,E,N,N],[0,"events",R[183],"Kernel routines which assist in Event management.",N,N],[5,R[200],"hartex_rust::events",R[288],N,[[[R[185]]]]],[5,R[226],E,R[289],N,[[["u8"],[R[190]],["bool"]],[[R[185]],[R[1],[R[185],R[184]]],[R[184]]]]],[5,R[227],E,R[290],N,[[["bool"]],[[R[185]],[R[1],[R[185],R[184]]],[R[184]]]]],[5,R[203],E,R[291],N,[[[R[192]],[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[204],E,R[292],N,[[[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[201],E,R[293],N,[[[R[188]],[R[185]],[R[186]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[202],E,R[294],N,[[[R[186]],[R[185]]],[[R[1],[R[184]]],[R[184]]]]],[0,"messages",R[183],"Kernel routines which assist in Inter-task Communication.",N,N],[5,"new","hartex_rust::messages",R[282],N,[[["u32"],[T]],[["message"],[R[1],["message",R[184]]],[R[184]]]]],[0,R[228],R[183],"Kernel routines which assist in Resource management.",N,N],[5,R[229],"hartex_rust::resources",R[272],N,[[],[[R[187],["refcell"]],[R[1],[R[187],R[184]]],[R[184]]]]],[5,"new",E,R[273],N,[[[R[186]],["sized"]],[[R[1],[R[187],R[184]]],[R[184]],[R[187]]]]],[0,R[230],R[183],"Kernel routines which assist in Inter-task Synchronization.",N,N],[5,"new","hartex_rust::semaphores",R[276],N,[[[R[186]]],[[R[188]],[R[184]],[R[1],[R[188],R[184]]]]]],[5,R[207],E,R[277],N,[[[R[188]],[R[186]]],[[R[1],[R[184]]],[R[184]]]]],[5,R[208],E,R[278],N,[[[R[188]]],[[R[1],["bool",R[184]]],[R[184]],["bool"]]]],[0,"tasks",R[183],"Kernel routines which assist in Task management.",N,N],[5,R[214],"hartex_rust::tasks",R[260],N,[[["taskid"],[T]],[[R[1],[R[184]]],[R[184]]]]],[5,R[231],E,R[261],N,[[]]],[5,R[232],E,R[262],N,[[]]],[5,R[233],E,R[263],N,[[],["taskid"]]],[5,"init",E,R[303],N,[[["bool"]]]],[5,R[211],E,R[264],N,[[],["bool"]]],[5,"release",E,R[265],N,[[[R[186]]]]],[5,R[213],E,R[266],N,[[[R[234]],["u32"]],[[R[1],[R[184]]],[R[184]]]]],[5,R[235],E,R[267],N,[[]]],[0,"time",R[183],"Kernel routines which assist in Time management.",N,N],[5,"tick","hartex_rust::time",R[295],N,[[],[R[236]]]],[5,"now",E,R[296],N,[[],["time"]]],[5,R[237],E,R[297],N,[[],["u32"]]],[14,"spawn",R[183],"The tasks must be looping infinitely and call `task_exit`…",N,N],[14,"priv_execute",E,"`priv_execute!` executes the code block only if the…",N,N],[11,"from",R[301],E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",R[302],E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",R[240],E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[1]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[1]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[4],E,E,5,[[[U]],[R[1]]]],[11,"into",E,E,5,[[],[U]]],[11,R[5],E,E,5,[[],[R[1]]]],[11,R[6],E,E,5,[[["self"]],[T]]],[11,R[7],E,E,5,[[["self"]],[T]]],[11,R[8],E,E,5,[[["self"]],[R[9]]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[4],E,E,6,[[[U]],[R[1]]]],[11,"into",E,E,6,[[],[U]]],[11,R[5],E,E,6,[[],[R[1]]]],[11,R[6],E,E,6,[[["self"]],[T]]],[11,R[7],E,E,6,[[["self"]],[T]]],[11,R[8],E,E,6,[[["self"]],[R[9]]]],[11,"from",R[241],E,7,[[[T]],[T]]],[11,R[4],E,E,7,[[[U]],[R[1]]]],[11,"into",E,E,7,[[],[U]]],[11,R[5],E,E,7,[[],[R[1]]]],[11,R[6],E,E,7,[[["self"]],[T]]],[11,R[7],E,E,7,[[["self"]],[T]]],[11,R[8],E,E,7,[[["self"]],[R[9]]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[4],E,E,8,[[[U]],[R[1]]]],[11,"into",E,E,8,[[],[U]]],[11,R[5],E,E,8,[[],[R[1]]]],[11,R[6],E,E,8,[[["self"]],[T]]],[11,R[7],E,E,8,[[["self"]],[T]]],[11,R[8],E,E,8,[[["self"]],[R[9]]]],[11,"from",R[242],E,9,[[[T]],[T]]],[11,R[4],E,E,9,[[[U]],[R[1]]]],[11,"into",E,E,9,[[],[U]]],[11,R[5],E,E,9,[[],[R[1]]]],[11,R[6],E,E,9,[[["self"]],[T]]],[11,R[7],E,E,9,[[["self"]],[T]]],[11,R[8],E,E,9,[[["self"]],[R[9]]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[4],E,E,10,[[[U]],[R[1]]]],[11,"into",E,E,10,[[],[U]]],[11,R[5],E,E,10,[[],[R[1]]]],[11,R[6],E,E,10,[[["self"]],[T]]],[11,R[7],E,E,10,[[["self"]],[T]]],[11,R[8],E,E,10,[[["self"]],[R[9]]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[4],E,E,11,[[[U]],[R[1]]]],[11,"into",E,E,11,[[],[U]]],[11,R[5],E,E,11,[[],[R[1]]]],[11,R[6],E,E,11,[[["self"]],[T]]],[11,R[7],E,E,11,[[["self"]],[T]]],[11,R[8],E,E,11,[[["self"]],[R[9]]]],[11,"from",R[243],E,12,[[[T]],[T]]],[11,R[4],E,E,12,[[[U]],[R[1]]]],[11,"into",E,E,12,[[],[U]]],[11,R[5],E,E,12,[[],[R[1]]]],[11,R[6],E,E,12,[[["self"]],[T]]],[11,R[7],E,E,12,[[["self"]],[T]]],[11,R[8],E,E,12,[[["self"]],[R[9]]]],[11,"from",E,E,13,[[[T]],[T]]],[11,R[4],E,E,13,[[[U]],[R[1]]]],[11,"into",E,E,13,[[],[U]]],[11,R[5],E,E,13,[[],[R[1]]]],[11,R[6],E,E,13,[[["self"]],[T]]],[11,R[7],E,E,13,[[["self"]],[T]]],[11,R[8],E,E,13,[[["self"]],[R[9]]]],[11,"from",R[244],E,14,[[[T]],[T]]],[11,R[4],E,E,14,[[[U]],[R[1]]]],[11,"into",E,E,14,[[],[U]]],[11,R[5],E,E,14,[[],[R[1]]]],[11,R[6],E,E,14,[[["self"]],[T]]],[11,R[7],E,E,14,[[["self"]],[T]]],[11,R[8],E,E,14,[[["self"]],[R[9]]]],[11,"from",E,E,15,[[[T]],[T]]],[11,R[4],E,E,15,[[[U]],[R[1]]]],[11,"into",E,E,15,[[],[U]]],[11,R[5],E,E,15,[[],[R[1]]]],[11,R[6],E,E,15,[[["self"]],[T]]],[11,R[7],E,E,15,[[["self"]],[T]]],[11,R[8],E,E,15,[[["self"]],[R[9]]]],[11,"from",R[245],E,16,[[[T]],[T]]],[11,R[4],E,E,16,[[[U]],[R[1]]]],[11,"into",E,E,16,[[],[U]]],[11,R[5],E,E,16,[[],[R[1]]]],[11,R[6],E,E,16,[[["self"]],[T]]],[11,R[7],E,E,16,[[["self"]],[T]]],[11,R[8],E,E,16,[[["self"]],[R[9]]]],[11,"from",E,E,17,[[[T]],[T]]],[11,R[4],E,E,17,[[[U]],[R[1]]]],[11,"into",E,E,17,[[],[U]]],[11,R[5],E,E,17,[[],[R[1]]]],[11,R[6],E,E,17,[[["self"]],[T]]],[11,R[7],E,E,17,[[["self"]],[T]]],[11,R[8],E,E,17,[[["self"]],[R[9]]]],[11,"from",R[246],E,18,[[[T]],[T]]],[11,R[4],E,E,18,[[[U]],[R[1]]]],[11,"into",E,E,18,[[],[U]]],[11,R[5],E,E,18,[[],[R[1]]]],[11,R[6],E,E,18,[[["self"]],[T]]],[11,R[7],E,E,18,[[["self"]],[T]]],[11,R[8],E,E,18,[[["self"]],[R[9]]]],[11,"eq",R[240],E,5,[[["self"],[R[191]]],["bool"]]],[11,"eq",E,E,6,[[["self"],[R[190]]],["bool"]]],[11,"fmt",R[301],E,0,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[302],E,1,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[246],E,18,[[["self"],[R[43]]],[R[1]]]],[11,"clone",R[240],E,5,[[["self"]],[R[191]]]],[11,"clone",E,E,6,[[["self"]],[R[190]]]],[11,"clone",E,E,2,[[["self"]],["event"]]],[11,"clone",R[241],E,7,[[["self"]],["resourcecontrolblock"]]],[11,"clone",E,E,8,[[["self"]],["resourcemanager"]]],[11,"clone",R[242],E,9,[[["self"]],["messagecontrolblock"]]],[11,"clone",R[243],E,12,[[["self"]],["semaphorecontrolblock"]]],[11,"clone",R[244],E,15,[[["self"]],[R[215]]]],[11,"clone",R[245],E,16,[[["self"]],["time"]]]],"p":[[3,"Message"],[3,R[247]],[3,"Event"],[3,R[248]],[3,R[249]],[4,R[194]],[4,R[193]],[3,R[250]],[3,R[251]],[3,R[252]],[3,R[253]],[3,R[209]],[3,R[254]],[3,R[209]],[3,R[255]],[3,R[256]],[3,"Time"],[4,"TickType"],[4,R[257]]]};
searchIndex["r0"]={"doc":"Initialization code (\"crt0\") written in Rust","i":[[5,"init_data","r0","Initializes the `.data` section",N,[[]]],[5,"run_init_array",E,E,N,[[]]],[5,"zero_bss",E,"Zeroes the `.bss` section",N,[[]]],[14,"pre_init_array",E,E,N,N],[14,"init_array",E,E,N,N]],"p":[]};
searchIndex["stable_deref_trait"]={"doc":"This module defines an unsafe marker trait, StableDeref,…","i":[[8,"StableDeref","stable_deref_trait","An unsafe marker trait for types that deref to a stable…",N,N],[8,"CloneStableDeref",E,"An unsafe marker trait for types where clones deref to the…",N,N]],"p":[]};
searchIndex["typenum"]={"doc":"This crate provides type-level numbers evaluated at…","i":[[3,"Greater",R[12],R[10],N,N],[3,"Less",E,R[10],N,N],[3,"Equal",E,R[10],N,N],[0,"consts",E,"Type aliases for many constants.",N,N],[6,"True","typenum::consts",E,N,N],[6,"False",E,E,N,N],[6,"U0",E,E,N,N],[6,"U1",E,E,N,N],[6,"P1",E,E,N,N],[6,"N1",E,E,N,N],[6,"U2",E,E,N,N],[6,"P2",E,E,N,N],[6,"N2",E,E,N,N],[6,"U3",E,E,N,N],[6,"P3",E,E,N,N],[6,"N3",E,E,N,N],[6,"U4",E,E,N,N],[6,"P4",E,E,N,N],[6,"N4",E,E,N,N],[6,"U5",E,E,N,N],[6,"P5",E,E,N,N],[6,"N5",E,E,N,N],[6,"U6",E,E,N,N],[6,"P6",E,E,N,N],[6,"N6",E,E,N,N],[6,"U7",E,E,N,N],[6,"P7",E,E,N,N],[6,"N7",E,E,N,N],[6,"U8",E,E,N,N],[6,"P8",E,E,N,N],[6,"N8",E,E,N,N],[6,"U9",E,E,N,N],[6,"P9",E,E,N,N],[6,"N9",E,E,N,N],[6,"U10",E,E,N,N],[6,"P10",E,E,N,N],[6,"N10",E,E,N,N],[6,"U11",E,E,N,N],[6,"P11",E,E,N,N],[6,"N11",E,E,N,N],[6,"U12",E,E,N,N],[6,"P12",E,E,N,N],[6,"N12",E,E,N,N],[6,"U13",E,E,N,N],[6,"P13",E,E,N,N],[6,"N13",E,E,N,N],[6,"U14",E,E,N,N],[6,"P14",E,E,N,N],[6,"N14",E,E,N,N],[6,"U15",E,E,N,N],[6,"P15",E,E,N,N],[6,"N15",E,E,N,N],[6,"U16",E,E,N,N],[6,"P16",E,E,N,N],[6,"N16",E,E,N,N],[6,"U17",E,E,N,N],[6,"P17",E,E,N,N],[6,"N17",E,E,N,N],[6,"U18",E,E,N,N],[6,"P18",E,E,N,N],[6,"N18",E,E,N,N],[6,"U19",E,E,N,N],[6,"P19",E,E,N,N],[6,"N19",E,E,N,N],[6,"U20",E,E,N,N],[6,"P20",E,E,N,N],[6,"N20",E,E,N,N],[6,"U21",E,E,N,N],[6,"P21",E,E,N,N],[6,"N21",E,E,N,N],[6,"U22",E,E,N,N],[6,"P22",E,E,N,N],[6,"N22",E,E,N,N],[6,"U23",E,E,N,N],[6,"P23",E,E,N,N],[6,"N23",E,E,N,N],[6,"U24",E,E,N,N],[6,"P24",E,E,N,N],[6,"N24",E,E,N,N],[6,"U25",E,E,N,N],[6,"P25",E,E,N,N],[6,"N25",E,E,N,N],[6,"U26",E,E,N,N],[6,"P26",E,E,N,N],[6,"N26",E,E,N,N],[6,"U27",E,E,N,N],[6,"P27",E,E,N,N],[6,"N27",E,E,N,N],[6,"U28",E,E,N,N],[6,"P28",E,E,N,N],[6,"N28",E,E,N,N],[6,"U29",E,E,N,N],[6,"P29",E,E,N,N],[6,"N29",E,E,N,N],[6,"U30",E,E,N,N],[6,"P30",E,E,N,N],[6,"N30",E,E,N,N],[6,"U31",E,E,N,N],[6,"P31",E,E,N,N],[6,"N31",E,E,N,N],[6,"U32",E,E,N,N],[6,"P32",E,E,N,N],[6,"N32",E,E,N,N],[6,"U33",E,E,N,N],[6,"P33",E,E,N,N],[6,"N33",E,E,N,N],[6,"U34",E,E,N,N],[6,"P34",E,E,N,N],[6,"N34",E,E,N,N],[6,"U35",E,E,N,N],[6,"P35",E,E,N,N],[6,"N35",E,E,N,N],[6,"U36",E,E,N,N],[6,"P36",E,E,N,N],[6,"N36",E,E,N,N],[6,"U37",E,E,N,N],[6,"P37",E,E,N,N],[6,"N37",E,E,N,N],[6,"U38",E,E,N,N],[6,"P38",E,E,N,N],[6,"N38",E,E,N,N],[6,"U39",E,E,N,N],[6,"P39",E,E,N,N],[6,"N39",E,E,N,N],[6,"U40",E,E,N,N],[6,"P40",E,E,N,N],[6,"N40",E,E,N,N],[6,"U41",E,E,N,N],[6,"P41",E,E,N,N],[6,"N41",E,E,N,N],[6,"U42",E,E,N,N],[6,"P42",E,E,N,N],[6,"N42",E,E,N,N],[6,"U43",E,E,N,N],[6,"P43",E,E,N,N],[6,"N43",E,E,N,N],[6,"U44",E,E,N,N],[6,"P44",E,E,N,N],[6,"N44",E,E,N,N],[6,"U45",E,E,N,N],[6,"P45",E,E,N,N],[6,"N45",E,E,N,N],[6,"U46",E,E,N,N],[6,"P46",E,E,N,N],[6,"N46",E,E,N,N],[6,"U47",E,E,N,N],[6,"P47",E,E,N,N],[6,"N47",E,E,N,N],[6,"U48",E,E,N,N],[6,"P48",E,E,N,N],[6,"N48",E,E,N,N],[6,"U49",E,E,N,N],[6,"P49",E,E,N,N],[6,"N49",E,E,N,N],[6,"U50",E,E,N,N],[6,"P50",E,E,N,N],[6,"N50",E,E,N,N],[6,"U51",E,E,N,N],[6,"P51",E,E,N,N],[6,"N51",E,E,N,N],[6,"U52",E,E,N,N],[6,"P52",E,E,N,N],[6,"N52",E,E,N,N],[6,"U53",E,E,N,N],[6,"P53",E,E,N,N],[6,"N53",E,E,N,N],[6,"U54",E,E,N,N],[6,"P54",E,E,N,N],[6,"N54",E,E,N,N],[6,"U55",E,E,N,N],[6,"P55",E,E,N,N],[6,"N55",E,E,N,N],[6,"U56",E,E,N,N],[6,"P56",E,E,N,N],[6,"N56",E,E,N,N],[6,"U57",E,E,N,N],[6,"P57",E,E,N,N],[6,"N57",E,E,N,N],[6,"U58",E,E,N,N],[6,"P58",E,E,N,N],[6,"N58",E,E,N,N],[6,"U59",E,E,N,N],[6,"P59",E,E,N,N],[6,"N59",E,E,N,N],[6,"U60",E,E,N,N],[6,"P60",E,E,N,N],[6,"N60",E,E,N,N],[6,"U61",E,E,N,N],[6,"P61",E,E,N,N],[6,"N61",E,E,N,N],[6,"U62",E,E,N,N],[6,"P62",E,E,N,N],[6,"N62",E,E,N,N],[6,"U63",E,E,N,N],[6,"P63",E,E,N,N],[6,"N63",E,E,N,N],[6,"U64",E,E,N,N],[6,"P64",E,E,N,N],[6,"N64",E,E,N,N],[6,"U65",E,E,N,N],[6,"P65",E,E,N,N],[6,"N65",E,E,N,N],[6,"U66",E,E,N,N],[6,"P66",E,E,N,N],[6,"N66",E,E,N,N],[6,"U67",E,E,N,N],[6,"P67",E,E,N,N],[6,"N67",E,E,N,N],[6,"U68",E,E,N,N],[6,"P68",E,E,N,N],[6,"N68",E,E,N,N],[6,"U69",E,E,N,N],[6,"P69",E,E,N,N],[6,"N69",E,E,N,N],[6,"U70",E,E,N,N],[6,"P70",E,E,N,N],[6,"N70",E,E,N,N],[6,"U71",E,E,N,N],[6,"P71",E,E,N,N],[6,"N71",E,E,N,N],[6,"U72",E,E,N,N],[6,"P72",E,E,N,N],[6,"N72",E,E,N,N],[6,"U73",E,E,N,N],[6,"P73",E,E,N,N],[6,"N73",E,E,N,N],[6,"U74",E,E,N,N],[6,"P74",E,E,N,N],[6,"N74",E,E,N,N],[6,"U75",E,E,N,N],[6,"P75",E,E,N,N],[6,"N75",E,E,N,N],[6,"U76",E,E,N,N],[6,"P76",E,E,N,N],[6,"N76",E,E,N,N],[6,"U77",E,E,N,N],[6,"P77",E,E,N,N],[6,"N77",E,E,N,N],[6,"U78",E,E,N,N],[6,"P78",E,E,N,N],[6,"N78",E,E,N,N],[6,"U79",E,E,N,N],[6,"P79",E,E,N,N],[6,"N79",E,E,N,N],[6,"U80",E,E,N,N],[6,"P80",E,E,N,N],[6,"N80",E,E,N,N],[6,"U81",E,E,N,N],[6,"P81",E,E,N,N],[6,"N81",E,E,N,N],[6,"U82",E,E,N,N],[6,"P82",E,E,N,N],[6,"N82",E,E,N,N],[6,"U83",E,E,N,N],[6,"P83",E,E,N,N],[6,"N83",E,E,N,N],[6,"U84",E,E,N,N],[6,"P84",E,E,N,N],[6,"N84",E,E,N,N],[6,"U85",E,E,N,N],[6,"P85",E,E,N,N],[6,"N85",E,E,N,N],[6,"U86",E,E,N,N],[6,"P86",E,E,N,N],[6,"N86",E,E,N,N],[6,"U87",E,E,N,N],[6,"P87",E,E,N,N],[6,"N87",E,E,N,N],[6,"U88",E,E,N,N],[6,"P88",E,E,N,N],[6,"N88",E,E,N,N],[6,"U89",E,E,N,N],[6,"P89",E,E,N,N],[6,"N89",E,E,N,N],[6,"U90",E,E,N,N],[6,"P90",E,E,N,N],[6,"N90",E,E,N,N],[6,"U91",E,E,N,N],[6,"P91",E,E,N,N],[6,"N91",E,E,N,N],[6,"U92",E,E,N,N],[6,"P92",E,E,N,N],[6,"N92",E,E,N,N],[6,"U93",E,E,N,N],[6,"P93",E,E,N,N],[6,"N93",E,E,N,N],[6,"U94",E,E,N,N],[6,"P94",E,E,N,N],[6,"N94",E,E,N,N],[6,"U95",E,E,N,N],[6,"P95",E,E,N,N],[6,"N95",E,E,N,N],[6,"U96",E,E,N,N],[6,"P96",E,E,N,N],[6,"N96",E,E,N,N],[6,"U97",E,E,N,N],[6,"P97",E,E,N,N],[6,"N97",E,E,N,N],[6,"U98",E,E,N,N],[6,"P98",E,E,N,N],[6,"N98",E,E,N,N],[6,"U99",E,E,N,N],[6,"P99",E,E,N,N],[6,"N99",E,E,N,N],[6,"U100",E,E,N,N],[6,"P100",E,E,N,N],[6,"N100",E,E,N,N],[6,"U101",E,E,N,N],[6,"P101",E,E,N,N],[6,"N101",E,E,N,N],[6,"U102",E,E,N,N],[6,"P102",E,E,N,N],[6,"N102",E,E,N,N],[6,"U103",E,E,N,N],[6,"P103",E,E,N,N],[6,"N103",E,E,N,N],[6,"U104",E,E,N,N],[6,"P104",E,E,N,N],[6,"N104",E,E,N,N],[6,"U105",E,E,N,N],[6,"P105",E,E,N,N],[6,"N105",E,E,N,N],[6,"U106",E,E,N,N],[6,"P106",E,E,N,N],[6,"N106",E,E,N,N],[6,"U107",E,E,N,N],[6,"P107",E,E,N,N],[6,"N107",E,E,N,N],[6,"U108",E,E,N,N],[6,"P108",E,E,N,N],[6,"N108",E,E,N,N],[6,"U109",E,E,N,N],[6,"P109",E,E,N,N],[6,"N109",E,E,N,N],[6,"U110",E,E,N,N],[6,"P110",E,E,N,N],[6,"N110",E,E,N,N],[6,"U111",E,E,N,N],[6,"P111",E,E,N,N],[6,"N111",E,E,N,N],[6,"U112",E,E,N,N],[6,"P112",E,E,N,N],[6,"N112",E,E,N,N],[6,"U113",E,E,N,N],[6,"P113",E,E,N,N],[6,"N113",E,E,N,N],[6,"U114",E,E,N,N],[6,"P114",E,E,N,N],[6,"N114",E,E,N,N],[6,"U115",E,E,N,N],[6,"P115",E,E,N,N],[6,"N115",E,E,N,N],[6,"U116",E,E,N,N],[6,"P116",E,E,N,N],[6,"N116",E,E,N,N],[6,"U117",E,E,N,N],[6,"P117",E,E,N,N],[6,"N117",E,E,N,N],[6,"U118",E,E,N,N],[6,"P118",E,E,N,N],[6,"N118",E,E,N,N],[6,"U119",E,E,N,N],[6,"P119",E,E,N,N],[6,"N119",E,E,N,N],[6,"U120",E,E,N,N],[6,"P120",E,E,N,N],[6,"N120",E,E,N,N],[6,"U121",E,E,N,N],[6,"P121",E,E,N,N],[6,"N121",E,E,N,N],[6,"U122",E,E,N,N],[6,"P122",E,E,N,N],[6,"N122",E,E,N,N],[6,"U123",E,E,N,N],[6,"P123",E,E,N,N],[6,"N123",E,E,N,N],[6,"U124",E,E,N,N],[6,"P124",E,E,N,N],[6,"N124",E,E,N,N],[6,"U125",E,E,N,N],[6,"P125",E,E,N,N],[6,"N125",E,E,N,N],[6,"U126",E,E,N,N],[6,"P126",E,E,N,N],[6,"N126",E,E,N,N],[6,"U127",E,E,N,N],[6,"P127",E,E,N,N],[6,"N127",E,E,N,N],[6,"U128",E,E,N,N],[6,"P128",E,E,N,N],[6,"N128",E,E,N,N],[6,"U129",E,E,N,N],[6,"P129",E,E,N,N],[6,"N129",E,E,N,N],[6,"U130",E,E,N,N],[6,"P130",E,E,N,N],[6,"N130",E,E,N,N],[6,"U131",E,E,N,N],[6,"P131",E,E,N,N],[6,"N131",E,E,N,N],[6,"U132",E,E,N,N],[6,"P132",E,E,N,N],[6,"N132",E,E,N,N],[6,"U133",E,E,N,N],[6,"P133",E,E,N,N],[6,"N133",E,E,N,N],[6,"U134",E,E,N,N],[6,"P134",E,E,N,N],[6,"N134",E,E,N,N],[6,"U135",E,E,N,N],[6,"P135",E,E,N,N],[6,"N135",E,E,N,N],[6,"U136",E,E,N,N],[6,"P136",E,E,N,N],[6,"N136",E,E,N,N],[6,"U137",E,E,N,N],[6,"P137",E,E,N,N],[6,"N137",E,E,N,N],[6,"U138",E,E,N,N],[6,"P138",E,E,N,N],[6,"N138",E,E,N,N],[6,"U139",E,E,N,N],[6,"P139",E,E,N,N],[6,"N139",E,E,N,N],[6,"U140",E,E,N,N],[6,"P140",E,E,N,N],[6,"N140",E,E,N,N],[6,"U141",E,E,N,N],[6,"P141",E,E,N,N],[6,"N141",E,E,N,N],[6,"U142",E,E,N,N],[6,"P142",E,E,N,N],[6,"N142",E,E,N,N],[6,"U143",E,E,N,N],[6,"P143",E,E,N,N],[6,"N143",E,E,N,N],[6,"U144",E,E,N,N],[6,"P144",E,E,N,N],[6,"N144",E,E,N,N],[6,"U145",E,E,N,N],[6,"P145",E,E,N,N],[6,"N145",E,E,N,N],[6,"U146",E,E,N,N],[6,"P146",E,E,N,N],[6,"N146",E,E,N,N],[6,"U147",E,E,N,N],[6,"P147",E,E,N,N],[6,"N147",E,E,N,N],[6,"U148",E,E,N,N],[6,"P148",E,E,N,N],[6,"N148",E,E,N,N],[6,"U149",E,E,N,N],[6,"P149",E,E,N,N],[6,"N149",E,E,N,N],[6,"U150",E,E,N,N],[6,"P150",E,E,N,N],[6,"N150",E,E,N,N],[6,"U151",E,E,N,N],[6,"P151",E,E,N,N],[6,"N151",E,E,N,N],[6,"U152",E,E,N,N],[6,"P152",E,E,N,N],[6,"N152",E,E,N,N],[6,"U153",E,E,N,N],[6,"P153",E,E,N,N],[6,"N153",E,E,N,N],[6,"U154",E,E,N,N],[6,"P154",E,E,N,N],[6,"N154",E,E,N,N],[6,"U155",E,E,N,N],[6,"P155",E,E,N,N],[6,"N155",E,E,N,N],[6,"U156",E,E,N,N],[6,"P156",E,E,N,N],[6,"N156",E,E,N,N],[6,"U157",E,E,N,N],[6,"P157",E,E,N,N],[6,"N157",E,E,N,N],[6,"U158",E,E,N,N],[6,"P158",E,E,N,N],[6,"N158",E,E,N,N],[6,"U159",E,E,N,N],[6,"P159",E,E,N,N],[6,"N159",E,E,N,N],[6,"U160",E,E,N,N],[6,"P160",E,E,N,N],[6,"N160",E,E,N,N],[6,"U161",E,E,N,N],[6,"P161",E,E,N,N],[6,"N161",E,E,N,N],[6,"U162",E,E,N,N],[6,"P162",E,E,N,N],[6,"N162",E,E,N,N],[6,"U163",E,E,N,N],[6,"P163",E,E,N,N],[6,"N163",E,E,N,N],[6,"U164",E,E,N,N],[6,"P164",E,E,N,N],[6,"N164",E,E,N,N],[6,"U165",E,E,N,N],[6,"P165",E,E,N,N],[6,"N165",E,E,N,N],[6,"U166",E,E,N,N],[6,"P166",E,E,N,N],[6,"N166",E,E,N,N],[6,"U167",E,E,N,N],[6,"P167",E,E,N,N],[6,"N167",E,E,N,N],[6,"U168",E,E,N,N],[6,"P168",E,E,N,N],[6,"N168",E,E,N,N],[6,"U169",E,E,N,N],[6,"P169",E,E,N,N],[6,"N169",E,E,N,N],[6,"U170",E,E,N,N],[6,"P170",E,E,N,N],[6,"N170",E,E,N,N],[6,"U171",E,E,N,N],[6,"P171",E,E,N,N],[6,"N171",E,E,N,N],[6,"U172",E,E,N,N],[6,"P172",E,E,N,N],[6,"N172",E,E,N,N],[6,"U173",E,E,N,N],[6,"P173",E,E,N,N],[6,"N173",E,E,N,N],[6,"U174",E,E,N,N],[6,"P174",E,E,N,N],[6,"N174",E,E,N,N],[6,"U175",E,E,N,N],[6,"P175",E,E,N,N],[6,"N175",E,E,N,N],[6,"U176",E,E,N,N],[6,"P176",E,E,N,N],[6,"N176",E,E,N,N],[6,"U177",E,E,N,N],[6,"P177",E,E,N,N],[6,"N177",E,E,N,N],[6,"U178",E,E,N,N],[6,"P178",E,E,N,N],[6,"N178",E,E,N,N],[6,"U179",E,E,N,N],[6,"P179",E,E,N,N],[6,"N179",E,E,N,N],[6,"U180",E,E,N,N],[6,"P180",E,E,N,N],[6,"N180",E,E,N,N],[6,"U181",E,E,N,N],[6,"P181",E,E,N,N],[6,"N181",E,E,N,N],[6,"U182",E,E,N,N],[6,"P182",E,E,N,N],[6,"N182",E,E,N,N],[6,"U183",E,E,N,N],[6,"P183",E,E,N,N],[6,"N183",E,E,N,N],[6,"U184",E,E,N,N],[6,"P184",E,E,N,N],[6,"N184",E,E,N,N],[6,"U185",E,E,N,N],[6,"P185",E,E,N,N],[6,"N185",E,E,N,N],[6,"U186",E,E,N,N],[6,"P186",E,E,N,N],[6,"N186",E,E,N,N],[6,"U187",E,E,N,N],[6,"P187",E,E,N,N],[6,"N187",E,E,N,N],[6,"U188",E,E,N,N],[6,"P188",E,E,N,N],[6,"N188",E,E,N,N],[6,"U189",E,E,N,N],[6,"P189",E,E,N,N],[6,"N189",E,E,N,N],[6,"U190",E,E,N,N],[6,"P190",E,E,N,N],[6,"N190",E,E,N,N],[6,"U191",E,E,N,N],[6,"P191",E,E,N,N],[6,"N191",E,E,N,N],[6,"U192",E,E,N,N],[6,"P192",E,E,N,N],[6,"N192",E,E,N,N],[6,"U193",E,E,N,N],[6,"P193",E,E,N,N],[6,"N193",E,E,N,N],[6,"U194",E,E,N,N],[6,"P194",E,E,N,N],[6,"N194",E,E,N,N],[6,"U195",E,E,N,N],[6,"P195",E,E,N,N],[6,"N195",E,E,N,N],[6,"U196",E,E,N,N],[6,"P196",E,E,N,N],[6,"N196",E,E,N,N],[6,"U197",E,E,N,N],[6,"P197",E,E,N,N],[6,"N197",E,E,N,N],[6,"U198",E,E,N,N],[6,"P198",E,E,N,N],[6,"N198",E,E,N,N],[6,"U199",E,E,N,N],[6,"P199",E,E,N,N],[6,"N199",E,E,N,N],[6,"U200",E,E,N,N],[6,"P200",E,E,N,N],[6,"N200",E,E,N,N],[6,"U201",E,E,N,N],[6,"P201",E,E,N,N],[6,"N201",E,E,N,N],[6,"U202",E,E,N,N],[6,"P202",E,E,N,N],[6,"N202",E,E,N,N],[6,"U203",E,E,N,N],[6,"P203",E,E,N,N],[6,"N203",E,E,N,N],[6,"U204",E,E,N,N],[6,"P204",E,E,N,N],[6,"N204",E,E,N,N],[6,"U205",E,E,N,N],[6,"P205",E,E,N,N],[6,"N205",E,E,N,N],[6,"U206",E,E,N,N],[6,"P206",E,E,N,N],[6,"N206",E,E,N,N],[6,"U207",E,E,N,N],[6,"P207",E,E,N,N],[6,"N207",E,E,N,N],[6,"U208",E,E,N,N],[6,"P208",E,E,N,N],[6,"N208",E,E,N,N],[6,"U209",E,E,N,N],[6,"P209",E,E,N,N],[6,"N209",E,E,N,N],[6,"U210",E,E,N,N],[6,"P210",E,E,N,N],[6,"N210",E,E,N,N],[6,"U211",E,E,N,N],[6,"P211",E,E,N,N],[6,"N211",E,E,N,N],[6,"U212",E,E,N,N],[6,"P212",E,E,N,N],[6,"N212",E,E,N,N],[6,"U213",E,E,N,N],[6,"P213",E,E,N,N],[6,"N213",E,E,N,N],[6,"U214",E,E,N,N],[6,"P214",E,E,N,N],[6,"N214",E,E,N,N],[6,"U215",E,E,N,N],[6,"P215",E,E,N,N],[6,"N215",E,E,N,N],[6,"U216",E,E,N,N],[6,"P216",E,E,N,N],[6,"N216",E,E,N,N],[6,"U217",E,E,N,N],[6,"P217",E,E,N,N],[6,"N217",E,E,N,N],[6,"U218",E,E,N,N],[6,"P218",E,E,N,N],[6,"N218",E,E,N,N],[6,"U219",E,E,N,N],[6,"P219",E,E,N,N],[6,"N219",E,E,N,N],[6,"U220",E,E,N,N],[6,"P220",E,E,N,N],[6,"N220",E,E,N,N],[6,"U221",E,E,N,N],[6,"P221",E,E,N,N],[6,"N221",E,E,N,N],[6,"U222",E,E,N,N],[6,"P222",E,E,N,N],[6,"N222",E,E,N,N],[6,"U223",E,E,N,N],[6,"P223",E,E,N,N],[6,"N223",E,E,N,N],[6,"U224",E,E,N,N],[6,"P224",E,E,N,N],[6,"N224",E,E,N,N],[6,"U225",E,E,N,N],[6,"P225",E,E,N,N],[6,"N225",E,E,N,N],[6,"U226",E,E,N,N],[6,"P226",E,E,N,N],[6,"N226",E,E,N,N],[6,"U227",E,E,N,N],[6,"P227",E,E,N,N],[6,"N227",E,E,N,N],[6,"U228",E,E,N,N],[6,"P228",E,E,N,N],[6,"N228",E,E,N,N],[6,"U229",E,E,N,N],[6,"P229",E,E,N,N],[6,"N229",E,E,N,N],[6,"U230",E,E,N,N],[6,"P230",E,E,N,N],[6,"N230",E,E,N,N],[6,"U231",E,E,N,N],[6,"P231",E,E,N,N],[6,"N231",E,E,N,N],[6,"U232",E,E,N,N],[6,"P232",E,E,N,N],[6,"N232",E,E,N,N],[6,"U233",E,E,N,N],[6,"P233",E,E,N,N],[6,"N233",E,E,N,N],[6,"U234",E,E,N,N],[6,"P234",E,E,N,N],[6,"N234",E,E,N,N],[6,"U235",E,E,N,N],[6,"P235",E,E,N,N],[6,"N235",E,E,N,N],[6,"U236",E,E,N,N],[6,"P236",E,E,N,N],[6,"N236",E,E,N,N],[6,"U237",E,E,N,N],[6,"P237",E,E,N,N],[6,"N237",E,E,N,N],[6,"U238",E,E,N,N],[6,"P238",E,E,N,N],[6,"N238",E,E,N,N],[6,"U239",E,E,N,N],[6,"P239",E,E,N,N],[6,"N239",E,E,N,N],[6,"U240",E,E,N,N],[6,"P240",E,E,N,N],[6,"N240",E,E,N,N],[6,"U241",E,E,N,N],[6,"P241",E,E,N,N],[6,"N241",E,E,N,N],[6,"U242",E,E,N,N],[6,"P242",E,E,N,N],[6,"N242",E,E,N,N],[6,"U243",E,E,N,N],[6,"P243",E,E,N,N],[6,"N243",E,E,N,N],[6,"U244",E,E,N,N],[6,"P244",E,E,N,N],[6,"N244",E,E,N,N],[6,"U245",E,E,N,N],[6,"P245",E,E,N,N],[6,"N245",E,E,N,N],[6,"U246",E,E,N,N],[6,"P246",E,E,N,N],[6,"N246",E,E,N,N],[6,"U247",E,E,N,N],[6,"P247",E,E,N,N],[6,"N247",E,E,N,N],[6,"U248",E,E,N,N],[6,"P248",E,E,N,N],[6,"N248",E,E,N,N],[6,"U249",E,E,N,N],[6,"P249",E,E,N,N],[6,"N249",E,E,N,N],[6,"U250",E,E,N,N],[6,"P250",E,E,N,N],[6,"N250",E,E,N,N],[6,"U251",E,E,N,N],[6,"P251",E,E,N,N],[6,"N251",E,E,N,N],[6,"U252",E,E,N,N],[6,"P252",E,E,N,N],[6,"N252",E,E,N,N],[6,"U253",E,E,N,N],[6,"P253",E,E,N,N],[6,"N253",E,E,N,N],[6,"U254",E,E,N,N],[6,"P254",E,E,N,N],[6,"N254",E,E,N,N],[6,"U255",E,E,N,N],[6,"P255",E,E,N,N],[6,"N255",E,E,N,N],[6,"U256",E,E,N,N],[6,"P256",E,E,N,N],[6,"N256",E,E,N,N],[6,"U257",E,E,N,N],[6,"P257",E,E,N,N],[6,"N257",E,E,N,N],[6,"U258",E,E,N,N],[6,"P258",E,E,N,N],[6,"N258",E,E,N,N],[6,"U259",E,E,N,N],[6,"P259",E,E,N,N],[6,"N259",E,E,N,N],[6,"U260",E,E,N,N],[6,"P260",E,E,N,N],[6,"N260",E,E,N,N],[6,"U261",E,E,N,N],[6,"P261",E,E,N,N],[6,"N261",E,E,N,N],[6,"U262",E,E,N,N],[6,"P262",E,E,N,N],[6,"N262",E,E,N,N],[6,"U263",E,E,N,N],[6,"P263",E,E,N,N],[6,"N263",E,E,N,N],[6,"U264",E,E,N,N],[6,"P264",E,E,N,N],[6,"N264",E,E,N,N],[6,"U265",E,E,N,N],[6,"P265",E,E,N,N],[6,"N265",E,E,N,N],[6,"U266",E,E,N,N],[6,"P266",E,E,N,N],[6,"N266",E,E,N,N],[6,"U267",E,E,N,N],[6,"P267",E,E,N,N],[6,"N267",E,E,N,N],[6,"U268",E,E,N,N],[6,"P268",E,E,N,N],[6,"N268",E,E,N,N],[6,"U269",E,E,N,N],[6,"P269",E,E,N,N],[6,"N269",E,E,N,N],[6,"U270",E,E,N,N],[6,"P270",E,E,N,N],[6,"N270",E,E,N,N],[6,"U271",E,E,N,N],[6,"P271",E,E,N,N],[6,"N271",E,E,N,N],[6,"U272",E,E,N,N],[6,"P272",E,E,N,N],[6,"N272",E,E,N,N],[6,"U273",E,E,N,N],[6,"P273",E,E,N,N],[6,"N273",E,E,N,N],[6,"U274",E,E,N,N],[6,"P274",E,E,N,N],[6,"N274",E,E,N,N],[6,"U275",E,E,N,N],[6,"P275",E,E,N,N],[6,"N275",E,E,N,N],[6,"U276",E,E,N,N],[6,"P276",E,E,N,N],[6,"N276",E,E,N,N],[6,"U277",E,E,N,N],[6,"P277",E,E,N,N],[6,"N277",E,E,N,N],[6,"U278",E,E,N,N],[6,"P278",E,E,N,N],[6,"N278",E,E,N,N],[6,"U279",E,E,N,N],[6,"P279",E,E,N,N],[6,"N279",E,E,N,N],[6,"U280",E,E,N,N],[6,"P280",E,E,N,N],[6,"N280",E,E,N,N],[6,"U281",E,E,N,N],[6,"P281",E,E,N,N],[6,"N281",E,E,N,N],[6,"U282",E,E,N,N],[6,"P282",E,E,N,N],[6,"N282",E,E,N,N],[6,"U283",E,E,N,N],[6,"P283",E,E,N,N],[6,"N283",E,E,N,N],[6,"U284",E,E,N,N],[6,"P284",E,E,N,N],[6,"N284",E,E,N,N],[6,"U285",E,E,N,N],[6,"P285",E,E,N,N],[6,"N285",E,E,N,N],[6,"U286",E,E,N,N],[6,"P286",E,E,N,N],[6,"N286",E,E,N,N],[6,"U287",E,E,N,N],[6,"P287",E,E,N,N],[6,"N287",E,E,N,N],[6,"U288",E,E,N,N],[6,"P288",E,E,N,N],[6,"N288",E,E,N,N],[6,"U289",E,E,N,N],[6,"P289",E,E,N,N],[6,"N289",E,E,N,N],[6,"U290",E,E,N,N],[6,"P290",E,E,N,N],[6,"N290",E,E,N,N],[6,"U291",E,E,N,N],[6,"P291",E,E,N,N],[6,"N291",E,E,N,N],[6,"U292",E,E,N,N],[6,"P292",E,E,N,N],[6,"N292",E,E,N,N],[6,"U293",E,E,N,N],[6,"P293",E,E,N,N],[6,"N293",E,E,N,N],[6,"U294",E,E,N,N],[6,"P294",E,E,N,N],[6,"N294",E,E,N,N],[6,"U295",E,E,N,N],[6,"P295",E,E,N,N],[6,"N295",E,E,N,N],[6,"U296",E,E,N,N],[6,"P296",E,E,N,N],[6,"N296",E,E,N,N],[6,"U297",E,E,N,N],[6,"P297",E,E,N,N],[6,"N297",E,E,N,N],[6,"U298",E,E,N,N],[6,"P298",E,E,N,N],[6,"N298",E,E,N,N],[6,"U299",E,E,N,N],[6,"P299",E,E,N,N],[6,"N299",E,E,N,N],[6,"U300",E,E,N,N],[6,"P300",E,E,N,N],[6,"N300",E,E,N,N],[6,"U301",E,E,N,N],[6,"P301",E,E,N,N],[6,"N301",E,E,N,N],[6,"U302",E,E,N,N],[6,"P302",E,E,N,N],[6,"N302",E,E,N,N],[6,"U303",E,E,N,N],[6,"P303",E,E,N,N],[6,"N303",E,E,N,N],[6,"U304",E,E,N,N],[6,"P304",E,E,N,N],[6,"N304",E,E,N,N],[6,"U305",E,E,N,N],[6,"P305",E,E,N,N],[6,"N305",E,E,N,N],[6,"U306",E,E,N,N],[6,"P306",E,E,N,N],[6,"N306",E,E,N,N],[6,"U307",E,E,N,N],[6,"P307",E,E,N,N],[6,"N307",E,E,N,N],[6,"U308",E,E,N,N],[6,"P308",E,E,N,N],[6,"N308",E,E,N,N],[6,"U309",E,E,N,N],[6,"P309",E,E,N,N],[6,"N309",E,E,N,N],[6,"U310",E,E,N,N],[6,"P310",E,E,N,N],[6,"N310",E,E,N,N],[6,"U311",E,E,N,N],[6,"P311",E,E,N,N],[6,"N311",E,E,N,N],[6,"U312",E,E,N,N],[6,"P312",E,E,N,N],[6,"N312",E,E,N,N],[6,"U313",E,E,N,N],[6,"P313",E,E,N,N],[6,"N313",E,E,N,N],[6,"U314",E,E,N,N],[6,"P314",E,E,N,N],[6,"N314",E,E,N,N],[6,"U315",E,E,N,N],[6,"P315",E,E,N,N],[6,"N315",E,E,N,N],[6,"U316",E,E,N,N],[6,"P316",E,E,N,N],[6,"N316",E,E,N,N],[6,"U317",E,E,N,N],[6,"P317",E,E,N,N],[6,"N317",E,E,N,N],[6,"U318",E,E,N,N],[6,"P318",E,E,N,N],[6,"N318",E,E,N,N],[6,"U319",E,E,N,N],[6,"P319",E,E,N,N],[6,"N319",E,E,N,N],[6,"U320",E,E,N,N],[6,"P320",E,E,N,N],[6,"N320",E,E,N,N],[6,"U321",E,E,N,N],[6,"P321",E,E,N,N],[6,"N321",E,E,N,N],[6,"U322",E,E,N,N],[6,"P322",E,E,N,N],[6,"N322",E,E,N,N],[6,"U323",E,E,N,N],[6,"P323",E,E,N,N],[6,"N323",E,E,N,N],[6,"U324",E,E,N,N],[6,"P324",E,E,N,N],[6,"N324",E,E,N,N],[6,"U325",E,E,N,N],[6,"P325",E,E,N,N],[6,"N325",E,E,N,N],[6,"U326",E,E,N,N],[6,"P326",E,E,N,N],[6,"N326",E,E,N,N],[6,"U327",E,E,N,N],[6,"P327",E,E,N,N],[6,"N327",E,E,N,N],[6,"U328",E,E,N,N],[6,"P328",E,E,N,N],[6,"N328",E,E,N,N],[6,"U329",E,E,N,N],[6,"P329",E,E,N,N],[6,"N329",E,E,N,N],[6,"U330",E,E,N,N],[6,"P330",E,E,N,N],[6,"N330",E,E,N,N],[6,"U331",E,E,N,N],[6,"P331",E,E,N,N],[6,"N331",E,E,N,N],[6,"U332",E,E,N,N],[6,"P332",E,E,N,N],[6,"N332",E,E,N,N],[6,"U333",E,E,N,N],[6,"P333",E,E,N,N],[6,"N333",E,E,N,N],[6,"U334",E,E,N,N],[6,"P334",E,E,N,N],[6,"N334",E,E,N,N],[6,"U335",E,E,N,N],[6,"P335",E,E,N,N],[6,"N335",E,E,N,N],[6,"U336",E,E,N,N],[6,"P336",E,E,N,N],[6,"N336",E,E,N,N],[6,"U337",E,E,N,N],[6,"P337",E,E,N,N],[6,"N337",E,E,N,N],[6,"U338",E,E,N,N],[6,"P338",E,E,N,N],[6,"N338",E,E,N,N],[6,"U339",E,E,N,N],[6,"P339",E,E,N,N],[6,"N339",E,E,N,N],[6,"U340",E,E,N,N],[6,"P340",E,E,N,N],[6,"N340",E,E,N,N],[6,"U341",E,E,N,N],[6,"P341",E,E,N,N],[6,"N341",E,E,N,N],[6,"U342",E,E,N,N],[6,"P342",E,E,N,N],[6,"N342",E,E,N,N],[6,"U343",E,E,N,N],[6,"P343",E,E,N,N],[6,"N343",E,E,N,N],[6,"U344",E,E,N,N],[6,"P344",E,E,N,N],[6,"N344",E,E,N,N],[6,"U345",E,E,N,N],[6,"P345",E,E,N,N],[6,"N345",E,E,N,N],[6,"U346",E,E,N,N],[6,"P346",E,E,N,N],[6,"N346",E,E,N,N],[6,"U347",E,E,N,N],[6,"P347",E,E,N,N],[6,"N347",E,E,N,N],[6,"U348",E,E,N,N],[6,"P348",E,E,N,N],[6,"N348",E,E,N,N],[6,"U349",E,E,N,N],[6,"P349",E,E,N,N],[6,"N349",E,E,N,N],[6,"U350",E,E,N,N],[6,"P350",E,E,N,N],[6,"N350",E,E,N,N],[6,"U351",E,E,N,N],[6,"P351",E,E,N,N],[6,"N351",E,E,N,N],[6,"U352",E,E,N,N],[6,"P352",E,E,N,N],[6,"N352",E,E,N,N],[6,"U353",E,E,N,N],[6,"P353",E,E,N,N],[6,"N353",E,E,N,N],[6,"U354",E,E,N,N],[6,"P354",E,E,N,N],[6,"N354",E,E,N,N],[6,"U355",E,E,N,N],[6,"P355",E,E,N,N],[6,"N355",E,E,N,N],[6,"U356",E,E,N,N],[6,"P356",E,E,N,N],[6,"N356",E,E,N,N],[6,"U357",E,E,N,N],[6,"P357",E,E,N,N],[6,"N357",E,E,N,N],[6,"U358",E,E,N,N],[6,"P358",E,E,N,N],[6,"N358",E,E,N,N],[6,"U359",E,E,N,N],[6,"P359",E,E,N,N],[6,"N359",E,E,N,N],[6,"U360",E,E,N,N],[6,"P360",E,E,N,N],[6,"N360",E,E,N,N],[6,"U361",E,E,N,N],[6,"P361",E,E,N,N],[6,"N361",E,E,N,N],[6,"U362",E,E,N,N],[6,"P362",E,E,N,N],[6,"N362",E,E,N,N],[6,"U363",E,E,N,N],[6,"P363",E,E,N,N],[6,"N363",E,E,N,N],[6,"U364",E,E,N,N],[6,"P364",E,E,N,N],[6,"N364",E,E,N,N],[6,"U365",E,E,N,N],[6,"P365",E,E,N,N],[6,"N365",E,E,N,N],[6,"U366",E,E,N,N],[6,"P366",E,E,N,N],[6,"N366",E,E,N,N],[6,"U367",E,E,N,N],[6,"P367",E,E,N,N],[6,"N367",E,E,N,N],[6,"U368",E,E,N,N],[6,"P368",E,E,N,N],[6,"N368",E,E,N,N],[6,"U369",E,E,N,N],[6,"P369",E,E,N,N],[6,"N369",E,E,N,N],[6,"U370",E,E,N,N],[6,"P370",E,E,N,N],[6,"N370",E,E,N,N],[6,"U371",E,E,N,N],[6,"P371",E,E,N,N],[6,"N371",E,E,N,N],[6,"U372",E,E,N,N],[6,"P372",E,E,N,N],[6,"N372",E,E,N,N],[6,"U373",E,E,N,N],[6,"P373",E,E,N,N],[6,"N373",E,E,N,N],[6,"U374",E,E,N,N],[6,"P374",E,E,N,N],[6,"N374",E,E,N,N],[6,"U375",E,E,N,N],[6,"P375",E,E,N,N],[6,"N375",E,E,N,N],[6,"U376",E,E,N,N],[6,"P376",E,E,N,N],[6,"N376",E,E,N,N],[6,"U377",E,E,N,N],[6,"P377",E,E,N,N],[6,"N377",E,E,N,N],[6,"U378",E,E,N,N],[6,"P378",E,E,N,N],[6,"N378",E,E,N,N],[6,"U379",E,E,N,N],[6,"P379",E,E,N,N],[6,"N379",E,E,N,N],[6,"U380",E,E,N,N],[6,"P380",E,E,N,N],[6,"N380",E,E,N,N],[6,"U381",E,E,N,N],[6,"P381",E,E,N,N],[6,"N381",E,E,N,N],[6,"U382",E,E,N,N],[6,"P382",E,E,N,N],[6,"N382",E,E,N,N],[6,"U383",E,E,N,N],[6,"P383",E,E,N,N],[6,"N383",E,E,N,N],[6,"U384",E,E,N,N],[6,"P384",E,E,N,N],[6,"N384",E,E,N,N],[6,"U385",E,E,N,N],[6,"P385",E,E,N,N],[6,"N385",E,E,N,N],[6,"U386",E,E,N,N],[6,"P386",E,E,N,N],[6,"N386",E,E,N,N],[6,"U387",E,E,N,N],[6,"P387",E,E,N,N],[6,"N387",E,E,N,N],[6,"U388",E,E,N,N],[6,"P388",E,E,N,N],[6,"N388",E,E,N,N],[6,"U389",E,E,N,N],[6,"P389",E,E,N,N],[6,"N389",E,E,N,N],[6,"U390",E,E,N,N],[6,"P390",E,E,N,N],[6,"N390",E,E,N,N],[6,"U391",E,E,N,N],[6,"P391",E,E,N,N],[6,"N391",E,E,N,N],[6,"U392",E,E,N,N],[6,"P392",E,E,N,N],[6,"N392",E,E,N,N],[6,"U393",E,E,N,N],[6,"P393",E,E,N,N],[6,"N393",E,E,N,N],[6,"U394",E,E,N,N],[6,"P394",E,E,N,N],[6,"N394",E,E,N,N],[6,"U395",E,E,N,N],[6,"P395",E,E,N,N],[6,"N395",E,E,N,N],[6,"U396",E,E,N,N],[6,"P396",E,E,N,N],[6,"N396",E,E,N,N],[6,"U397",E,E,N,N],[6,"P397",E,E,N,N],[6,"N397",E,E,N,N],[6,"U398",E,E,N,N],[6,"P398",E,E,N,N],[6,"N398",E,E,N,N],[6,"U399",E,E,N,N],[6,"P399",E,E,N,N],[6,"N399",E,E,N,N],[6,"U400",E,E,N,N],[6,"P400",E,E,N,N],[6,"N400",E,E,N,N],[6,"U401",E,E,N,N],[6,"P401",E,E,N,N],[6,"N401",E,E,N,N],[6,"U402",E,E,N,N],[6,"P402",E,E,N,N],[6,"N402",E,E,N,N],[6,"U403",E,E,N,N],[6,"P403",E,E,N,N],[6,"N403",E,E,N,N],[6,"U404",E,E,N,N],[6,"P404",E,E,N,N],[6,"N404",E,E,N,N],[6,"U405",E,E,N,N],[6,"P405",E,E,N,N],[6,"N405",E,E,N,N],[6,"U406",E,E,N,N],[6,"P406",E,E,N,N],[6,"N406",E,E,N,N],[6,"U407",E,E,N,N],[6,"P407",E,E,N,N],[6,"N407",E,E,N,N],[6,"U408",E,E,N,N],[6,"P408",E,E,N,N],[6,"N408",E,E,N,N],[6,"U409",E,E,N,N],[6,"P409",E,E,N,N],[6,"N409",E,E,N,N],[6,"U410",E,E,N,N],[6,"P410",E,E,N,N],[6,"N410",E,E,N,N],[6,"U411",E,E,N,N],[6,"P411",E,E,N,N],[6,"N411",E,E,N,N],[6,"U412",E,E,N,N],[6,"P412",E,E,N,N],[6,"N412",E,E,N,N],[6,"U413",E,E,N,N],[6,"P413",E,E,N,N],[6,"N413",E,E,N,N],[6,"U414",E,E,N,N],[6,"P414",E,E,N,N],[6,"N414",E,E,N,N],[6,"U415",E,E,N,N],[6,"P415",E,E,N,N],[6,"N415",E,E,N,N],[6,"U416",E,E,N,N],[6,"P416",E,E,N,N],[6,"N416",E,E,N,N],[6,"U417",E,E,N,N],[6,"P417",E,E,N,N],[6,"N417",E,E,N,N],[6,"U418",E,E,N,N],[6,"P418",E,E,N,N],[6,"N418",E,E,N,N],[6,"U419",E,E,N,N],[6,"P419",E,E,N,N],[6,"N419",E,E,N,N],[6,"U420",E,E,N,N],[6,"P420",E,E,N,N],[6,"N420",E,E,N,N],[6,"U421",E,E,N,N],[6,"P421",E,E,N,N],[6,"N421",E,E,N,N],[6,"U422",E,E,N,N],[6,"P422",E,E,N,N],[6,"N422",E,E,N,N],[6,"U423",E,E,N,N],[6,"P423",E,E,N,N],[6,"N423",E,E,N,N],[6,"U424",E,E,N,N],[6,"P424",E,E,N,N],[6,"N424",E,E,N,N],[6,"U425",E,E,N,N],[6,"P425",E,E,N,N],[6,"N425",E,E,N,N],[6,"U426",E,E,N,N],[6,"P426",E,E,N,N],[6,"N426",E,E,N,N],[6,"U427",E,E,N,N],[6,"P427",E,E,N,N],[6,"N427",E,E,N,N],[6,"U428",E,E,N,N],[6,"P428",E,E,N,N],[6,"N428",E,E,N,N],[6,"U429",E,E,N,N],[6,"P429",E,E,N,N],[6,"N429",E,E,N,N],[6,"U430",E,E,N,N],[6,"P430",E,E,N,N],[6,"N430",E,E,N,N],[6,"U431",E,E,N,N],[6,"P431",E,E,N,N],[6,"N431",E,E,N,N],[6,"U432",E,E,N,N],[6,"P432",E,E,N,N],[6,"N432",E,E,N,N],[6,"U433",E,E,N,N],[6,"P433",E,E,N,N],[6,"N433",E,E,N,N],[6,"U434",E,E,N,N],[6,"P434",E,E,N,N],[6,"N434",E,E,N,N],[6,"U435",E,E,N,N],[6,"P435",E,E,N,N],[6,"N435",E,E,N,N],[6,"U436",E,E,N,N],[6,"P436",E,E,N,N],[6,"N436",E,E,N,N],[6,"U437",E,E,N,N],[6,"P437",E,E,N,N],[6,"N437",E,E,N,N],[6,"U438",E,E,N,N],[6,"P438",E,E,N,N],[6,"N438",E,E,N,N],[6,"U439",E,E,N,N],[6,"P439",E,E,N,N],[6,"N439",E,E,N,N],[6,"U440",E,E,N,N],[6,"P440",E,E,N,N],[6,"N440",E,E,N,N],[6,"U441",E,E,N,N],[6,"P441",E,E,N,N],[6,"N441",E,E,N,N],[6,"U442",E,E,N,N],[6,"P442",E,E,N,N],[6,"N442",E,E,N,N],[6,"U443",E,E,N,N],[6,"P443",E,E,N,N],[6,"N443",E,E,N,N],[6,"U444",E,E,N,N],[6,"P444",E,E,N,N],[6,"N444",E,E,N,N],[6,"U445",E,E,N,N],[6,"P445",E,E,N,N],[6,"N445",E,E,N,N],[6,"U446",E,E,N,N],[6,"P446",E,E,N,N],[6,"N446",E,E,N,N],[6,"U447",E,E,N,N],[6,"P447",E,E,N,N],[6,"N447",E,E,N,N],[6,"U448",E,E,N,N],[6,"P448",E,E,N,N],[6,"N448",E,E,N,N],[6,"U449",E,E,N,N],[6,"P449",E,E,N,N],[6,"N449",E,E,N,N],[6,"U450",E,E,N,N],[6,"P450",E,E,N,N],[6,"N450",E,E,N,N],[6,"U451",E,E,N,N],[6,"P451",E,E,N,N],[6,"N451",E,E,N,N],[6,"U452",E,E,N,N],[6,"P452",E,E,N,N],[6,"N452",E,E,N,N],[6,"U453",E,E,N,N],[6,"P453",E,E,N,N],[6,"N453",E,E,N,N],[6,"U454",E,E,N,N],[6,"P454",E,E,N,N],[6,"N454",E,E,N,N],[6,"U455",E,E,N,N],[6,"P455",E,E,N,N],[6,"N455",E,E,N,N],[6,"U456",E,E,N,N],[6,"P456",E,E,N,N],[6,"N456",E,E,N,N],[6,"U457",E,E,N,N],[6,"P457",E,E,N,N],[6,"N457",E,E,N,N],[6,"U458",E,E,N,N],[6,"P458",E,E,N,N],[6,"N458",E,E,N,N],[6,"U459",E,E,N,N],[6,"P459",E,E,N,N],[6,"N459",E,E,N,N],[6,"U460",E,E,N,N],[6,"P460",E,E,N,N],[6,"N460",E,E,N,N],[6,"U461",E,E,N,N],[6,"P461",E,E,N,N],[6,"N461",E,E,N,N],[6,"U462",E,E,N,N],[6,"P462",E,E,N,N],[6,"N462",E,E,N,N],[6,"U463",E,E,N,N],[6,"P463",E,E,N,N],[6,"N463",E,E,N,N],[6,"U464",E,E,N,N],[6,"P464",E,E,N,N],[6,"N464",E,E,N,N],[6,"U465",E,E,N,N],[6,"P465",E,E,N,N],[6,"N465",E,E,N,N],[6,"U466",E,E,N,N],[6,"P466",E,E,N,N],[6,"N466",E,E,N,N],[6,"U467",E,E,N,N],[6,"P467",E,E,N,N],[6,"N467",E,E,N,N],[6,"U468",E,E,N,N],[6,"P468",E,E,N,N],[6,"N468",E,E,N,N],[6,"U469",E,E,N,N],[6,"P469",E,E,N,N],[6,"N469",E,E,N,N],[6,"U470",E,E,N,N],[6,"P470",E,E,N,N],[6,"N470",E,E,N,N],[6,"U471",E,E,N,N],[6,"P471",E,E,N,N],[6,"N471",E,E,N,N],[6,"U472",E,E,N,N],[6,"P472",E,E,N,N],[6,"N472",E,E,N,N],[6,"U473",E,E,N,N],[6,"P473",E,E,N,N],[6,"N473",E,E,N,N],[6,"U474",E,E,N,N],[6,"P474",E,E,N,N],[6,"N474",E,E,N,N],[6,"U475",E,E,N,N],[6,"P475",E,E,N,N],[6,"N475",E,E,N,N],[6,"U476",E,E,N,N],[6,"P476",E,E,N,N],[6,"N476",E,E,N,N],[6,"U477",E,E,N,N],[6,"P477",E,E,N,N],[6,"N477",E,E,N,N],[6,"U478",E,E,N,N],[6,"P478",E,E,N,N],[6,"N478",E,E,N,N],[6,"U479",E,E,N,N],[6,"P479",E,E,N,N],[6,"N479",E,E,N,N],[6,"U480",E,E,N,N],[6,"P480",E,E,N,N],[6,"N480",E,E,N,N],[6,"U481",E,E,N,N],[6,"P481",E,E,N,N],[6,"N481",E,E,N,N],[6,"U482",E,E,N,N],[6,"P482",E,E,N,N],[6,"N482",E,E,N,N],[6,"U483",E,E,N,N],[6,"P483",E,E,N,N],[6,"N483",E,E,N,N],[6,"U484",E,E,N,N],[6,"P484",E,E,N,N],[6,"N484",E,E,N,N],[6,"U485",E,E,N,N],[6,"P485",E,E,N,N],[6,"N485",E,E,N,N],[6,"U486",E,E,N,N],[6,"P486",E,E,N,N],[6,"N486",E,E,N,N],[6,"U487",E,E,N,N],[6,"P487",E,E,N,N],[6,"N487",E,E,N,N],[6,"U488",E,E,N,N],[6,"P488",E,E,N,N],[6,"N488",E,E,N,N],[6,"U489",E,E,N,N],[6,"P489",E,E,N,N],[6,"N489",E,E,N,N],[6,"U490",E,E,N,N],[6,"P490",E,E,N,N],[6,"N490",E,E,N,N],[6,"U491",E,E,N,N],[6,"P491",E,E,N,N],[6,"N491",E,E,N,N],[6,"U492",E,E,N,N],[6,"P492",E,E,N,N],[6,"N492",E,E,N,N],[6,"U493",E,E,N,N],[6,"P493",E,E,N,N],[6,"N493",E,E,N,N],[6,"U494",E,E,N,N],[6,"P494",E,E,N,N],[6,"N494",E,E,N,N],[6,"U495",E,E,N,N],[6,"P495",E,E,N,N],[6,"N495",E,E,N,N],[6,"U496",E,E,N,N],[6,"P496",E,E,N,N],[6,"N496",E,E,N,N],[6,"U497",E,E,N,N],[6,"P497",E,E,N,N],[6,"N497",E,E,N,N],[6,"U498",E,E,N,N],[6,"P498",E,E,N,N],[6,"N498",E,E,N,N],[6,"U499",E,E,N,N],[6,"P499",E,E,N,N],[6,"N499",E,E,N,N],[6,"U500",E,E,N,N],[6,"P500",E,E,N,N],[6,"N500",E,E,N,N],[6,"U501",E,E,N,N],[6,"P501",E,E,N,N],[6,"N501",E,E,N,N],[6,"U502",E,E,N,N],[6,"P502",E,E,N,N],[6,"N502",E,E,N,N],[6,"U503",E,E,N,N],[6,"P503",E,E,N,N],[6,"N503",E,E,N,N],[6,"U504",E,E,N,N],[6,"P504",E,E,N,N],[6,"N504",E,E,N,N],[6,"U505",E,E,N,N],[6,"P505",E,E,N,N],[6,"N505",E,E,N,N],[6,"U506",E,E,N,N],[6,"P506",E,E,N,N],[6,"N506",E,E,N,N],[6,"U507",E,E,N,N],[6,"P507",E,E,N,N],[6,"N507",E,E,N,N],[6,"U508",E,E,N,N],[6,"P508",E,E,N,N],[6,"N508",E,E,N,N],[6,"U509",E,E,N,N],[6,"P509",E,E,N,N],[6,"N509",E,E,N,N],[6,"U510",E,E,N,N],[6,"P510",E,E,N,N],[6,"N510",E,E,N,N],[6,"U511",E,E,N,N],[6,"P511",E,E,N,N],[6,"N511",E,E,N,N],[6,"U512",E,E,N,N],[6,"P512",E,E,N,N],[6,"N512",E,E,N,N],[6,"U513",E,E,N,N],[6,"P513",E,E,N,N],[6,"N513",E,E,N,N],[6,"U514",E,E,N,N],[6,"P514",E,E,N,N],[6,"N514",E,E,N,N],[6,"U515",E,E,N,N],[6,"P515",E,E,N,N],[6,"N515",E,E,N,N],[6,"U516",E,E,N,N],[6,"P516",E,E,N,N],[6,"N516",E,E,N,N],[6,"U517",E,E,N,N],[6,"P517",E,E,N,N],[6,"N517",E,E,N,N],[6,"U518",E,E,N,N],[6,"P518",E,E,N,N],[6,"N518",E,E,N,N],[6,"U519",E,E,N,N],[6,"P519",E,E,N,N],[6,"N519",E,E,N,N],[6,"U520",E,E,N,N],[6,"P520",E,E,N,N],[6,"N520",E,E,N,N],[6,"U521",E,E,N,N],[6,"P521",E,E,N,N],[6,"N521",E,E,N,N],[6,"U522",E,E,N,N],[6,"P522",E,E,N,N],[6,"N522",E,E,N,N],[6,"U523",E,E,N,N],[6,"P523",E,E,N,N],[6,"N523",E,E,N,N],[6,"U524",E,E,N,N],[6,"P524",E,E,N,N],[6,"N524",E,E,N,N],[6,"U525",E,E,N,N],[6,"P525",E,E,N,N],[6,"N525",E,E,N,N],[6,"U526",E,E,N,N],[6,"P526",E,E,N,N],[6,"N526",E,E,N,N],[6,"U527",E,E,N,N],[6,"P527",E,E,N,N],[6,"N527",E,E,N,N],[6,"U528",E,E,N,N],[6,"P528",E,E,N,N],[6,"N528",E,E,N,N],[6,"U529",E,E,N,N],[6,"P529",E,E,N,N],[6,"N529",E,E,N,N],[6,"U530",E,E,N,N],[6,"P530",E,E,N,N],[6,"N530",E,E,N,N],[6,"U531",E,E,N,N],[6,"P531",E,E,N,N],[6,"N531",E,E,N,N],[6,"U532",E,E,N,N],[6,"P532",E,E,N,N],[6,"N532",E,E,N,N],[6,"U533",E,E,N,N],[6,"P533",E,E,N,N],[6,"N533",E,E,N,N],[6,"U534",E,E,N,N],[6,"P534",E,E,N,N],[6,"N534",E,E,N,N],[6,"U535",E,E,N,N],[6,"P535",E,E,N,N],[6,"N535",E,E,N,N],[6,"U536",E,E,N,N],[6,"P536",E,E,N,N],[6,"N536",E,E,N,N],[6,"U537",E,E,N,N],[6,"P537",E,E,N,N],[6,"N537",E,E,N,N],[6,"U538",E,E,N,N],[6,"P538",E,E,N,N],[6,"N538",E,E,N,N],[6,"U539",E,E,N,N],[6,"P539",E,E,N,N],[6,"N539",E,E,N,N],[6,"U540",E,E,N,N],[6,"P540",E,E,N,N],[6,"N540",E,E,N,N],[6,"U541",E,E,N,N],[6,"P541",E,E,N,N],[6,"N541",E,E,N,N],[6,"U542",E,E,N,N],[6,"P542",E,E,N,N],[6,"N542",E,E,N,N],[6,"U543",E,E,N,N],[6,"P543",E,E,N,N],[6,"N543",E,E,N,N],[6,"U544",E,E,N,N],[6,"P544",E,E,N,N],[6,"N544",E,E,N,N],[6,"U545",E,E,N,N],[6,"P545",E,E,N,N],[6,"N545",E,E,N,N],[6,"U546",E,E,N,N],[6,"P546",E,E,N,N],[6,"N546",E,E,N,N],[6,"U547",E,E,N,N],[6,"P547",E,E,N,N],[6,"N547",E,E,N,N],[6,"U548",E,E,N,N],[6,"P548",E,E,N,N],[6,"N548",E,E,N,N],[6,"U549",E,E,N,N],[6,"P549",E,E,N,N],[6,"N549",E,E,N,N],[6,"U550",E,E,N,N],[6,"P550",E,E,N,N],[6,"N550",E,E,N,N],[6,"U551",E,E,N,N],[6,"P551",E,E,N,N],[6,"N551",E,E,N,N],[6,"U552",E,E,N,N],[6,"P552",E,E,N,N],[6,"N552",E,E,N,N],[6,"U553",E,E,N,N],[6,"P553",E,E,N,N],[6,"N553",E,E,N,N],[6,"U554",E,E,N,N],[6,"P554",E,E,N,N],[6,"N554",E,E,N,N],[6,"U555",E,E,N,N],[6,"P555",E,E,N,N],[6,"N555",E,E,N,N],[6,"U556",E,E,N,N],[6,"P556",E,E,N,N],[6,"N556",E,E,N,N],[6,"U557",E,E,N,N],[6,"P557",E,E,N,N],[6,"N557",E,E,N,N],[6,"U558",E,E,N,N],[6,"P558",E,E,N,N],[6,"N558",E,E,N,N],[6,"U559",E,E,N,N],[6,"P559",E,E,N,N],[6,"N559",E,E,N,N],[6,"U560",E,E,N,N],[6,"P560",E,E,N,N],[6,"N560",E,E,N,N],[6,"U561",E,E,N,N],[6,"P561",E,E,N,N],[6,"N561",E,E,N,N],[6,"U562",E,E,N,N],[6,"P562",E,E,N,N],[6,"N562",E,E,N,N],[6,"U563",E,E,N,N],[6,"P563",E,E,N,N],[6,"N563",E,E,N,N],[6,"U564",E,E,N,N],[6,"P564",E,E,N,N],[6,"N564",E,E,N,N],[6,"U565",E,E,N,N],[6,"P565",E,E,N,N],[6,"N565",E,E,N,N],[6,"U566",E,E,N,N],[6,"P566",E,E,N,N],[6,"N566",E,E,N,N],[6,"U567",E,E,N,N],[6,"P567",E,E,N,N],[6,"N567",E,E,N,N],[6,"U568",E,E,N,N],[6,"P568",E,E,N,N],[6,"N568",E,E,N,N],[6,"U569",E,E,N,N],[6,"P569",E,E,N,N],[6,"N569",E,E,N,N],[6,"U570",E,E,N,N],[6,"P570",E,E,N,N],[6,"N570",E,E,N,N],[6,"U571",E,E,N,N],[6,"P571",E,E,N,N],[6,"N571",E,E,N,N],[6,"U572",E,E,N,N],[6,"P572",E,E,N,N],[6,"N572",E,E,N,N],[6,"U573",E,E,N,N],[6,"P573",E,E,N,N],[6,"N573",E,E,N,N],[6,"U574",E,E,N,N],[6,"P574",E,E,N,N],[6,"N574",E,E,N,N],[6,"U575",E,E,N,N],[6,"P575",E,E,N,N],[6,"N575",E,E,N,N],[6,"U576",E,E,N,N],[6,"P576",E,E,N,N],[6,"N576",E,E,N,N],[6,"U577",E,E,N,N],[6,"P577",E,E,N,N],[6,"N577",E,E,N,N],[6,"U578",E,E,N,N],[6,"P578",E,E,N,N],[6,"N578",E,E,N,N],[6,"U579",E,E,N,N],[6,"P579",E,E,N,N],[6,"N579",E,E,N,N],[6,"U580",E,E,N,N],[6,"P580",E,E,N,N],[6,"N580",E,E,N,N],[6,"U581",E,E,N,N],[6,"P581",E,E,N,N],[6,"N581",E,E,N,N],[6,"U582",E,E,N,N],[6,"P582",E,E,N,N],[6,"N582",E,E,N,N],[6,"U583",E,E,N,N],[6,"P583",E,E,N,N],[6,"N583",E,E,N,N],[6,"U584",E,E,N,N],[6,"P584",E,E,N,N],[6,"N584",E,E,N,N],[6,"U585",E,E,N,N],[6,"P585",E,E,N,N],[6,"N585",E,E,N,N],[6,"U586",E,E,N,N],[6,"P586",E,E,N,N],[6,"N586",E,E,N,N],[6,"U587",E,E,N,N],[6,"P587",E,E,N,N],[6,"N587",E,E,N,N],[6,"U588",E,E,N,N],[6,"P588",E,E,N,N],[6,"N588",E,E,N,N],[6,"U589",E,E,N,N],[6,"P589",E,E,N,N],[6,"N589",E,E,N,N],[6,"U590",E,E,N,N],[6,"P590",E,E,N,N],[6,"N590",E,E,N,N],[6,"U591",E,E,N,N],[6,"P591",E,E,N,N],[6,"N591",E,E,N,N],[6,"U592",E,E,N,N],[6,"P592",E,E,N,N],[6,"N592",E,E,N,N],[6,"U593",E,E,N,N],[6,"P593",E,E,N,N],[6,"N593",E,E,N,N],[6,"U594",E,E,N,N],[6,"P594",E,E,N,N],[6,"N594",E,E,N,N],[6,"U595",E,E,N,N],[6,"P595",E,E,N,N],[6,"N595",E,E,N,N],[6,"U596",E,E,N,N],[6,"P596",E,E,N,N],[6,"N596",E,E,N,N],[6,"U597",E,E,N,N],[6,"P597",E,E,N,N],[6,"N597",E,E,N,N],[6,"U598",E,E,N,N],[6,"P598",E,E,N,N],[6,"N598",E,E,N,N],[6,"U599",E,E,N,N],[6,"P599",E,E,N,N],[6,"N599",E,E,N,N],[6,"U600",E,E,N,N],[6,"P600",E,E,N,N],[6,"N600",E,E,N,N],[6,"U601",E,E,N,N],[6,"P601",E,E,N,N],[6,"N601",E,E,N,N],[6,"U602",E,E,N,N],[6,"P602",E,E,N,N],[6,"N602",E,E,N,N],[6,"U603",E,E,N,N],[6,"P603",E,E,N,N],[6,"N603",E,E,N,N],[6,"U604",E,E,N,N],[6,"P604",E,E,N,N],[6,"N604",E,E,N,N],[6,"U605",E,E,N,N],[6,"P605",E,E,N,N],[6,"N605",E,E,N,N],[6,"U606",E,E,N,N],[6,"P606",E,E,N,N],[6,"N606",E,E,N,N],[6,"U607",E,E,N,N],[6,"P607",E,E,N,N],[6,"N607",E,E,N,N],[6,"U608",E,E,N,N],[6,"P608",E,E,N,N],[6,"N608",E,E,N,N],[6,"U609",E,E,N,N],[6,"P609",E,E,N,N],[6,"N609",E,E,N,N],[6,"U610",E,E,N,N],[6,"P610",E,E,N,N],[6,"N610",E,E,N,N],[6,"U611",E,E,N,N],[6,"P611",E,E,N,N],[6,"N611",E,E,N,N],[6,"U612",E,E,N,N],[6,"P612",E,E,N,N],[6,"N612",E,E,N,N],[6,"U613",E,E,N,N],[6,"P613",E,E,N,N],[6,"N613",E,E,N,N],[6,"U614",E,E,N,N],[6,"P614",E,E,N,N],[6,"N614",E,E,N,N],[6,"U615",E,E,N,N],[6,"P615",E,E,N,N],[6,"N615",E,E,N,N],[6,"U616",E,E,N,N],[6,"P616",E,E,N,N],[6,"N616",E,E,N,N],[6,"U617",E,E,N,N],[6,"P617",E,E,N,N],[6,"N617",E,E,N,N],[6,"U618",E,E,N,N],[6,"P618",E,E,N,N],[6,"N618",E,E,N,N],[6,"U619",E,E,N,N],[6,"P619",E,E,N,N],[6,"N619",E,E,N,N],[6,"U620",E,E,N,N],[6,"P620",E,E,N,N],[6,"N620",E,E,N,N],[6,"U621",E,E,N,N],[6,"P621",E,E,N,N],[6,"N621",E,E,N,N],[6,"U622",E,E,N,N],[6,"P622",E,E,N,N],[6,"N622",E,E,N,N],[6,"U623",E,E,N,N],[6,"P623",E,E,N,N],[6,"N623",E,E,N,N],[6,"U624",E,E,N,N],[6,"P624",E,E,N,N],[6,"N624",E,E,N,N],[6,"U625",E,E,N,N],[6,"P625",E,E,N,N],[6,"N625",E,E,N,N],[6,"U626",E,E,N,N],[6,"P626",E,E,N,N],[6,"N626",E,E,N,N],[6,"U627",E,E,N,N],[6,"P627",E,E,N,N],[6,"N627",E,E,N,N],[6,"U628",E,E,N,N],[6,"P628",E,E,N,N],[6,"N628",E,E,N,N],[6,"U629",E,E,N,N],[6,"P629",E,E,N,N],[6,"N629",E,E,N,N],[6,"U630",E,E,N,N],[6,"P630",E,E,N,N],[6,"N630",E,E,N,N],[6,"U631",E,E,N,N],[6,"P631",E,E,N,N],[6,"N631",E,E,N,N],[6,"U632",E,E,N,N],[6,"P632",E,E,N,N],[6,"N632",E,E,N,N],[6,"U633",E,E,N,N],[6,"P633",E,E,N,N],[6,"N633",E,E,N,N],[6,"U634",E,E,N,N],[6,"P634",E,E,N,N],[6,"N634",E,E,N,N],[6,"U635",E,E,N,N],[6,"P635",E,E,N,N],[6,"N635",E,E,N,N],[6,"U636",E,E,N,N],[6,"P636",E,E,N,N],[6,"N636",E,E,N,N],[6,"U637",E,E,N,N],[6,"P637",E,E,N,N],[6,"N637",E,E,N,N],[6,"U638",E,E,N,N],[6,"P638",E,E,N,N],[6,"N638",E,E,N,N],[6,"U639",E,E,N,N],[6,"P639",E,E,N,N],[6,"N639",E,E,N,N],[6,"U640",E,E,N,N],[6,"P640",E,E,N,N],[6,"N640",E,E,N,N],[6,"U641",E,E,N,N],[6,"P641",E,E,N,N],[6,"N641",E,E,N,N],[6,"U642",E,E,N,N],[6,"P642",E,E,N,N],[6,"N642",E,E,N,N],[6,"U643",E,E,N,N],[6,"P643",E,E,N,N],[6,"N643",E,E,N,N],[6,"U644",E,E,N,N],[6,"P644",E,E,N,N],[6,"N644",E,E,N,N],[6,"U645",E,E,N,N],[6,"P645",E,E,N,N],[6,"N645",E,E,N,N],[6,"U646",E,E,N,N],[6,"P646",E,E,N,N],[6,"N646",E,E,N,N],[6,"U647",E,E,N,N],[6,"P647",E,E,N,N],[6,"N647",E,E,N,N],[6,"U648",E,E,N,N],[6,"P648",E,E,N,N],[6,"N648",E,E,N,N],[6,"U649",E,E,N,N],[6,"P649",E,E,N,N],[6,"N649",E,E,N,N],[6,"U650",E,E,N,N],[6,"P650",E,E,N,N],[6,"N650",E,E,N,N],[6,"U651",E,E,N,N],[6,"P651",E,E,N,N],[6,"N651",E,E,N,N],[6,"U652",E,E,N,N],[6,"P652",E,E,N,N],[6,"N652",E,E,N,N],[6,"U653",E,E,N,N],[6,"P653",E,E,N,N],[6,"N653",E,E,N,N],[6,"U654",E,E,N,N],[6,"P654",E,E,N,N],[6,"N654",E,E,N,N],[6,"U655",E,E,N,N],[6,"P655",E,E,N,N],[6,"N655",E,E,N,N],[6,"U656",E,E,N,N],[6,"P656",E,E,N,N],[6,"N656",E,E,N,N],[6,"U657",E,E,N,N],[6,"P657",E,E,N,N],[6,"N657",E,E,N,N],[6,"U658",E,E,N,N],[6,"P658",E,E,N,N],[6,"N658",E,E,N,N],[6,"U659",E,E,N,N],[6,"P659",E,E,N,N],[6,"N659",E,E,N,N],[6,"U660",E,E,N,N],[6,"P660",E,E,N,N],[6,"N660",E,E,N,N],[6,"U661",E,E,N,N],[6,"P661",E,E,N,N],[6,"N661",E,E,N,N],[6,"U662",E,E,N,N],[6,"P662",E,E,N,N],[6,"N662",E,E,N,N],[6,"U663",E,E,N,N],[6,"P663",E,E,N,N],[6,"N663",E,E,N,N],[6,"U664",E,E,N,N],[6,"P664",E,E,N,N],[6,"N664",E,E,N,N],[6,"U665",E,E,N,N],[6,"P665",E,E,N,N],[6,"N665",E,E,N,N],[6,"U666",E,E,N,N],[6,"P666",E,E,N,N],[6,"N666",E,E,N,N],[6,"U667",E,E,N,N],[6,"P667",E,E,N,N],[6,"N667",E,E,N,N],[6,"U668",E,E,N,N],[6,"P668",E,E,N,N],[6,"N668",E,E,N,N],[6,"U669",E,E,N,N],[6,"P669",E,E,N,N],[6,"N669",E,E,N,N],[6,"U670",E,E,N,N],[6,"P670",E,E,N,N],[6,"N670",E,E,N,N],[6,"U671",E,E,N,N],[6,"P671",E,E,N,N],[6,"N671",E,E,N,N],[6,"U672",E,E,N,N],[6,"P672",E,E,N,N],[6,"N672",E,E,N,N],[6,"U673",E,E,N,N],[6,"P673",E,E,N,N],[6,"N673",E,E,N,N],[6,"U674",E,E,N,N],[6,"P674",E,E,N,N],[6,"N674",E,E,N,N],[6,"U675",E,E,N,N],[6,"P675",E,E,N,N],[6,"N675",E,E,N,N],[6,"U676",E,E,N,N],[6,"P676",E,E,N,N],[6,"N676",E,E,N,N],[6,"U677",E,E,N,N],[6,"P677",E,E,N,N],[6,"N677",E,E,N,N],[6,"U678",E,E,N,N],[6,"P678",E,E,N,N],[6,"N678",E,E,N,N],[6,"U679",E,E,N,N],[6,"P679",E,E,N,N],[6,"N679",E,E,N,N],[6,"U680",E,E,N,N],[6,"P680",E,E,N,N],[6,"N680",E,E,N,N],[6,"U681",E,E,N,N],[6,"P681",E,E,N,N],[6,"N681",E,E,N,N],[6,"U682",E,E,N,N],[6,"P682",E,E,N,N],[6,"N682",E,E,N,N],[6,"U683",E,E,N,N],[6,"P683",E,E,N,N],[6,"N683",E,E,N,N],[6,"U684",E,E,N,N],[6,"P684",E,E,N,N],[6,"N684",E,E,N,N],[6,"U685",E,E,N,N],[6,"P685",E,E,N,N],[6,"N685",E,E,N,N],[6,"U686",E,E,N,N],[6,"P686",E,E,N,N],[6,"N686",E,E,N,N],[6,"U687",E,E,N,N],[6,"P687",E,E,N,N],[6,"N687",E,E,N,N],[6,"U688",E,E,N,N],[6,"P688",E,E,N,N],[6,"N688",E,E,N,N],[6,"U689",E,E,N,N],[6,"P689",E,E,N,N],[6,"N689",E,E,N,N],[6,"U690",E,E,N,N],[6,"P690",E,E,N,N],[6,"N690",E,E,N,N],[6,"U691",E,E,N,N],[6,"P691",E,E,N,N],[6,"N691",E,E,N,N],[6,"U692",E,E,N,N],[6,"P692",E,E,N,N],[6,"N692",E,E,N,N],[6,"U693",E,E,N,N],[6,"P693",E,E,N,N],[6,"N693",E,E,N,N],[6,"U694",E,E,N,N],[6,"P694",E,E,N,N],[6,"N694",E,E,N,N],[6,"U695",E,E,N,N],[6,"P695",E,E,N,N],[6,"N695",E,E,N,N],[6,"U696",E,E,N,N],[6,"P696",E,E,N,N],[6,"N696",E,E,N,N],[6,"U697",E,E,N,N],[6,"P697",E,E,N,N],[6,"N697",E,E,N,N],[6,"U698",E,E,N,N],[6,"P698",E,E,N,N],[6,"N698",E,E,N,N],[6,"U699",E,E,N,N],[6,"P699",E,E,N,N],[6,"N699",E,E,N,N],[6,"U700",E,E,N,N],[6,"P700",E,E,N,N],[6,"N700",E,E,N,N],[6,"U701",E,E,N,N],[6,"P701",E,E,N,N],[6,"N701",E,E,N,N],[6,"U702",E,E,N,N],[6,"P702",E,E,N,N],[6,"N702",E,E,N,N],[6,"U703",E,E,N,N],[6,"P703",E,E,N,N],[6,"N703",E,E,N,N],[6,"U704",E,E,N,N],[6,"P704",E,E,N,N],[6,"N704",E,E,N,N],[6,"U705",E,E,N,N],[6,"P705",E,E,N,N],[6,"N705",E,E,N,N],[6,"U706",E,E,N,N],[6,"P706",E,E,N,N],[6,"N706",E,E,N,N],[6,"U707",E,E,N,N],[6,"P707",E,E,N,N],[6,"N707",E,E,N,N],[6,"U708",E,E,N,N],[6,"P708",E,E,N,N],[6,"N708",E,E,N,N],[6,"U709",E,E,N,N],[6,"P709",E,E,N,N],[6,"N709",E,E,N,N],[6,"U710",E,E,N,N],[6,"P710",E,E,N,N],[6,"N710",E,E,N,N],[6,"U711",E,E,N,N],[6,"P711",E,E,N,N],[6,"N711",E,E,N,N],[6,"U712",E,E,N,N],[6,"P712",E,E,N,N],[6,"N712",E,E,N,N],[6,"U713",E,E,N,N],[6,"P713",E,E,N,N],[6,"N713",E,E,N,N],[6,"U714",E,E,N,N],[6,"P714",E,E,N,N],[6,"N714",E,E,N,N],[6,"U715",E,E,N,N],[6,"P715",E,E,N,N],[6,"N715",E,E,N,N],[6,"U716",E,E,N,N],[6,"P716",E,E,N,N],[6,"N716",E,E,N,N],[6,"U717",E,E,N,N],[6,"P717",E,E,N,N],[6,"N717",E,E,N,N],[6,"U718",E,E,N,N],[6,"P718",E,E,N,N],[6,"N718",E,E,N,N],[6,"U719",E,E,N,N],[6,"P719",E,E,N,N],[6,"N719",E,E,N,N],[6,"U720",E,E,N,N],[6,"P720",E,E,N,N],[6,"N720",E,E,N,N],[6,"U721",E,E,N,N],[6,"P721",E,E,N,N],[6,"N721",E,E,N,N],[6,"U722",E,E,N,N],[6,"P722",E,E,N,N],[6,"N722",E,E,N,N],[6,"U723",E,E,N,N],[6,"P723",E,E,N,N],[6,"N723",E,E,N,N],[6,"U724",E,E,N,N],[6,"P724",E,E,N,N],[6,"N724",E,E,N,N],[6,"U725",E,E,N,N],[6,"P725",E,E,N,N],[6,"N725",E,E,N,N],[6,"U726",E,E,N,N],[6,"P726",E,E,N,N],[6,"N726",E,E,N,N],[6,"U727",E,E,N,N],[6,"P727",E,E,N,N],[6,"N727",E,E,N,N],[6,"U728",E,E,N,N],[6,"P728",E,E,N,N],[6,"N728",E,E,N,N],[6,"U729",E,E,N,N],[6,"P729",E,E,N,N],[6,"N729",E,E,N,N],[6,"U730",E,E,N,N],[6,"P730",E,E,N,N],[6,"N730",E,E,N,N],[6,"U731",E,E,N,N],[6,"P731",E,E,N,N],[6,"N731",E,E,N,N],[6,"U732",E,E,N,N],[6,"P732",E,E,N,N],[6,"N732",E,E,N,N],[6,"U733",E,E,N,N],[6,"P733",E,E,N,N],[6,"N733",E,E,N,N],[6,"U734",E,E,N,N],[6,"P734",E,E,N,N],[6,"N734",E,E,N,N],[6,"U735",E,E,N,N],[6,"P735",E,E,N,N],[6,"N735",E,E,N,N],[6,"U736",E,E,N,N],[6,"P736",E,E,N,N],[6,"N736",E,E,N,N],[6,"U737",E,E,N,N],[6,"P737",E,E,N,N],[6,"N737",E,E,N,N],[6,"U738",E,E,N,N],[6,"P738",E,E,N,N],[6,"N738",E,E,N,N],[6,"U739",E,E,N,N],[6,"P739",E,E,N,N],[6,"N739",E,E,N,N],[6,"U740",E,E,N,N],[6,"P740",E,E,N,N],[6,"N740",E,E,N,N],[6,"U741",E,E,N,N],[6,"P741",E,E,N,N],[6,"N741",E,E,N,N],[6,"U742",E,E,N,N],[6,"P742",E,E,N,N],[6,"N742",E,E,N,N],[6,"U743",E,E,N,N],[6,"P743",E,E,N,N],[6,"N743",E,E,N,N],[6,"U744",E,E,N,N],[6,"P744",E,E,N,N],[6,"N744",E,E,N,N],[6,"U745",E,E,N,N],[6,"P745",E,E,N,N],[6,"N745",E,E,N,N],[6,"U746",E,E,N,N],[6,"P746",E,E,N,N],[6,"N746",E,E,N,N],[6,"U747",E,E,N,N],[6,"P747",E,E,N,N],[6,"N747",E,E,N,N],[6,"U748",E,E,N,N],[6,"P748",E,E,N,N],[6,"N748",E,E,N,N],[6,"U749",E,E,N,N],[6,"P749",E,E,N,N],[6,"N749",E,E,N,N],[6,"U750",E,E,N,N],[6,"P750",E,E,N,N],[6,"N750",E,E,N,N],[6,"U751",E,E,N,N],[6,"P751",E,E,N,N],[6,"N751",E,E,N,N],[6,"U752",E,E,N,N],[6,"P752",E,E,N,N],[6,"N752",E,E,N,N],[6,"U753",E,E,N,N],[6,"P753",E,E,N,N],[6,"N753",E,E,N,N],[6,"U754",E,E,N,N],[6,"P754",E,E,N,N],[6,"N754",E,E,N,N],[6,"U755",E,E,N,N],[6,"P755",E,E,N,N],[6,"N755",E,E,N,N],[6,"U756",E,E,N,N],[6,"P756",E,E,N,N],[6,"N756",E,E,N,N],[6,"U757",E,E,N,N],[6,"P757",E,E,N,N],[6,"N757",E,E,N,N],[6,"U758",E,E,N,N],[6,"P758",E,E,N,N],[6,"N758",E,E,N,N],[6,"U759",E,E,N,N],[6,"P759",E,E,N,N],[6,"N759",E,E,N,N],[6,"U760",E,E,N,N],[6,"P760",E,E,N,N],[6,"N760",E,E,N,N],[6,"U761",E,E,N,N],[6,"P761",E,E,N,N],[6,"N761",E,E,N,N],[6,"U762",E,E,N,N],[6,"P762",E,E,N,N],[6,"N762",E,E,N,N],[6,"U763",E,E,N,N],[6,"P763",E,E,N,N],[6,"N763",E,E,N,N],[6,"U764",E,E,N,N],[6,"P764",E,E,N,N],[6,"N764",E,E,N,N],[6,"U765",E,E,N,N],[6,"P765",E,E,N,N],[6,"N765",E,E,N,N],[6,"U766",E,E,N,N],[6,"P766",E,E,N,N],[6,"N766",E,E,N,N],[6,"U767",E,E,N,N],[6,"P767",E,E,N,N],[6,"N767",E,E,N,N],[6,"U768",E,E,N,N],[6,"P768",E,E,N,N],[6,"N768",E,E,N,N],[6,"U769",E,E,N,N],[6,"P769",E,E,N,N],[6,"N769",E,E,N,N],[6,"U770",E,E,N,N],[6,"P770",E,E,N,N],[6,"N770",E,E,N,N],[6,"U771",E,E,N,N],[6,"P771",E,E,N,N],[6,"N771",E,E,N,N],[6,"U772",E,E,N,N],[6,"P772",E,E,N,N],[6,"N772",E,E,N,N],[6,"U773",E,E,N,N],[6,"P773",E,E,N,N],[6,"N773",E,E,N,N],[6,"U774",E,E,N,N],[6,"P774",E,E,N,N],[6,"N774",E,E,N,N],[6,"U775",E,E,N,N],[6,"P775",E,E,N,N],[6,"N775",E,E,N,N],[6,"U776",E,E,N,N],[6,"P776",E,E,N,N],[6,"N776",E,E,N,N],[6,"U777",E,E,N,N],[6,"P777",E,E,N,N],[6,"N777",E,E,N,N],[6,"U778",E,E,N,N],[6,"P778",E,E,N,N],[6,"N778",E,E,N,N],[6,"U779",E,E,N,N],[6,"P779",E,E,N,N],[6,"N779",E,E,N,N],[6,"U780",E,E,N,N],[6,"P780",E,E,N,N],[6,"N780",E,E,N,N],[6,"U781",E,E,N,N],[6,"P781",E,E,N,N],[6,"N781",E,E,N,N],[6,"U782",E,E,N,N],[6,"P782",E,E,N,N],[6,"N782",E,E,N,N],[6,"U783",E,E,N,N],[6,"P783",E,E,N,N],[6,"N783",E,E,N,N],[6,"U784",E,E,N,N],[6,"P784",E,E,N,N],[6,"N784",E,E,N,N],[6,"U785",E,E,N,N],[6,"P785",E,E,N,N],[6,"N785",E,E,N,N],[6,"U786",E,E,N,N],[6,"P786",E,E,N,N],[6,"N786",E,E,N,N],[6,"U787",E,E,N,N],[6,"P787",E,E,N,N],[6,"N787",E,E,N,N],[6,"U788",E,E,N,N],[6,"P788",E,E,N,N],[6,"N788",E,E,N,N],[6,"U789",E,E,N,N],[6,"P789",E,E,N,N],[6,"N789",E,E,N,N],[6,"U790",E,E,N,N],[6,"P790",E,E,N,N],[6,"N790",E,E,N,N],[6,"U791",E,E,N,N],[6,"P791",E,E,N,N],[6,"N791",E,E,N,N],[6,"U792",E,E,N,N],[6,"P792",E,E,N,N],[6,"N792",E,E,N,N],[6,"U793",E,E,N,N],[6,"P793",E,E,N,N],[6,"N793",E,E,N,N],[6,"U794",E,E,N,N],[6,"P794",E,E,N,N],[6,"N794",E,E,N,N],[6,"U795",E,E,N,N],[6,"P795",E,E,N,N],[6,"N795",E,E,N,N],[6,"U796",E,E,N,N],[6,"P796",E,E,N,N],[6,"N796",E,E,N,N],[6,"U797",E,E,N,N],[6,"P797",E,E,N,N],[6,"N797",E,E,N,N],[6,"U798",E,E,N,N],[6,"P798",E,E,N,N],[6,"N798",E,E,N,N],[6,"U799",E,E,N,N],[6,"P799",E,E,N,N],[6,"N799",E,E,N,N],[6,"U800",E,E,N,N],[6,"P800",E,E,N,N],[6,"N800",E,E,N,N],[6,"U801",E,E,N,N],[6,"P801",E,E,N,N],[6,"N801",E,E,N,N],[6,"U802",E,E,N,N],[6,"P802",E,E,N,N],[6,"N802",E,E,N,N],[6,"U803",E,E,N,N],[6,"P803",E,E,N,N],[6,"N803",E,E,N,N],[6,"U804",E,E,N,N],[6,"P804",E,E,N,N],[6,"N804",E,E,N,N],[6,"U805",E,E,N,N],[6,"P805",E,E,N,N],[6,"N805",E,E,N,N],[6,"U806",E,E,N,N],[6,"P806",E,E,N,N],[6,"N806",E,E,N,N],[6,"U807",E,E,N,N],[6,"P807",E,E,N,N],[6,"N807",E,E,N,N],[6,"U808",E,E,N,N],[6,"P808",E,E,N,N],[6,"N808",E,E,N,N],[6,"U809",E,E,N,N],[6,"P809",E,E,N,N],[6,"N809",E,E,N,N],[6,"U810",E,E,N,N],[6,"P810",E,E,N,N],[6,"N810",E,E,N,N],[6,"U811",E,E,N,N],[6,"P811",E,E,N,N],[6,"N811",E,E,N,N],[6,"U812",E,E,N,N],[6,"P812",E,E,N,N],[6,"N812",E,E,N,N],[6,"U813",E,E,N,N],[6,"P813",E,E,N,N],[6,"N813",E,E,N,N],[6,"U814",E,E,N,N],[6,"P814",E,E,N,N],[6,"N814",E,E,N,N],[6,"U815",E,E,N,N],[6,"P815",E,E,N,N],[6,"N815",E,E,N,N],[6,"U816",E,E,N,N],[6,"P816",E,E,N,N],[6,"N816",E,E,N,N],[6,"U817",E,E,N,N],[6,"P817",E,E,N,N],[6,"N817",E,E,N,N],[6,"U818",E,E,N,N],[6,"P818",E,E,N,N],[6,"N818",E,E,N,N],[6,"U819",E,E,N,N],[6,"P819",E,E,N,N],[6,"N819",E,E,N,N],[6,"U820",E,E,N,N],[6,"P820",E,E,N,N],[6,"N820",E,E,N,N],[6,"U821",E,E,N,N],[6,"P821",E,E,N,N],[6,"N821",E,E,N,N],[6,"U822",E,E,N,N],[6,"P822",E,E,N,N],[6,"N822",E,E,N,N],[6,"U823",E,E,N,N],[6,"P823",E,E,N,N],[6,"N823",E,E,N,N],[6,"U824",E,E,N,N],[6,"P824",E,E,N,N],[6,"N824",E,E,N,N],[6,"U825",E,E,N,N],[6,"P825",E,E,N,N],[6,"N825",E,E,N,N],[6,"U826",E,E,N,N],[6,"P826",E,E,N,N],[6,"N826",E,E,N,N],[6,"U827",E,E,N,N],[6,"P827",E,E,N,N],[6,"N827",E,E,N,N],[6,"U828",E,E,N,N],[6,"P828",E,E,N,N],[6,"N828",E,E,N,N],[6,"U829",E,E,N,N],[6,"P829",E,E,N,N],[6,"N829",E,E,N,N],[6,"U830",E,E,N,N],[6,"P830",E,E,N,N],[6,"N830",E,E,N,N],[6,"U831",E,E,N,N],[6,"P831",E,E,N,N],[6,"N831",E,E,N,N],[6,"U832",E,E,N,N],[6,"P832",E,E,N,N],[6,"N832",E,E,N,N],[6,"U833",E,E,N,N],[6,"P833",E,E,N,N],[6,"N833",E,E,N,N],[6,"U834",E,E,N,N],[6,"P834",E,E,N,N],[6,"N834",E,E,N,N],[6,"U835",E,E,N,N],[6,"P835",E,E,N,N],[6,"N835",E,E,N,N],[6,"U836",E,E,N,N],[6,"P836",E,E,N,N],[6,"N836",E,E,N,N],[6,"U837",E,E,N,N],[6,"P837",E,E,N,N],[6,"N837",E,E,N,N],[6,"U838",E,E,N,N],[6,"P838",E,E,N,N],[6,"N838",E,E,N,N],[6,"U839",E,E,N,N],[6,"P839",E,E,N,N],[6,"N839",E,E,N,N],[6,"U840",E,E,N,N],[6,"P840",E,E,N,N],[6,"N840",E,E,N,N],[6,"U841",E,E,N,N],[6,"P841",E,E,N,N],[6,"N841",E,E,N,N],[6,"U842",E,E,N,N],[6,"P842",E,E,N,N],[6,"N842",E,E,N,N],[6,"U843",E,E,N,N],[6,"P843",E,E,N,N],[6,"N843",E,E,N,N],[6,"U844",E,E,N,N],[6,"P844",E,E,N,N],[6,"N844",E,E,N,N],[6,"U845",E,E,N,N],[6,"P845",E,E,N,N],[6,"N845",E,E,N,N],[6,"U846",E,E,N,N],[6,"P846",E,E,N,N],[6,"N846",E,E,N,N],[6,"U847",E,E,N,N],[6,"P847",E,E,N,N],[6,"N847",E,E,N,N],[6,"U848",E,E,N,N],[6,"P848",E,E,N,N],[6,"N848",E,E,N,N],[6,"U849",E,E,N,N],[6,"P849",E,E,N,N],[6,"N849",E,E,N,N],[6,"U850",E,E,N,N],[6,"P850",E,E,N,N],[6,"N850",E,E,N,N],[6,"U851",E,E,N,N],[6,"P851",E,E,N,N],[6,"N851",E,E,N,N],[6,"U852",E,E,N,N],[6,"P852",E,E,N,N],[6,"N852",E,E,N,N],[6,"U853",E,E,N,N],[6,"P853",E,E,N,N],[6,"N853",E,E,N,N],[6,"U854",E,E,N,N],[6,"P854",E,E,N,N],[6,"N854",E,E,N,N],[6,"U855",E,E,N,N],[6,"P855",E,E,N,N],[6,"N855",E,E,N,N],[6,"U856",E,E,N,N],[6,"P856",E,E,N,N],[6,"N856",E,E,N,N],[6,"U857",E,E,N,N],[6,"P857",E,E,N,N],[6,"N857",E,E,N,N],[6,"U858",E,E,N,N],[6,"P858",E,E,N,N],[6,"N858",E,E,N,N],[6,"U859",E,E,N,N],[6,"P859",E,E,N,N],[6,"N859",E,E,N,N],[6,"U860",E,E,N,N],[6,"P860",E,E,N,N],[6,"N860",E,E,N,N],[6,"U861",E,E,N,N],[6,"P861",E,E,N,N],[6,"N861",E,E,N,N],[6,"U862",E,E,N,N],[6,"P862",E,E,N,N],[6,"N862",E,E,N,N],[6,"U863",E,E,N,N],[6,"P863",E,E,N,N],[6,"N863",E,E,N,N],[6,"U864",E,E,N,N],[6,"P864",E,E,N,N],[6,"N864",E,E,N,N],[6,"U865",E,E,N,N],[6,"P865",E,E,N,N],[6,"N865",E,E,N,N],[6,"U866",E,E,N,N],[6,"P866",E,E,N,N],[6,"N866",E,E,N,N],[6,"U867",E,E,N,N],[6,"P867",E,E,N,N],[6,"N867",E,E,N,N],[6,"U868",E,E,N,N],[6,"P868",E,E,N,N],[6,"N868",E,E,N,N],[6,"U869",E,E,N,N],[6,"P869",E,E,N,N],[6,"N869",E,E,N,N],[6,"U870",E,E,N,N],[6,"P870",E,E,N,N],[6,"N870",E,E,N,N],[6,"U871",E,E,N,N],[6,"P871",E,E,N,N],[6,"N871",E,E,N,N],[6,"U872",E,E,N,N],[6,"P872",E,E,N,N],[6,"N872",E,E,N,N],[6,"U873",E,E,N,N],[6,"P873",E,E,N,N],[6,"N873",E,E,N,N],[6,"U874",E,E,N,N],[6,"P874",E,E,N,N],[6,"N874",E,E,N,N],[6,"U875",E,E,N,N],[6,"P875",E,E,N,N],[6,"N875",E,E,N,N],[6,"U876",E,E,N,N],[6,"P876",E,E,N,N],[6,"N876",E,E,N,N],[6,"U877",E,E,N,N],[6,"P877",E,E,N,N],[6,"N877",E,E,N,N],[6,"U878",E,E,N,N],[6,"P878",E,E,N,N],[6,"N878",E,E,N,N],[6,"U879",E,E,N,N],[6,"P879",E,E,N,N],[6,"N879",E,E,N,N],[6,"U880",E,E,N,N],[6,"P880",E,E,N,N],[6,"N880",E,E,N,N],[6,"U881",E,E,N,N],[6,"P881",E,E,N,N],[6,"N881",E,E,N,N],[6,"U882",E,E,N,N],[6,"P882",E,E,N,N],[6,"N882",E,E,N,N],[6,"U883",E,E,N,N],[6,"P883",E,E,N,N],[6,"N883",E,E,N,N],[6,"U884",E,E,N,N],[6,"P884",E,E,N,N],[6,"N884",E,E,N,N],[6,"U885",E,E,N,N],[6,"P885",E,E,N,N],[6,"N885",E,E,N,N],[6,"U886",E,E,N,N],[6,"P886",E,E,N,N],[6,"N886",E,E,N,N],[6,"U887",E,E,N,N],[6,"P887",E,E,N,N],[6,"N887",E,E,N,N],[6,"U888",E,E,N,N],[6,"P888",E,E,N,N],[6,"N888",E,E,N,N],[6,"U889",E,E,N,N],[6,"P889",E,E,N,N],[6,"N889",E,E,N,N],[6,"U890",E,E,N,N],[6,"P890",E,E,N,N],[6,"N890",E,E,N,N],[6,"U891",E,E,N,N],[6,"P891",E,E,N,N],[6,"N891",E,E,N,N],[6,"U892",E,E,N,N],[6,"P892",E,E,N,N],[6,"N892",E,E,N,N],[6,"U893",E,E,N,N],[6,"P893",E,E,N,N],[6,"N893",E,E,N,N],[6,"U894",E,E,N,N],[6,"P894",E,E,N,N],[6,"N894",E,E,N,N],[6,"U895",E,E,N,N],[6,"P895",E,E,N,N],[6,"N895",E,E,N,N],[6,"U896",E,E,N,N],[6,"P896",E,E,N,N],[6,"N896",E,E,N,N],[6,"U897",E,E,N,N],[6,"P897",E,E,N,N],[6,"N897",E,E,N,N],[6,"U898",E,E,N,N],[6,"P898",E,E,N,N],[6,"N898",E,E,N,N],[6,"U899",E,E,N,N],[6,"P899",E,E,N,N],[6,"N899",E,E,N,N],[6,"U900",E,E,N,N],[6,"P900",E,E,N,N],[6,"N900",E,E,N,N],[6,"U901",E,E,N,N],[6,"P901",E,E,N,N],[6,"N901",E,E,N,N],[6,"U902",E,E,N,N],[6,"P902",E,E,N,N],[6,"N902",E,E,N,N],[6,"U903",E,E,N,N],[6,"P903",E,E,N,N],[6,"N903",E,E,N,N],[6,"U904",E,E,N,N],[6,"P904",E,E,N,N],[6,"N904",E,E,N,N],[6,"U905",E,E,N,N],[6,"P905",E,E,N,N],[6,"N905",E,E,N,N],[6,"U906",E,E,N,N],[6,"P906",E,E,N,N],[6,"N906",E,E,N,N],[6,"U907",E,E,N,N],[6,"P907",E,E,N,N],[6,"N907",E,E,N,N],[6,"U908",E,E,N,N],[6,"P908",E,E,N,N],[6,"N908",E,E,N,N],[6,"U909",E,E,N,N],[6,"P909",E,E,N,N],[6,"N909",E,E,N,N],[6,"U910",E,E,N,N],[6,"P910",E,E,N,N],[6,"N910",E,E,N,N],[6,"U911",E,E,N,N],[6,"P911",E,E,N,N],[6,"N911",E,E,N,N],[6,"U912",E,E,N,N],[6,"P912",E,E,N,N],[6,"N912",E,E,N,N],[6,"U913",E,E,N,N],[6,"P913",E,E,N,N],[6,"N913",E,E,N,N],[6,"U914",E,E,N,N],[6,"P914",E,E,N,N],[6,"N914",E,E,N,N],[6,"U915",E,E,N,N],[6,"P915",E,E,N,N],[6,"N915",E,E,N,N],[6,"U916",E,E,N,N],[6,"P916",E,E,N,N],[6,"N916",E,E,N,N],[6,"U917",E,E,N,N],[6,"P917",E,E,N,N],[6,"N917",E,E,N,N],[6,"U918",E,E,N,N],[6,"P918",E,E,N,N],[6,"N918",E,E,N,N],[6,"U919",E,E,N,N],[6,"P919",E,E,N,N],[6,"N919",E,E,N,N],[6,"U920",E,E,N,N],[6,"P920",E,E,N,N],[6,"N920",E,E,N,N],[6,"U921",E,E,N,N],[6,"P921",E,E,N,N],[6,"N921",E,E,N,N],[6,"U922",E,E,N,N],[6,"P922",E,E,N,N],[6,"N922",E,E,N,N],[6,"U923",E,E,N,N],[6,"P923",E,E,N,N],[6,"N923",E,E,N,N],[6,"U924",E,E,N,N],[6,"P924",E,E,N,N],[6,"N924",E,E,N,N],[6,"U925",E,E,N,N],[6,"P925",E,E,N,N],[6,"N925",E,E,N,N],[6,"U926",E,E,N,N],[6,"P926",E,E,N,N],[6,"N926",E,E,N,N],[6,"U927",E,E,N,N],[6,"P927",E,E,N,N],[6,"N927",E,E,N,N],[6,"U928",E,E,N,N],[6,"P928",E,E,N,N],[6,"N928",E,E,N,N],[6,"U929",E,E,N,N],[6,"P929",E,E,N,N],[6,"N929",E,E,N,N],[6,"U930",E,E,N,N],[6,"P930",E,E,N,N],[6,"N930",E,E,N,N],[6,"U931",E,E,N,N],[6,"P931",E,E,N,N],[6,"N931",E,E,N,N],[6,"U932",E,E,N,N],[6,"P932",E,E,N,N],[6,"N932",E,E,N,N],[6,"U933",E,E,N,N],[6,"P933",E,E,N,N],[6,"N933",E,E,N,N],[6,"U934",E,E,N,N],[6,"P934",E,E,N,N],[6,"N934",E,E,N,N],[6,"U935",E,E,N,N],[6,"P935",E,E,N,N],[6,"N935",E,E,N,N],[6,"U936",E,E,N,N],[6,"P936",E,E,N,N],[6,"N936",E,E,N,N],[6,"U937",E,E,N,N],[6,"P937",E,E,N,N],[6,"N937",E,E,N,N],[6,"U938",E,E,N,N],[6,"P938",E,E,N,N],[6,"N938",E,E,N,N],[6,"U939",E,E,N,N],[6,"P939",E,E,N,N],[6,"N939",E,E,N,N],[6,"U940",E,E,N,N],[6,"P940",E,E,N,N],[6,"N940",E,E,N,N],[6,"U941",E,E,N,N],[6,"P941",E,E,N,N],[6,"N941",E,E,N,N],[6,"U942",E,E,N,N],[6,"P942",E,E,N,N],[6,"N942",E,E,N,N],[6,"U943",E,E,N,N],[6,"P943",E,E,N,N],[6,"N943",E,E,N,N],[6,"U944",E,E,N,N],[6,"P944",E,E,N,N],[6,"N944",E,E,N,N],[6,"U945",E,E,N,N],[6,"P945",E,E,N,N],[6,"N945",E,E,N,N],[6,"U946",E,E,N,N],[6,"P946",E,E,N,N],[6,"N946",E,E,N,N],[6,"U947",E,E,N,N],[6,"P947",E,E,N,N],[6,"N947",E,E,N,N],[6,"U948",E,E,N,N],[6,"P948",E,E,N,N],[6,"N948",E,E,N,N],[6,"U949",E,E,N,N],[6,"P949",E,E,N,N],[6,"N949",E,E,N,N],[6,"U950",E,E,N,N],[6,"P950",E,E,N,N],[6,"N950",E,E,N,N],[6,"U951",E,E,N,N],[6,"P951",E,E,N,N],[6,"N951",E,E,N,N],[6,"U952",E,E,N,N],[6,"P952",E,E,N,N],[6,"N952",E,E,N,N],[6,"U953",E,E,N,N],[6,"P953",E,E,N,N],[6,"N953",E,E,N,N],[6,"U954",E,E,N,N],[6,"P954",E,E,N,N],[6,"N954",E,E,N,N],[6,"U955",E,E,N,N],[6,"P955",E,E,N,N],[6,"N955",E,E,N,N],[6,"U956",E,E,N,N],[6,"P956",E,E,N,N],[6,"N956",E,E,N,N],[6,"U957",E,E,N,N],[6,"P957",E,E,N,N],[6,"N957",E,E,N,N],[6,"U958",E,E,N,N],[6,"P958",E,E,N,N],[6,"N958",E,E,N,N],[6,"U959",E,E,N,N],[6,"P959",E,E,N,N],[6,"N959",E,E,N,N],[6,"U960",E,E,N,N],[6,"P960",E,E,N,N],[6,"N960",E,E,N,N],[6,"U961",E,E,N,N],[6,"P961",E,E,N,N],[6,"N961",E,E,N,N],[6,"U962",E,E,N,N],[6,"P962",E,E,N,N],[6,"N962",E,E,N,N],[6,"U963",E,E,N,N],[6,"P963",E,E,N,N],[6,"N963",E,E,N,N],[6,"U964",E,E,N,N],[6,"P964",E,E,N,N],[6,"N964",E,E,N,N],[6,"U965",E,E,N,N],[6,"P965",E,E,N,N],[6,"N965",E,E,N,N],[6,"U966",E,E,N,N],[6,"P966",E,E,N,N],[6,"N966",E,E,N,N],[6,"U967",E,E,N,N],[6,"P967",E,E,N,N],[6,"N967",E,E,N,N],[6,"U968",E,E,N,N],[6,"P968",E,E,N,N],[6,"N968",E,E,N,N],[6,"U969",E,E,N,N],[6,"P969",E,E,N,N],[6,"N969",E,E,N,N],[6,"U970",E,E,N,N],[6,"P970",E,E,N,N],[6,"N970",E,E,N,N],[6,"U971",E,E,N,N],[6,"P971",E,E,N,N],[6,"N971",E,E,N,N],[6,"U972",E,E,N,N],[6,"P972",E,E,N,N],[6,"N972",E,E,N,N],[6,"U973",E,E,N,N],[6,"P973",E,E,N,N],[6,"N973",E,E,N,N],[6,"U974",E,E,N,N],[6,"P974",E,E,N,N],[6,"N974",E,E,N,N],[6,"U975",E,E,N,N],[6,"P975",E,E,N,N],[6,"N975",E,E,N,N],[6,"U976",E,E,N,N],[6,"P976",E,E,N,N],[6,"N976",E,E,N,N],[6,"U977",E,E,N,N],[6,"P977",E,E,N,N],[6,"N977",E,E,N,N],[6,"U978",E,E,N,N],[6,"P978",E,E,N,N],[6,"N978",E,E,N,N],[6,"U979",E,E,N,N],[6,"P979",E,E,N,N],[6,"N979",E,E,N,N],[6,"U980",E,E,N,N],[6,"P980",E,E,N,N],[6,"N980",E,E,N,N],[6,"U981",E,E,N,N],[6,"P981",E,E,N,N],[6,"N981",E,E,N,N],[6,"U982",E,E,N,N],[6,"P982",E,E,N,N],[6,"N982",E,E,N,N],[6,"U983",E,E,N,N],[6,"P983",E,E,N,N],[6,"N983",E,E,N,N],[6,"U984",E,E,N,N],[6,"P984",E,E,N,N],[6,"N984",E,E,N,N],[6,"U985",E,E,N,N],[6,"P985",E,E,N,N],[6,"N985",E,E,N,N],[6,"U986",E,E,N,N],[6,"P986",E,E,N,N],[6,"N986",E,E,N,N],[6,"U987",E,E,N,N],[6,"P987",E,E,N,N],[6,"N987",E,E,N,N],[6,"U988",E,E,N,N],[6,"P988",E,E,N,N],[6,"N988",E,E,N,N],[6,"U989",E,E,N,N],[6,"P989",E,E,N,N],[6,"N989",E,E,N,N],[6,"U990",E,E,N,N],[6,"P990",E,E,N,N],[6,"N990",E,E,N,N],[6,"U991",E,E,N,N],[6,"P991",E,E,N,N],[6,"N991",E,E,N,N],[6,"U992",E,E,N,N],[6,"P992",E,E,N,N],[6,"N992",E,E,N,N],[6,"U993",E,E,N,N],[6,"P993",E,E,N,N],[6,"N993",E,E,N,N],[6,"U994",E,E,N,N],[6,"P994",E,E,N,N],[6,"N994",E,E,N,N],[6,"U995",E,E,N,N],[6,"P995",E,E,N,N],[6,"N995",E,E,N,N],[6,"U996",E,E,N,N],[6,"P996",E,E,N,N],[6,"N996",E,E,N,N],[6,"U997",E,E,N,N],[6,"P997",E,E,N,N],[6,"N997",E,E,N,N],[6,"U998",E,E,N,N],[6,"P998",E,E,N,N],[6,"N998",E,E,N,N],[6,"U999",E,E,N,N],[6,"P999",E,E,N,N],[6,"N999",E,E,N,N],[6,"U1000",E,E,N,N],[6,"P1000",E,E,N,N],[6,"N1000",E,E,N,N],[6,"U1001",E,E,N,N],[6,"P1001",E,E,N,N],[6,"N1001",E,E,N,N],[6,"U1002",E,E,N,N],[6,"P1002",E,E,N,N],[6,"N1002",E,E,N,N],[6,"U1003",E,E,N,N],[6,"P1003",E,E,N,N],[6,"N1003",E,E,N,N],[6,"U1004",E,E,N,N],[6,"P1004",E,E,N,N],[6,"N1004",E,E,N,N],[6,"U1005",E,E,N,N],[6,"P1005",E,E,N,N],[6,"N1005",E,E,N,N],[6,"U1006",E,E,N,N],[6,"P1006",E,E,N,N],[6,"N1006",E,E,N,N],[6,"U1007",E,E,N,N],[6,"P1007",E,E,N,N],[6,"N1007",E,E,N,N],[6,"U1008",E,E,N,N],[6,"P1008",E,E,N,N],[6,"N1008",E,E,N,N],[6,"U1009",E,E,N,N],[6,"P1009",E,E,N,N],[6,"N1009",E,E,N,N],[6,"U1010",E,E,N,N],[6,"P1010",E,E,N,N],[6,"N1010",E,E,N,N],[6,"U1011",E,E,N,N],[6,"P1011",E,E,N,N],[6,"N1011",E,E,N,N],[6,"U1012",E,E,N,N],[6,"P1012",E,E,N,N],[6,"N1012",E,E,N,N],[6,"U1013",E,E,N,N],[6,"P1013",E,E,N,N],[6,"N1013",E,E,N,N],[6,"U1014",E,E,N,N],[6,"P1014",E,E,N,N],[6,"N1014",E,E,N,N],[6,"U1015",E,E,N,N],[6,"P1015",E,E,N,N],[6,"N1015",E,E,N,N],[6,"U1016",E,E,N,N],[6,"P1016",E,E,N,N],[6,"N1016",E,E,N,N],[6,"U1017",E,E,N,N],[6,"P1017",E,E,N,N],[6,"N1017",E,E,N,N],[6,"U1018",E,E,N,N],[6,"P1018",E,E,N,N],[6,"N1018",E,E,N,N],[6,"U1019",E,E,N,N],[6,"P1019",E,E,N,N],[6,"N1019",E,E,N,N],[6,"U1020",E,E,N,N],[6,"P1020",E,E,N,N],[6,"N1020",E,E,N,N],[6,"U1021",E,E,N,N],[6,"P1021",E,E,N,N],[6,"N1021",E,E,N,N],[6,"U1022",E,E,N,N],[6,"P1022",E,E,N,N],[6,"N1022",E,E,N,N],[6,"U1023",E,E,N,N],[6,"P1023",E,E,N,N],[6,"N1023",E,E,N,N],[6,"U1024",E,E,N,N],[6,"P1024",E,E,N,N],[6,"N1024",E,E,N,N],[6,"U2048",E,E,N,N],[6,"P2048",E,E,N,N],[6,"N2048",E,E,N,N],[6,"U4096",E,E,N,N],[6,"P4096",E,E,N,N],[6,"N4096",E,E,N,N],[6,"U8192",E,E,N,N],[6,"P8192",E,E,N,N],[6,"N8192",E,E,N,N],[6,"U16384",E,E,N,N],[6,"P16384",E,E,N,N],[6,"N16384",E,E,N,N],[6,"U32768",E,E,N,N],[6,"P32768",E,E,N,N],[6,"N32768",E,E,N,N],[6,"U65536",E,E,N,N],[6,"P65536",E,E,N,N],[6,"N65536",E,E,N,N],[6,"U131072",E,E,N,N],[6,"P131072",E,E,N,N],[6,"N131072",E,E,N,N],[6,"U262144",E,E,N,N],[6,"P262144",E,E,N,N],[6,"N262144",E,E,N,N],[6,"U524288",E,E,N,N],[6,"P524288",E,E,N,N],[6,"N524288",E,E,N,N],[6,"U1048576",E,E,N,N],[6,"P1048576",E,E,N,N],[6,"N1048576",E,E,N,N],[6,"U2097152",E,E,N,N],[6,"P2097152",E,E,N,N],[6,"N2097152",E,E,N,N],[6,"U4194304",E,E,N,N],[6,"P4194304",E,E,N,N],[6,"N4194304",E,E,N,N],[6,"U8388608",E,E,N,N],[6,"P8388608",E,E,N,N],[6,"N8388608",E,E,N,N],[6,"U16777216",E,E,N,N],[6,"P16777216",E,E,N,N],[6,"N16777216",E,E,N,N],[6,"U33554432",E,E,N,N],[6,"P33554432",E,E,N,N],[6,"N33554432",E,E,N,N],[6,"U67108864",E,E,N,N],[6,"P67108864",E,E,N,N],[6,"N67108864",E,E,N,N],[6,"U134217728",E,E,N,N],[6,"P134217728",E,E,N,N],[6,"N134217728",E,E,N,N],[6,"U268435456",E,E,N,N],[6,"P268435456",E,E,N,N],[6,"N268435456",E,E,N,N],[6,"U536870912",E,E,N,N],[6,"P536870912",E,E,N,N],[6,"N536870912",E,E,N,N],[6,"U1073741824",E,E,N,N],[6,"P1073741824",E,E,N,N],[6,"N1073741824",E,E,N,N],[6,"U2147483648",E,E,N,N],[6,"P2147483648",E,E,N,N],[6,"N2147483648",E,E,N,N],[6,"U4294967296",E,E,N,N],[6,"P4294967296",E,E,N,N],[6,"N4294967296",E,E,N,N],[6,"U8589934592",E,E,N,N],[6,"P8589934592",E,E,N,N],[6,"N8589934592",E,E,N,N],[6,"U17179869184",E,E,N,N],[6,"P17179869184",E,E,N,N],[6,"N17179869184",E,E,N,N],[6,"U34359738368",E,E,N,N],[6,"P34359738368",E,E,N,N],[6,"N34359738368",E,E,N,N],[6,"U68719476736",E,E,N,N],[6,"P68719476736",E,E,N,N],[6,"N68719476736",E,E,N,N],[6,"U137438953472",E,E,N,N],[6,"P137438953472",E,E,N,N],[6,"N137438953472",E,E,N,N],[6,"U274877906944",E,E,N,N],[6,"P274877906944",E,E,N,N],[6,"N274877906944",E,E,N,N],[6,"U549755813888",E,E,N,N],[6,"P549755813888",E,E,N,N],[6,"N549755813888",E,E,N,N],[6,"U1099511627776",E,E,N,N],[6,"P1099511627776",E,E,N,N],[6,"N1099511627776",E,E,N,N],[6,"U2199023255552",E,E,N,N],[6,"P2199023255552",E,E,N,N],[6,"N2199023255552",E,E,N,N],[6,"U4398046511104",E,E,N,N],[6,"P4398046511104",E,E,N,N],[6,"N4398046511104",E,E,N,N],[6,"U8796093022208",E,E,N,N],[6,"P8796093022208",E,E,N,N],[6,"N8796093022208",E,E,N,N],[6,"U17592186044416",E,E,N,N],[6,"P17592186044416",E,E,N,N],[6,"N17592186044416",E,E,N,N],[6,"U35184372088832",E,E,N,N],[6,"P35184372088832",E,E,N,N],[6,"N35184372088832",E,E,N,N],[6,"U70368744177664",E,E,N,N],[6,"P70368744177664",E,E,N,N],[6,"N70368744177664",E,E,N,N],[6,"U140737488355328",E,E,N,N],[6,"P140737488355328",E,E,N,N],[6,"N140737488355328",E,E,N,N],[6,"U281474976710656",E,E,N,N],[6,"P281474976710656",E,E,N,N],[6,"N281474976710656",E,E,N,N],[6,"U562949953421312",E,E,N,N],[6,"P562949953421312",E,E,N,N],[6,"N562949953421312",E,E,N,N],[6,"U1125899906842624",E,E,N,N],[6,"P1125899906842624",E,E,N,N],[6,"N1125899906842624",E,E,N,N],[6,"U2251799813685248",E,E,N,N],[6,"P2251799813685248",E,E,N,N],[6,"N2251799813685248",E,E,N,N],[6,"U4503599627370496",E,E,N,N],[6,"P4503599627370496",E,E,N,N],[6,"N4503599627370496",E,E,N,N],[6,"U9007199254740992",E,E,N,N],[6,"P9007199254740992",E,E,N,N],[6,"N9007199254740992",E,E,N,N],[6,"U18014398509481984",E,E,N,N],[6,"P18014398509481984",E,E,N,N],[6,"N18014398509481984",E,E,N,N],[6,"U36028797018963968",E,E,N,N],[6,"P36028797018963968",E,E,N,N],[6,"N36028797018963968",E,E,N,N],[6,"U72057594037927936",E,E,N,N],[6,"P72057594037927936",E,E,N,N],[6,"N72057594037927936",E,E,N,N],[6,"U144115188075855872",E,E,N,N],[6,"P144115188075855872",E,E,N,N],[6,"N144115188075855872",E,E,N,N],[6,"U288230376151711744",E,E,N,N],[6,"P288230376151711744",E,E,N,N],[6,"N288230376151711744",E,E,N,N],[6,"U576460752303423488",E,E,N,N],[6,"P576460752303423488",E,E,N,N],[6,"N576460752303423488",E,E,N,N],[6,"U1152921504606846976",E,E,N,N],[6,"P1152921504606846976",E,E,N,N],[6,"N1152921504606846976",E,E,N,N],[6,"U2305843009213693952",E,E,N,N],[6,"P2305843009213693952",E,E,N,N],[6,"N2305843009213693952",E,E,N,N],[6,"U4611686018427387904",E,E,N,N],[6,"P4611686018427387904",E,E,N,N],[6,"N4611686018427387904",E,E,N,N],[6,"U9223372036854775808",E,E,N,N],[6,"U10000",E,E,N,N],[6,"P10000",E,E,N,N],[6,"N10000",E,E,N,N],[6,"U100000",E,E,N,N],[6,"P100000",E,E,N,N],[6,"N100000",E,E,N,N],[6,"U1000000",E,E,N,N],[6,"P1000000",E,E,N,N],[6,"N1000000",E,E,N,N],[6,"U10000000",E,E,N,N],[6,"P10000000",E,E,N,N],[6,"N10000000",E,E,N,N],[6,"U100000000",E,E,N,N],[6,"P100000000",E,E,N,N],[6,"N100000000",E,E,N,N],[6,"U1000000000",E,E,N,N],[6,"P1000000000",E,E,N,N],[6,"N1000000000",E,E,N,N],[6,"U10000000000",E,E,N,N],[6,"P10000000000",E,E,N,N],[6,"N10000000000",E,E,N,N],[6,"U100000000000",E,E,N,N],[6,"P100000000000",E,E,N,N],[6,"N100000000000",E,E,N,N],[6,"U1000000000000",E,E,N,N],[6,"P1000000000000",E,E,N,N],[6,"N1000000000000",E,E,N,N],[6,"U10000000000000",E,E,N,N],[6,"P10000000000000",E,E,N,N],[6,"N10000000000000",E,E,N,N],[6,"U100000000000000",E,E,N,N],[6,"P100000000000000",E,E,N,N],[6,"N100000000000000",E,E,N,N],[6,"U1000000000000000",E,E,N,N],[6,"P1000000000000000",E,E,N,N],[6,"N1000000000000000",E,E,N,N],[6,"U10000000000000000",E,E,N,N],[6,"P10000000000000000",E,E,N,N],[6,"N10000000000000000",E,E,N,N],[6,"U100000000000000000",E,E,N,N],[6,"P100000000000000000",E,E,N,N],[6,"N100000000000000000",E,E,N,N],[6,"U1000000000000000000",E,E,N,N],[6,"P1000000000000000000",E,E,N,N],[6,"N1000000000000000000",E,E,N,N],[6,"U10000000000000000000",E,E,N,N],[0,"bit",R[12],"Type-level bits.",N,N],[3,"B0",R[20],"The type-level bit 0.",N,N],[3,"B1",E,"The type-level bit 1.",N,N],[11,"new",E,R[11],0,[[],["b0"]]],[11,"new",E,R[11],1,[[],["b1"]]],[0,"int",R[12],"Type-level signed integers.",N,N],[3,"PInt",R[27],"Type-level signed integers with positive sign.",N,N],[3,"NInt",E,"Type-level signed integers with negative sign.",N,N],[3,"Z0",E,"The type-level signed integer 0.",N,N],[11,"new",E,R[13],2,[[],["pint"]]],[11,"new",E,R[13],3,[[],["nint"]]],[11,"new",E,"Instantiates a singleton representing the integer 0.",4,[[],["z0"]]],[0,"marker_traits",R[12],"All of the marker traits used in typenum.",N,N],[8,"NonZero","typenum::marker_traits","A marker trait to designate that a type is not zero. All…",N,N],[8,"Ord",E,"A Marker trait for the types `Greater`, `Equal`, and `Less`.",N,N],[10,R[31],E,E,5,[[],[R[32]]]],[8,"Bit",E,"The marker trait for compile time bits.",N,N],[18,"U8",E,E,6,N],[18,"BOOL",E,E,6,N],[10,"to_u8",E,E,6,[[],["u8"]]],[10,R[33],E,E,6,[[],["bool"]]],[8,R[45],E,"The marker trait for compile time unsigned integers.",N,N],[18,"U8",E,E,7,N],[18,"U16",E,E,7,N],[18,"U32",E,E,7,N],[18,"U64",E,E,7,N],[18,"USIZE",E,E,7,N],[18,"I8",E,E,7,N],[18,"I16",E,E,7,N],[18,"I32",E,E,7,N],[18,"I64",E,E,7,N],[18,"ISIZE",E,E,7,N],[10,"to_u8",E,E,7,[[],["u8"]]],[10,"to_u16",E,E,7,[[],["u16"]]],[10,"to_u32",E,E,7,[[],["u32"]]],[10,"to_u64",E,E,7,[[],["u64"]]],[10,R[34],E,E,7,[[],["usize"]]],[10,"to_i8",E,E,7,[[],["i8"]]],[10,R[35],E,E,7,[[],["i16"]]],[10,R[36],E,E,7,[[],["i32"]]],[10,R[37],E,E,7,[[],["i64"]]],[10,R[14],E,E,7,[[],["isize"]]],[8,"Integer",E,"The marker trait for compile time signed integers.",N,N],[18,"I8",E,E,8,N],[18,"I16",E,E,8,N],[18,"I32",E,E,8,N],[18,"I64",E,E,8,N],[18,"ISIZE",E,E,8,N],[10,"to_i8",E,E,8,[[],["i8"]]],[10,R[35],E,E,8,[[],["i16"]]],[10,R[36],E,E,8,[[],["i32"]]],[10,R[37],E,E,8,[[],["i64"]]],[10,R[14],E,E,8,[[],["isize"]]],[8,"TypeArray",E,"The marker trait for type-level arrays of type-level…",N,N],[8,"PowerOfTwo",E,"The marker trait for type-level numbers which are a power…",N,N],[0,"operator_aliases",R[12],"Aliases for the type operators used in this crate. Their…",N,N],[6,"And","typenum::operator_aliases","Alias for the associated type of `BitAnd`: `And<A, B> = <A…",N,N],[6,"Or",E,"Alias for the associated type of `BitOr`: `Or<A, B> = <A…",N,N],[6,"Xor",E,"Alias for the associated type of `BitXor`: `Xor<A, B> = <A…",N,N],[6,"Shleft",E,"Alias for the associated type of `Shl`: `Shleft<A, B> = <A…",N,N],[6,"Shright",E,"Alias for the associated type of `Shr`: `Shright<A, B> =…",N,N],[6,"Sum",E,"Alias for the associated type of `Add`: `Sum<A, B> = <A as…",N,N],[6,"Diff",E,"Alias for the associated type of `Sub`: `Diff<A, B> = <A…",N,N],[6,"Prod",E,"Alias for the associated type of `Mul`: `Prod<A, B> = <A…",N,N],[6,"Quot",E,"Alias for the associated type of `Div`: `Quot<A, B> = <A…",N,N],[6,"Mod",E,"Alias for the associated type of `Rem`: `Mod<A, B> = <A as…",N,N],[6,"PartialQuot",E,"Alias for the associated type of `PartialDiv`:…",N,N],[6,"Negate",E,"Alias for the associated type of `Neg`: `Negate<A> = <A as…",N,N],[6,"AbsVal",E,"Alias for the associated type of `Abs`: `AbsVal<A> = <A as…",N,N],[6,"Exp",E,"Alias for the associated type of `Pow`: `Exp<A, B> = <A as…",N,N],[6,"Add1",E,"Alias to make it easy to add 1: `Add1<A> = <A as…",N,N],[6,"Sub1",E,"Alias to make it easy to subtract 1: `Sub1<A> = <A as…",N,N],[6,"Double",E,"Alias to make it easy to multiply by 2. `Double<A> =…",N,N],[6,"Square",E,"Alias to make it easy to square. `Square<A> = <A as…",N,N],[6,"Cube",E,"Alias to make it easy to cube. `Cube<A> = <Square<A> as…",N,N],[6,"Sqrt",E,"Alias for the associated type of `SquareRoot`: `Sqrt<A> =…",N,N],[6,"Compare",E,"Alias for the associated type of `Cmp`: `Compare<A, B> =…",N,N],[6,"Length",E,"Alias for the associated type of `Len`: `Length<A> = <A as…",N,N],[6,"Minimum",E,"Alias for the associated type of `Min`: `Minimum<A, B> =…",N,N],[6,"Maximum",E,"Alias for the associated type of `Max`: `Maximum<A, B> =…",N,N],[6,"Le",E,"Alias for the associated type of `IsLess`: `Le<A, B> = <A…",N,N],[6,"Eq",E,"Alias for the associated type of `IsEqual`: `Eq<A, B> = <A…",N,N],[6,"Gr",E,"Alias for the associated type of `IsGreater`: `Gr<A, B> =…",N,N],[6,"GrEq",E,"Alias for the associated type of `IsGreaterOrEqual`:…",N,N],[6,"LeEq",E,"Alias for the associated type of `IsLessOrEqual`: `LeEq<A,…",N,N],[6,"NotEq",E,"Alias for the associated type of `IsNotEqual`: `NotEq<A,…",N,N],[6,"Log2",E,"Alias for the associated type of `Logarithm2`: `Log2<A> =…",N,N],[0,"type_operators",R[12],"Useful type operators that are not defined in `core::ops`.",N,N],[8,"Same","typenum::type_operators","A type operator that ensures that `Rhs` is the same as…",N,N],[16,R[15],E,"Should always be `Self`",9,N],[8,"Abs",E,"A type operator that returns the absolute value.",N,N],[16,R[15],E,"The absolute value.",10,N],[8,"Pow",E,"A type operator that provides exponentiation by repeated…",N,N],[16,R[15],E,"The result of the exponentiation.",11,N],[10,"powi",E,R[16],11,[[["exp"]]]],[8,"Cmp",E,"A type operator for comparing `Self` and `Rhs`. It…",N,N],[16,R[15],E,"The result of the comparison. It should only ever be one…",12,N],[8,"Len",E,"A type operator that gives the length of an `Array` or the…",N,N],[16,R[15],E,"The length as a type-level unsigned integer.",13,N],[10,"len",E,R[16],13,[[["self"]]]],[8,R[46],E,"Division as a partial function. This type operator…",N,N],[16,R[15],E,"The type of the result of the division",14,N],[10,R[28],E,"Method for performing the division",14,[[["rhs"]]]],[8,"Min",E,"A type operator that returns the minimum of `Self` and…",N,N],[16,R[15],E,"The type of the minimum of `Self` and `Rhs`",15,N],[10,"min",E,"Method returning the minimum",15,[[["rhs"]]]],[8,"Max",E,"A type operator that returns the maximum of `Self` and…",N,N],[16,R[15],E,"The type of the maximum of `Self` and `Rhs`",16,N],[10,"max",E,"Method returning the maximum",16,[[["rhs"]]]],[8,"IsLess",E,"A type operator that returns `True` if `Self < Rhs`,…",N,N],[16,R[15],E,R[17],17,N],[10,R[26],E,R[18],17,[[["rhs"]]]],[8,"IsEqual",E,"A type operator that returns `True` if `Self == Rhs`,…",N,N],[16,R[15],E,R[17],18,N],[10,R[21],E,R[18],18,[[["rhs"]]]],[8,R[47],E,"A type operator that returns `True` if `Self > Rhs`,…",N,N],[16,R[15],E,R[17],19,N],[10,R[22],E,R[18],19,[[["rhs"]]]],[8,R[48],E,"A type operator that returns `True` if `Self <= Rhs`,…",N,N],[16,R[15],E,R[17],20,N],[10,R[23],E,R[18],20,[[["rhs"]]]],[8,R[49],E,"A type operator that returns `True` if `Self != Rhs`,…",N,N],[16,R[15],E,R[17],21,N],[10,R[24],E,R[18],21,[[["rhs"]]]],[8,R[50],E,"A type operator that returns `True` if `Self >= Rhs`,…",N,N],[16,R[15],E,R[17],22,N],[10,R[25],E,R[18],22,[[["rhs"]]]],[8,R[51],E,"A type operator for taking the integer square root of…",N,N],[16,R[15],E,"The result of the integer square root.",23,N],[8,R[52],E,"A type operator for taking the integer binary logarithm of…",N,N],[16,R[15],E,"The result of the integer binary logarithm.",24,N],[0,"uint",R[12],"Type-level unsigned integers.",N,N],[3,"UTerm",R[29],"The terminating type for `UInt`; it always comes after the…",N,N],[3,"UInt",E,"`UInt` is defined recursively, where `B` is the least…",N,N],[6,"GetBitOut",E,E,N,N],[6,"SetBitOut",E,"Alias for the result of calling `SetBit`: `SetBitOut<N, I,…",N,N],[8,"GetBit",E,E,N,N],[16,R[15],E,E,25,N],[8,"SetBit",E,"A type operator that, when implemented for unsigned…",N,N],[16,R[15],E,E,26,N],[11,"new",E,R[19],27,[[],["uterm"]]],[11,"new",E,R[19],28,[[],["uint"]]],[0,"array",R[12],"A type-level array of type-level numbers.",N,N],[3,"ATerm",R[30],"The terminating type for type arrays.",N,N],[3,"TArr",E,"`TArr` is a type that acts as an array of types. It is…",N,N],[14,"op",R[12],"Convenient type operations.",N,N],[14,"cmp",E,"A convenience macro for comparing type numbers. Use `op!`…",N,N],[14,"tarr",E,"Create a new type-level arrray. Only usable on Rust 1.13.0…",N,N],[14,"assert_type_eq",E,"Asserts that two types are the same.",N,N],[14,"assert_type",E,"Asserts that a type is `True`, aka `B1`.",N,N],[11,"from",E,E,29,[[[T]],[T]]],[11,R[4],E,E,29,[[[U]],[R[1]]]],[11,"into",E,E,29,[[],[U]]],[11,R[5],E,E,29,[[],[R[1]]]],[11,R[6],E,E,29,[[["self"]],[T]]],[11,R[7],E,E,29,[[["self"]],[T]]],[11,R[8],E,E,29,[[["self"]],[R[9]]]],[11,"from",E,E,30,[[[T]],[T]]],[11,R[4],E,E,30,[[[U]],[R[1]]]],[11,"into",E,E,30,[[],[U]]],[11,R[5],E,E,30,[[],[R[1]]]],[11,R[6],E,E,30,[[["self"]],[T]]],[11,R[7],E,E,30,[[["self"]],[T]]],[11,R[8],E,E,30,[[["self"]],[R[9]]]],[11,"from",E,E,31,[[[T]],[T]]],[11,R[4],E,E,31,[[[U]],[R[1]]]],[11,"into",E,E,31,[[],[U]]],[11,R[5],E,E,31,[[],[R[1]]]],[11,R[6],E,E,31,[[["self"]],[T]]],[11,R[7],E,E,31,[[["self"]],[T]]],[11,R[8],E,E,31,[[["self"]],[R[9]]]],[11,R[26],R[20],E,0,[[["b"]]]],[11,R[21],E,E,0,[[["b"]]]],[11,R[22],E,E,0,[[["b"]]]],[11,R[23],E,E,0,[[["b"]]]],[11,R[24],E,E,0,[[["b"]]]],[11,R[25],E,E,0,[[["b"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,R[26],E,E,1,[[["b"]]]],[11,R[21],E,E,1,[[["b"]]]],[11,R[22],E,E,1,[[["b"]]]],[11,R[23],E,E,1,[[["b"]]]],[11,R[24],E,E,1,[[["b"]]]],[11,R[25],E,E,1,[[["b"]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"powi",R[27],E,2,[[["n"]]]],[11,R[28],E,E,2,[[["n"]]]],[11,R[26],E,E,2,[[["b"]]]],[11,R[21],E,E,2,[[["b"]]]],[11,R[22],E,E,2,[[["b"]]]],[11,R[23],E,E,2,[[["b"]]]],[11,R[24],E,E,2,[[["b"]]]],[11,R[25],E,E,2,[[["b"]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]],[11,"powi",E,E,3,[[["n"]]]],[11,R[28],E,E,3,[[["n"]]]],[11,R[26],E,E,3,[[["b"]]]],[11,R[21],E,E,3,[[["b"]]]],[11,R[22],E,E,3,[[["b"]]]],[11,R[23],E,E,3,[[["b"]]]],[11,R[24],E,E,3,[[["b"]]]],[11,R[25],E,E,3,[[["b"]]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[4],E,E,3,[[[U]],[R[1]]]],[11,"into",E,E,3,[[],[U]]],[11,R[5],E,E,3,[[],[R[1]]]],[11,R[6],E,E,3,[[["self"]],[T]]],[11,R[7],E,E,3,[[["self"]],[T]]],[11,R[8],E,E,3,[[["self"]],[R[9]]]],[11,"powi",E,E,4,[[["n"]]]],[11,R[28],E,E,4,[[["n"]]]],[11,R[26],E,E,4,[[["b"]]]],[11,R[21],E,E,4,[[["b"]]]],[11,R[22],E,E,4,[[["b"]]]],[11,R[23],E,E,4,[[["b"]]]],[11,R[24],E,E,4,[[["b"]]]],[11,R[25],E,E,4,[[["b"]]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[4],E,E,4,[[[U]],[R[1]]]],[11,"into",E,E,4,[[],[U]]],[11,R[5],E,E,4,[[],[R[1]]]],[11,R[6],E,E,4,[[["self"]],[T]]],[11,R[7],E,E,4,[[["self"]],[T]]],[11,R[8],E,E,4,[[["self"]],[R[9]]]],[11,"powi",R[29],E,27,[[["n"]]]],[11,R[28],E,E,27,[[["n"]]]],[11,R[26],E,E,27,[[["b"]]]],[11,R[21],E,E,27,[[["b"]]]],[11,R[22],E,E,27,[[["b"]]]],[11,R[23],E,E,27,[[["b"]]]],[11,R[24],E,E,27,[[["b"]]]],[11,R[25],E,E,27,[[["b"]]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[4],E,E,27,[[[U]],[R[1]]]],[11,"into",E,E,27,[[],[U]]],[11,R[5],E,E,27,[[],[R[1]]]],[11,R[6],E,E,27,[[["self"]],[T]]],[11,R[7],E,E,27,[[["self"]],[T]]],[11,R[8],E,E,27,[[["self"]],[R[9]]]],[11,"powi",E,E,28,[[["n"]]]],[11,R[28],E,E,28,[[["n"]]]],[11,R[26],E,E,28,[[["b"]]]],[11,R[21],E,E,28,[[["b"]]]],[11,R[22],E,E,28,[[["b"]]]],[11,R[23],E,E,28,[[["b"]]]],[11,R[24],E,E,28,[[["b"]]]],[11,R[25],E,E,28,[[["b"]]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[4],E,E,28,[[[U]],[R[1]]]],[11,"into",E,E,28,[[],[U]]],[11,R[5],E,E,28,[[],[R[1]]]],[11,R[6],E,E,28,[[["self"]],[T]]],[11,R[7],E,E,28,[[["self"]],[T]]],[11,R[8],E,E,28,[[["self"]],[R[9]]]],[11,R[28],R[30],E,32,[[["n"]]]],[11,"from",E,E,32,[[[T]],[T]]],[11,R[4],E,E,32,[[[U]],[R[1]]]],[11,"into",E,E,32,[[],[U]]],[11,R[5],E,E,32,[[],[R[1]]]],[11,R[6],E,E,32,[[["self"]],[T]]],[11,R[7],E,E,32,[[["self"]],[T]]],[11,R[8],E,E,32,[[["self"]],[R[9]]]],[11,R[28],E,E,33,[[["n"]]]],[11,"from",E,E,33,[[[T]],[T]]],[11,R[4],E,E,33,[[[U]],[R[1]]]],[11,"into",E,E,33,[[],[U]]],[11,R[5],E,E,33,[[],[R[1]]]],[11,R[6],E,E,33,[[["self"]],[T]]],[11,R[7],E,E,33,[[["self"]],[T]]],[11,R[8],E,E,33,[[["self"]],[R[9]]]],[11,R[31],R[12],E,29,[[],[R[32]]]],[11,R[31],E,E,30,[[],[R[32]]]],[11,R[31],E,E,31,[[],[R[32]]]],[11,"to_u8",R[20],E,0,[[],["u8"]]],[11,R[33],E,E,0,[[],["bool"]]],[11,"to_u8",E,E,1,[[],["u8"]]],[11,R[33],E,E,1,[[],["bool"]]],[11,"to_u8",R[29],E,27,[[],["u8"]]],[11,"to_u16",E,E,27,[[],["u16"]]],[11,"to_u32",E,E,27,[[],["u32"]]],[11,"to_u64",E,E,27,[[],["u64"]]],[11,R[34],E,E,27,[[],["usize"]]],[11,"to_i8",E,E,27,[[],["i8"]]],[11,R[35],E,E,27,[[],["i16"]]],[11,R[36],E,E,27,[[],["i32"]]],[11,R[37],E,E,27,[[],["i64"]]],[11,R[14],E,E,27,[[],["isize"]]],[11,"to_u8",E,E,28,[[],["u8"]]],[11,"to_u16",E,E,28,[[],["u16"]]],[11,"to_u32",E,E,28,[[],["u32"]]],[11,"to_u64",E,E,28,[[],["u64"]]],[11,R[34],E,E,28,[[],["usize"]]],[11,"to_i8",E,E,28,[[],["i8"]]],[11,R[35],E,E,28,[[],["i16"]]],[11,R[36],E,E,28,[[],["i32"]]],[11,R[37],E,E,28,[[],["i64"]]],[11,R[14],E,E,28,[[],["isize"]]],[11,"to_i8",R[27],E,4,[[],["i8"]]],[11,R[35],E,E,4,[[],["i16"]]],[11,R[36],E,E,4,[[],["i32"]]],[11,R[37],E,E,4,[[],["i64"]]],[11,R[14],E,E,4,[[],["isize"]]],[11,"to_i8",E,E,2,[[],["i8"]]],[11,R[35],E,E,2,[[],["i16"]]],[11,R[36],E,E,2,[[],["i32"]]],[11,R[37],E,E,2,[[],["i64"]]],[11,R[14],E,E,2,[[],["isize"]]],[11,"to_i8",E,E,3,[[],["i8"]]],[11,R[35],E,E,3,[[],["i16"]]],[11,R[36],E,E,3,[[],["i32"]]],[11,R[37],E,E,3,[[],["i64"]]],[11,R[14],E,E,3,[[],["isize"]]],[11,"powi",E,E,4,[[["z0"]]]],[11,"powi",E,E,4,[[["pint"]]]],[11,"powi",E,E,4,[[["nint"]]]],[11,"powi",R[12],E,34,[[["nint"]]]],[11,"powi",E,E,35,[[["nint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,35,[[["uint",["b1"]],["nint",["uint"]]]]],[11,"powi",R[27],E,2,[[["z0"]]]],[11,"powi",E,E,3,[[["z0"]]]],[11,"powi",E,E,2,[[["pint"]]]],[11,"powi",E,E,3,[[["pint",["uint"]],["uint",["b0"]]]]],[11,"powi",E,E,3,[[["pint",["uint"]],["uint",["b1"]]]]],[11,"len",R[29],E,27,[[["self"]]]],[11,"len",E,E,28,[[["self"]]]],[11,"len",R[30],E,32,[[["self"]]]],[11,"len",E,E,33,[[["self"]]]],[11,R[28],R[29],E,27,[[["uint"]]]],[11,R[28],E,E,28,[[["uint"]]]],[11,R[28],R[30],E,32,[[["rhs"]]]],[11,R[28],E,E,33,[[["rhs"]]]],[11,"min",R[20],E,0,[[["b0"]],["b0"]]],[11,"min",E,E,0,[[["b1"]],["b0"]]],[11,"min",E,E,1,[[["b0"]],["b0"]]],[11,"min",E,E,1,[[["b1"]],["b1"]]],[11,"min",R[27],E,4,[[["z0"]]]],[11,"min",E,E,4,[[["pint"]]]],[11,"min",E,E,4,[[["nint"]]]],[11,"min",E,E,2,[[["z0"]]]],[11,"min",E,E,3,[[["z0"]]]],[11,"min",E,E,2,[[["pint"]]]],[11,"min",E,E,3,[[["pint"]]]],[11,"min",E,E,2,[[["nint"]]]],[11,"min",E,E,3,[[["nint"]]]],[11,"min",R[29],E,27,[[[U]]]],[11,"min",E,E,28,[[["ur"]]]],[11,"max",R[20],E,0,[[["b0"]],["b0"]]],[11,"max",E,E,0,[[["b1"]],["b1"]]],[11,"max",E,E,1,[[["b0"]],["b1"]]],[11,"max",E,E,1,[[["b1"]],["b1"]]],[11,"max",R[27],E,4,[[["z0"]]]],[11,"max",E,E,4,[[["pint"]]]],[11,"max",E,E,4,[[["nint"]]]],[11,"max",E,E,2,[[["z0"]]]],[11,"max",E,E,3,[[["z0"]]]],[11,"max",E,E,2,[[["pint"]]]],[11,"max",E,E,3,[[["pint"]]]],[11,"max",E,E,2,[[["nint"]]]],[11,"max",E,E,3,[[["nint"]]]],[11,"max",R[29],E,27,[[[U]]]],[11,"max",E,E,28,[[["ur"]]]],[11,"eq",R[20],E,0,[[["self"],["b0"]],["bool"]]],[11,"eq",E,E,1,[[["self"],["b1"]],["bool"]]],[11,"eq",R[27],E,2,[[["self"],["pint"]],["bool"]]],[11,"ne",E,E,2,[[["self"],["pint"]],["bool"]]],[11,"eq",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"ne",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"eq",E,E,4,[[["self"],["z0"]],["bool"]]],[11,"eq",R[29],E,27,[[["self"],["uterm"]],["bool"]]],[11,"eq",E,E,28,[[["self"],["uint"]],["bool"]]],[11,"ne",E,E,28,[[["self"],["uint"]],["bool"]]],[11,"eq",R[30],E,32,[[["self"],["aterm"]],["bool"]]],[11,"eq",E,E,33,[[["self"],["tarr"]],["bool"]]],[11,"ne",E,E,33,[[["self"],["tarr"]],["bool"]]],[11,"eq",R[12],E,29,[[["self"],[R[40]]],["bool"]]],[11,"eq",E,E,30,[[["self"],["less"]],["bool"]]],[11,"eq",E,E,31,[[["self"],["equal"]],["bool"]]],[11,"cmp",R[20],E,0,[[["self"],["b0"]],[R[32]]]],[11,"cmp",E,E,1,[[["self"],["b1"]],[R[32]]]],[11,"cmp",R[27],E,2,[[["self"],["pint"]],[R[32]]]],[11,"cmp",E,E,3,[[["self"],["nint"]],[R[32]]]],[11,"cmp",E,E,4,[[["self"],["z0"]],[R[32]]]],[11,"cmp",R[29],E,27,[[["self"],["uterm"]],[R[32]]]],[11,"cmp",E,E,28,[[["self"],["uint"]],[R[32]]]],[11,"cmp",R[30],E,32,[[["self"],["aterm"]],[R[32]]]],[11,"cmp",E,E,33,[[["self"],["tarr"]],[R[32]]]],[11,"cmp",R[12],E,29,[[["self"],[R[40]]],[R[32]]]],[11,"cmp",E,E,30,[[["self"],["less"]],[R[32]]]],[11,"cmp",E,E,31,[[["self"],["equal"]],[R[32]]]],[11,R[38],R[20],E,0,[[["self"],["b0"]],[[R[39],[R[32]]],[R[32]]]]],[11,R[38],E,E,1,[[["self"],["b1"]],[[R[39],[R[32]]],[R[32]]]]],[11,R[38],R[27],E,2,[[["self"],["pint"]],[[R[39],[R[32]]],[R[32]]]]],[11,"lt",E,E,2,[[["self"],["pint"]],["bool"]]],[11,"le",E,E,2,[[["self"],["pint"]],["bool"]]],[11,"gt",E,E,2,[[["self"],["pint"]],["bool"]]],[11,"ge",E,E,2,[[["self"],["pint"]],["bool"]]],[11,R[38],E,E,3,[[["self"],["nint"]],[[R[39],[R[32]]],[R[32]]]]],[11,"lt",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"le",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"gt",E,E,3,[[["self"],["nint"]],["bool"]]],[11,"ge",E,E,3,[[["self"],["nint"]],["bool"]]],[11,R[38],E,E,4,[[["self"],["z0"]],[[R[39],[R[32]]],[R[32]]]]],[11,R[38],R[29],E,27,[[["self"],["uterm"]],[[R[39],[R[32]]],[R[32]]]]],[11,R[38],E,E,28,[[["self"],["uint"]],[[R[39],[R[32]]],[R[32]]]]],[11,"lt",E,E,28,[[["self"],["uint"]],["bool"]]],[11,"le",E,E,28,[[["self"],["uint"]],["bool"]]],[11,"gt",E,E,28,[[["self"],["uint"]],["bool"]]],[11,"ge",E,E,28,[[["self"],["uint"]],["bool"]]],[11,R[38],R[30],E,32,[[["self"],["aterm"]],[[R[39],[R[32]]],[R[32]]]]],[11,R[38],E,E,33,[[["self"],["tarr"]],[[R[39],[R[32]]],[R[32]]]]],[11,"lt",E,E,33,[[["self"],["tarr"]],["bool"]]],[11,"le",E,E,33,[[["self"],["tarr"]],["bool"]]],[11,"gt",E,E,33,[[["self"],["tarr"]],["bool"]]],[11,"ge",E,E,33,[[["self"],["tarr"]],["bool"]]],[11,R[38],R[12],E,29,[[["self"],[R[40]]],[[R[39],[R[32]]],[R[32]]]]],[11,R[38],E,E,30,[[["self"],["less"]],[[R[39],[R[32]]],[R[32]]]]],[11,R[38],E,E,31,[[["self"],["equal"]],[[R[39],[R[32]]],[R[32]]]]],[11,"hash",R[20],E,0,[[["self"],["__h"]]]],[11,"hash",E,E,1,[[["self"],["__h"]]]],[11,"hash",R[27],E,2,[[["self"],["__h"]]]],[11,"hash",E,E,3,[[["self"],["__h"]]]],[11,"hash",E,E,4,[[["self"],["__h"]]]],[11,"hash",R[29],E,27,[[["self"],["__h"]]]],[11,"hash",E,E,28,[[["self"],["__h"]]]],[11,"hash",R[30],E,32,[[["self"],["__h"]]]],[11,"hash",E,E,33,[[["self"],["__h"]]]],[11,"hash",R[12],E,29,[[["self"],["__h"]]]],[11,"hash",E,E,30,[[["self"],["__h"]]]],[11,"hash",E,E,31,[[["self"],["__h"]]]],[11,"add",R[27],E,4,[[["i"]]]],[11,"add",E,E,2,[[["z0"]]]],[11,"add",E,E,3,[[["z0"]]]],[11,"add",E,E,2,[[["pint"]]]],[11,"add",E,E,3,[[["nint"]]]],[11,"add",E,E,2,[[["nint"]]]],[11,"add",E,E,3,[[["pint"]]]],[11,"add",R[29],E,27,[[["b0"]]]],[11,"add",E,E,28,[[["b0"]]]],[11,"add",E,E,27,[[["b1"]]]],[11,"add",E,E,28,[[["b1"]]]],[11,"add",E,E,28,[[["b1"]]]],[11,"add",E,E,27,[[[U]]]],[11,"add",E,E,28,[[["uterm"]]]],[11,"add",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,28,[[["uint",["b1"]],["b1"]]]],[11,"add",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"add",E,E,28,[[["uint",["b1"]],["b1"]]]],[11,"add",R[30],E,32,[[["aterm"]]]],[11,"add",E,E,33,[[["tarr"]]]],[11,"sub",R[27],E,4,[[["z0"]]]],[11,"sub",E,E,4,[[["pint"]]]],[11,"sub",E,E,4,[[["nint"]]]],[11,"sub",E,E,2,[[["z0"]]]],[11,"sub",E,E,3,[[["z0"]]]],[11,"sub",E,E,2,[[["nint"]]]],[11,"sub",E,E,3,[[["pint"]]]],[11,"sub",E,E,2,[[["pint"]]]],[11,"sub",E,E,3,[[["nint"]]]],[11,"sub",R[29],E,27,[[["b0"]]]],[11,"sub",E,E,28,[[["b0"]]]],[11,"sub",E,E,28,[[["b1"]]]],[11,"sub",E,E,28,[[["b1"]]]],[11,"sub",E,E,28,[[["b1"]]]],[11,"sub",E,E,27,[[["uterm"]]]],[11,"sub",E,E,28,[[["ur"]]]],[11,"sub",R[30],E,32,[[["aterm"]]]],[11,"sub",E,E,33,[[["tarr"]]]],[11,"mul",R[27],E,4,[[["i"]]]],[11,"mul",E,E,2,[[["z0"]]]],[11,"mul",E,E,3,[[["z0"]]]],[11,"mul",E,E,2,[[["pint"]]]],[11,"mul",E,E,3,[[["nint"]]]],[11,"mul",E,E,2,[[["nint"]]]],[11,"mul",E,E,3,[[["pint"]]]],[11,"mul",R[29],E,28,[[["b0"]]]],[11,"mul",E,E,27,[[["b0"]]]],[11,"mul",E,E,27,[[["b1"]]]],[11,"mul",E,E,28,[[["b1"]]]],[11,"mul",E,E,28,[[["uterm"]]]],[11,"mul",E,E,27,[[[U]]]],[11,"mul",E,E,28,[[["uint"]]]],[11,"mul",E,E,28,[[["uint"]]]],[11,"mul",R[30],E,32,[[["rhs"]]]],[11,"mul",E,E,33,[[["rhs"]]]],[11,"mul",R[27],E,4,[[["aterm"]]]],[11,"mul",E,E,2,[[["aterm"]]]],[11,"mul",E,E,3,[[["aterm"]]]],[11,"mul",E,E,4,[[["tarr"]]]],[11,"mul",E,E,2,[[["tarr"]]]],[11,"mul",E,E,3,[[["tarr"]]]],[11,"div",E,E,4,[[["i"]]]],[11,"div",E,E,2,[[["pint"]]]],[11,"div",E,E,2,[[["nint"]]]],[11,"div",E,E,3,[[["pint"]]]],[11,"div",E,E,3,[[["nint"]]]],[11,"div",R[29],E,27,[[["uint"]]]],[11,"div",E,E,28,[[["uint"]]]],[11,"div",R[30],E,32,[[["rhs"]]]],[11,"div",E,E,33,[[["rhs"]]]],[11,"rem",R[27],E,4,[[["i"]]]],[11,"rem",E,E,2,[[["pint"]]]],[11,"rem",E,E,2,[[["nint"]]]],[11,"rem",E,E,3,[[["pint"]]]],[11,"rem",E,E,3,[[["nint"]]]],[11,"rem",R[29],E,27,[[["uint"]]]],[11,"rem",E,E,28,[[["uint"]]]],[11,"rem",R[30],E,32,[[["rhs"]]]],[11,"rem",E,E,33,[[["rhs"]]]],[11,"neg",R[27],E,4,[[]]],[11,"neg",E,E,2,[[]]],[11,"neg",E,E,3,[[]]],[11,"neg",R[30],E,32,[[]]],[11,"neg",E,E,33,[[]]],[11,"not",R[20],E,0,[[]]],[11,"not",E,E,1,[[]]],[11,R[41],E,E,0,[[["rhs"]]]],[11,R[41],E,E,1,[[["b0"]]]],[11,R[41],E,E,1,[[["b1"]]]],[11,R[41],R[29],E,27,[[["ur"]]]],[11,R[41],E,E,28,[[["ur"]]]],[11,"bitor",R[20],E,0,[[["b0"]]]],[11,"bitor",E,E,0,[[["b1"]]]],[11,"bitor",E,E,1,[[["rhs"]]]],[11,"bitor",R[29],E,27,[[[U]]]],[11,"bitor",E,E,28,[[["uterm"]]]],[11,"bitor",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,28,[[["uint",["b1"]],["b1"]]]],[11,"bitor",E,E,28,[[["b0"],["uint",["b0"]]]]],[11,"bitor",E,E,28,[[["uint",["b1"]],["b1"]]]],[11,R[42],R[20],E,0,[[["b0"]]]],[11,R[42],E,E,1,[[["b0"]]]],[11,R[42],E,E,0,[[["b1"]]]],[11,R[42],E,E,1,[[["b1"]]]],[11,R[42],R[29],E,27,[[["ur"]]]],[11,R[42],E,E,28,[[["ur"]]]],[11,"shl",E,E,27,[[["b0"]]]],[11,"shl",E,E,27,[[["b1"]]]],[11,"shl",E,E,28,[[["b0"]]]],[11,"shl",E,E,28,[[["b1"]]]],[11,"shl",E,E,28,[[["uterm"]]]],[11,"shl",E,E,27,[[[U]]]],[11,"shl",E,E,28,[[["uint"]]]],[11,"shr",E,E,27,[[[U]]]],[11,"shr",E,E,28,[[["uterm"]]]],[11,"shr",E,E,27,[[["b0"]]]],[11,"shr",E,E,27,[[["b1"]]]],[11,"shr",E,E,28,[[["b0"]]]],[11,"shr",E,E,28,[[["b1"]]]],[11,"shr",E,E,28,[[["uint"]]]],[11,"fmt",R[20],E,0,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,1,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[27],E,2,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,3,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,4,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[29],E,27,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,28,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[30],E,32,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,33,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",R[12],E,29,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,30,[[["self"],[R[43]]],[R[1]]]],[11,"fmt",E,E,31,[[["self"],[R[43]]],[R[1]]]],[11,"clone",R[20],E,0,[[["self"]],["b0"]]],[11,"clone",E,E,1,[[["self"]],["b1"]]],[11,"clone",R[27],E,2,[[["self"]],["pint"]]],[11,"clone",E,E,3,[[["self"]],["nint"]]],[11,"clone",E,E,4,[[["self"]],["z0"]]],[11,"clone",R[29],E,27,[[["self"]],["uterm"]]],[11,"clone",E,E,28,[[["self"]],["uint"]]],[11,"clone",R[30],E,32,[[["self"]],["aterm"]]],[11,"clone",E,E,33,[[["self"]],["tarr"]]],[11,"clone",R[12],E,29,[[["self"]],[R[40]]]],[11,"clone",E,E,30,[[["self"]],["less"]]],[11,"clone",E,E,31,[[["self"]],["equal"]]],[11,R[44],R[20],E,0,[[],["b0"]]],[11,R[44],E,E,1,[[],["b1"]]],[11,R[44],R[27],E,2,[[],["pint"]]],[11,R[44],E,E,3,[[],["nint"]]],[11,R[44],E,E,4,[[],["z0"]]],[11,R[44],R[29],E,27,[[],["uterm"]]],[11,R[44],E,E,28,[[],["uint"]]],[11,R[44],R[12],E,29,[[],[R[40]]]],[11,R[44],E,E,30,[[],["less"]]],[11,R[44],E,E,31,[[],["equal"]]]],"p":[[3,"B0"],[3,"B1"],[3,"PInt"],[3,"NInt"],[3,"Z0"],[8,"Ord"],[8,"Bit"],[8,R[45]],[8,"Integer"],[8,"Same"],[8,"Abs"],[8,"Pow"],[8,"Cmp"],[8,"Len"],[8,R[46]],[8,"Min"],[8,"Max"],[8,"IsLess"],[8,"IsEqual"],[8,R[47]],[8,R[48]],[8,R[49]],[8,R[50]],[8,R[51]],[8,R[52]],[8,"GetBit"],[8,"SetBit"],[3,"UTerm"],[3,"UInt"],[3,"Greater"],[3,"Less"],[3,"Equal"],[3,"ATerm"],[3,"TArr"],[6,"P1"],[6,"N1"]]};
searchIndex["vcell"]={"doc":R[0],"i":[[3,R[2],"vcell",R[0],N,N],[11,"new",E,"Creates a new `VolatileCell` containing the given value",0,[[[T]],["self"]]],[11,"get",E,"Returns a copy of the contained value",0,[[["self"]],[T]]],[11,"set",E,"Sets the contained value",0,[[["self"],[T]]]],[11,"as_ptr",E,"Returns a raw pointer to the underlying data in the cell",0,[[["self"]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]]],"p":[[3,R[2]]]};
searchIndex["volatile_register"]={"doc":"Volatile access to memory mapped hardware registers","i":[[3,"RO","volatile_register","Read-Only register",N,N],[3,"RW",E,"Read-Write register",N,N],[3,"WO",E,"Write-Only register",N,N],[11,"read",E,R[3],0,[[["self"]],[T]]],[11,"modify",E,"Performs a read-modify-write operation",1,[[["self"],["f"]]]],[11,"read",E,R[3],1,[[["self"]],[T]]],[11,"write",E,"Writes a `value` into the register",1,[[["self"],[T]]]],[11,"write",E,"Writes `value` into the register",2,[[["self"],[T]]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[4],E,E,0,[[[U]],[R[1]]]],[11,"into",E,E,0,[[],[U]]],[11,R[5],E,E,0,[[],[R[1]]]],[11,R[6],E,E,0,[[["self"]],[T]]],[11,R[7],E,E,0,[[["self"]],[T]]],[11,R[8],E,E,0,[[["self"]],[R[9]]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[4],E,E,1,[[[U]],[R[1]]]],[11,"into",E,E,1,[[],[U]]],[11,R[5],E,E,1,[[],[R[1]]]],[11,R[6],E,E,1,[[["self"]],[T]]],[11,R[7],E,E,1,[[["self"]],[T]]],[11,R[8],E,E,1,[[["self"]],[R[9]]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[4],E,E,2,[[[U]],[R[1]]]],[11,"into",E,E,2,[[],[U]]],[11,R[5],E,E,2,[[],[R[1]]]],[11,R[6],E,E,2,[[["self"]],[T]]],[11,R[7],E,E,2,[[["self"]],[T]]],[11,R[8],E,E,2,[[["self"]],[R[9]]]]],"p":[[3,"RO"],[3,"RW"],[3,"WO"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);